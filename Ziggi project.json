{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"ZiggiToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract ZiggiToken is ERC20, Ownable {\\r\\n    mapping(address => bool) private isBlacklisted;\\r\\n    mapping(address => bool) private isExcludedFromFees;\\r\\n\\r\\n    uint256 public burnFee = 2; // 2% Burn Fee\\r\\n    uint256 public rewardFee = 1; // 1% Reward Fee\\r\\n    uint256 public devFee = 1; // 1% Dev Fee\\r\\n    uint256 public liquidityFee = 5; // 5% Liquidity Fee\\r\\n    uint256 public maxTxAmount; // Max transfer amount\\r\\n    bool public tradingEnabled = false;\\r\\n    \\r\\n    address public devWallet;\\r\\n\\r\\n    constructor() ERC20(\\\"Ziggi\\\", \\\"ZIGGI\\\") Ownable(msg.sender) {\\r\\n        uint256 totalSupply = 1_000_000 * 10 ** decimals();\\r\\n        _mint(msg.sender, totalSupply);\\r\\n        maxTxAmount = totalSupply / 100; // 1% of total supply\\r\\n        devWallet = msg.sender;\\r\\n        isExcludedFromFees[msg.sender] = true;\\r\\n    }\\r\\n\\r\\n    function enableTrading() external onlyOwner {\\r\\n        tradingEnabled = true;\\r\\n    }\\r\\n\\r\\n    function setBlacklist(address account, bool status) external onlyOwner {\\r\\n        isBlacklisted[account] = status;\\r\\n    }\\r\\n\\r\\n    function excludeFromFees(address account, bool status) external onlyOwner {\\r\\n        isExcludedFromFees[account] = status;\\r\\n    }\\r\\n\\r\\n    function setFees(uint256 _burnFee, uint256 _rewardFee, uint256 _devFee, uint256 _liquidityFee) external onlyOwner {\\r\\n        burnFee = _burnFee;\\r\\n        rewardFee = _rewardFee;\\r\\n        devFee = _devFee;\\r\\n        liquidityFee = _liquidityFee;\\r\\n    }\\r\\n\\r\\n    function setMaxTxAmount(uint256 _maxTxAmount) external onlyOwner {\\r\\n        maxTxAmount = _maxTxAmount;\\r\\n    }\\r\\n\\r\\n    function setDevWallet(address _devWallet) external onlyOwner {\\r\\n        devWallet = _devWallet;\\r\\n    }\\r\\n\\r\\n    function _update(address from, address to, uint256 amount) internal override {\\r\\n        require(!isBlacklisted[from] && !isBlacklisted[to], \\\"Address is blacklisted\\\");\\r\\n        require(tradingEnabled || isExcludedFromFees[from], \\\"Trading is not enabled yet\\\");\\r\\n        require(amount <= maxTxAmount || isExcludedFromFees[from], \\\"Transfer amount exceeds max limit\\\");\\r\\n\\r\\n        uint256 burnAmount = (amount * burnFee) / 100;\\r\\n        uint256 rewardAmount = (amount * rewardFee) / 100;\\r\\n        uint256 devAmount = (amount * devFee) / 100;\\r\\n        uint256 liquidityAmount = (amount * liquidityFee) / 100;\\r\\n        uint256 sendAmount = amount - burnAmount - rewardAmount - devAmount - liquidityAmount;\\r\\n\\r\\n        if (burnAmount > 0) {\\r\\n            _burn(from, burnAmount);\\r\\n        }\\r\\n        if (devAmount > 0) {\\r\\n            super._update(from, devWallet, devAmount);\\r\\n        }\\r\\n\\r\\n        super._update(from, to, sendAmount);\\r\\n    }\\r\\n}\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":false,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "ZiggiToken",
	"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"}],\"name\":\"setDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_devFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ZiggiToken.sol\":\"ZiggiToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ZiggiToken.sol\":{\"keccak256\":\"0x575ba0633b02bc60ca8b846caafd0a097dc150589a154c54d96fadba10095673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9cea4969f5032ceebb67edbaa7feb3e488f50a0e9f074c5d1a8361423132be\",\"dweb:/ipfs/QmPmao4aDHLH8kei94m5acs3Y3EkdyRJPv5GF45Xag2fTx\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_1013": {
				"entryPoint": null,
				"id": 1013,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_336": {
				"entryPoint": null,
				"id": 336,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_50": {
				"entryPoint": null,
				"id": 50,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_burn_672": {
				"entryPoint": 1708,
				"id": 672,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_mint_639": {
				"entryPoint": 769,
				"id": 639,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_transferOwnership_146": {
				"entryPoint": 566,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_update_1232": {
				"entryPoint": 902,
				"id": 1232,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_update_606": {
				"entryPoint": 1841,
				"id": 606,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@decimals_363": {
				"entryPoint": 761,
				"id": 363,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 3206,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 4140,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 3998,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 3894,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 4306,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 3221,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 4321,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4174,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 4032,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 3928,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 4374,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"array_dataslot_t_string_storage": {
				"entryPoint": 2526,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 2378,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 3838,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 4255,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_div_t_uint256": {
				"entryPoint": 3790,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_exp_helper": {
				"entryPoint": 3303,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 2
			},
			"checked_exp_t_uint256_t_uint8": {
				"entryPoint": 3606,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_exp_unsigned": {
				"entryPoint": 3385,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 3680,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 4204,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"clean_up_bytearray_end_slots_t_string_storage": {
				"entryPoint": 2814,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"cleanup_t_address": {
				"entryPoint": 3189,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 3158,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 2652,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint8": {
				"entryPoint": 3594,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"clear_storage_range_t_bytes1": {
				"entryPoint": 2780,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"convert_t_uint256_to_t_uint256": {
				"entryPoint": 2670,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
				"entryPoint": 2951,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"divide_by_32_ceil": {
				"entryPoint": 2544,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 2478,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_used_part_and_set_length_of_short_byte_array": {
				"entryPoint": 2924,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"identity": {
				"entryPoint": 2661,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"mask_bytes_dynamic": {
				"entryPoint": 2896,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 3246,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x12": {
				"entryPoint": 3745,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 2433,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 2388,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"prepare_store_t_uint256": {
				"entryPoint": 2703,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"shift_left_dynamic": {
				"entryPoint": 2559,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"shift_right_1_unsigned": {
				"entryPoint": 3291,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"shift_right_unsigned_dynamic": {
				"entryPoint": 2884,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"storage_set_to_zero_t_uint256": {
				"entryPoint": 2756,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264": {
				"entryPoint": 4062,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33": {
				"entryPoint": 3958,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53": {
				"entryPoint": 3854,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"update_byte_slice_dynamic32": {
				"entryPoint": 2571,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"update_storage_value_t_uint256_to_t_uint256": {
				"entryPoint": 2712,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"zero_value_for_split_t_uint256": {
				"entryPoint": 2749,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:13565:7",
					"nodeType": "YulBlock",
					"src": "0:13565:7",
					"statements": [
						{
							"body": {
								"nativeSrc": "66:40:7",
								"nodeType": "YulBlock",
								"src": "66:40:7",
								"statements": [
									{
										"nativeSrc": "77:22:7",
										"nodeType": "YulAssignment",
										"src": "77:22:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "93:5:7",
													"nodeType": "YulIdentifier",
													"src": "93:5:7"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "87:5:7",
												"nodeType": "YulIdentifier",
												"src": "87:5:7"
											},
											"nativeSrc": "87:12:7",
											"nodeType": "YulFunctionCall",
											"src": "87:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "77:6:7",
												"nodeType": "YulIdentifier",
												"src": "77:6:7"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nativeSrc": "7:99:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "49:5:7",
									"nodeType": "YulTypedName",
									"src": "49:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "59:6:7",
									"nodeType": "YulTypedName",
									"src": "59:6:7",
									"type": ""
								}
							],
							"src": "7:99:7"
						},
						{
							"body": {
								"nativeSrc": "140:152:7",
								"nodeType": "YulBlock",
								"src": "140:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "157:1:7",
													"nodeType": "YulLiteral",
													"src": "157:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "160:77:7",
													"nodeType": "YulLiteral",
													"src": "160:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "150:6:7",
												"nodeType": "YulIdentifier",
												"src": "150:6:7"
											},
											"nativeSrc": "150:88:7",
											"nodeType": "YulFunctionCall",
											"src": "150:88:7"
										},
										"nativeSrc": "150:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "150:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "254:1:7",
													"nodeType": "YulLiteral",
													"src": "254:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "257:4:7",
													"nodeType": "YulLiteral",
													"src": "257:4:7",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "247:6:7",
												"nodeType": "YulIdentifier",
												"src": "247:6:7"
											},
											"nativeSrc": "247:15:7",
											"nodeType": "YulFunctionCall",
											"src": "247:15:7"
										},
										"nativeSrc": "247:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "247:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "278:1:7",
													"nodeType": "YulLiteral",
													"src": "278:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "281:4:7",
													"nodeType": "YulLiteral",
													"src": "281:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "271:6:7",
												"nodeType": "YulIdentifier",
												"src": "271:6:7"
											},
											"nativeSrc": "271:15:7",
											"nodeType": "YulFunctionCall",
											"src": "271:15:7"
										},
										"nativeSrc": "271:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "271:15:7"
									}
								]
							},
							"name": "panic_error_0x41",
							"nativeSrc": "112:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "112:180:7"
						},
						{
							"body": {
								"nativeSrc": "326:152:7",
								"nodeType": "YulBlock",
								"src": "326:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "343:1:7",
													"nodeType": "YulLiteral",
													"src": "343:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "346:77:7",
													"nodeType": "YulLiteral",
													"src": "346:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "336:6:7",
												"nodeType": "YulIdentifier",
												"src": "336:6:7"
											},
											"nativeSrc": "336:88:7",
											"nodeType": "YulFunctionCall",
											"src": "336:88:7"
										},
										"nativeSrc": "336:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "336:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "440:1:7",
													"nodeType": "YulLiteral",
													"src": "440:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "443:4:7",
													"nodeType": "YulLiteral",
													"src": "443:4:7",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "433:6:7",
												"nodeType": "YulIdentifier",
												"src": "433:6:7"
											},
											"nativeSrc": "433:15:7",
											"nodeType": "YulFunctionCall",
											"src": "433:15:7"
										},
										"nativeSrc": "433:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "433:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "464:1:7",
													"nodeType": "YulLiteral",
													"src": "464:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "467:4:7",
													"nodeType": "YulLiteral",
													"src": "467:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "457:6:7",
												"nodeType": "YulIdentifier",
												"src": "457:6:7"
											},
											"nativeSrc": "457:15:7",
											"nodeType": "YulFunctionCall",
											"src": "457:15:7"
										},
										"nativeSrc": "457:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "457:15:7"
									}
								]
							},
							"name": "panic_error_0x22",
							"nativeSrc": "298:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "298:180:7"
						},
						{
							"body": {
								"nativeSrc": "535:269:7",
								"nodeType": "YulBlock",
								"src": "535:269:7",
								"statements": [
									{
										"nativeSrc": "545:22:7",
										"nodeType": "YulAssignment",
										"src": "545:22:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "559:4:7",
													"nodeType": "YulIdentifier",
													"src": "559:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "565:1:7",
													"nodeType": "YulLiteral",
													"src": "565:1:7",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "555:3:7",
												"nodeType": "YulIdentifier",
												"src": "555:3:7"
											},
											"nativeSrc": "555:12:7",
											"nodeType": "YulFunctionCall",
											"src": "555:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "545:6:7",
												"nodeType": "YulIdentifier",
												"src": "545:6:7"
											}
										]
									},
									{
										"nativeSrc": "576:38:7",
										"nodeType": "YulVariableDeclaration",
										"src": "576:38:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "606:4:7",
													"nodeType": "YulIdentifier",
													"src": "606:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "612:1:7",
													"nodeType": "YulLiteral",
													"src": "612:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "602:3:7",
												"nodeType": "YulIdentifier",
												"src": "602:3:7"
											},
											"nativeSrc": "602:12:7",
											"nodeType": "YulFunctionCall",
											"src": "602:12:7"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "580:18:7",
												"nodeType": "YulTypedName",
												"src": "580:18:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "653:51:7",
											"nodeType": "YulBlock",
											"src": "653:51:7",
											"statements": [
												{
													"nativeSrc": "667:27:7",
													"nodeType": "YulAssignment",
													"src": "667:27:7",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "681:6:7",
																"nodeType": "YulIdentifier",
																"src": "681:6:7"
															},
															{
																"kind": "number",
																"nativeSrc": "689:4:7",
																"nodeType": "YulLiteral",
																"src": "689:4:7",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "677:3:7",
															"nodeType": "YulIdentifier",
															"src": "677:3:7"
														},
														"nativeSrc": "677:17:7",
														"nodeType": "YulFunctionCall",
														"src": "677:17:7"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "667:6:7",
															"nodeType": "YulIdentifier",
															"src": "667:6:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "633:18:7",
													"nodeType": "YulIdentifier",
													"src": "633:18:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "626:6:7",
												"nodeType": "YulIdentifier",
												"src": "626:6:7"
											},
											"nativeSrc": "626:26:7",
											"nodeType": "YulFunctionCall",
											"src": "626:26:7"
										},
										"nativeSrc": "623:81:7",
										"nodeType": "YulIf",
										"src": "623:81:7"
									},
									{
										"body": {
											"nativeSrc": "756:42:7",
											"nodeType": "YulBlock",
											"src": "756:42:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nativeSrc": "770:16:7",
															"nodeType": "YulIdentifier",
															"src": "770:16:7"
														},
														"nativeSrc": "770:18:7",
														"nodeType": "YulFunctionCall",
														"src": "770:18:7"
													},
													"nativeSrc": "770:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "770:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "720:18:7",
													"nodeType": "YulIdentifier",
													"src": "720:18:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "743:6:7",
															"nodeType": "YulIdentifier",
															"src": "743:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "751:2:7",
															"nodeType": "YulLiteral",
															"src": "751:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "740:2:7",
														"nodeType": "YulIdentifier",
														"src": "740:2:7"
													},
													"nativeSrc": "740:14:7",
													"nodeType": "YulFunctionCall",
													"src": "740:14:7"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "717:2:7",
												"nodeType": "YulIdentifier",
												"src": "717:2:7"
											},
											"nativeSrc": "717:38:7",
											"nodeType": "YulFunctionCall",
											"src": "717:38:7"
										},
										"nativeSrc": "714:84:7",
										"nodeType": "YulIf",
										"src": "714:84:7"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "484:320:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "519:4:7",
									"nodeType": "YulTypedName",
									"src": "519:4:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "528:6:7",
									"nodeType": "YulTypedName",
									"src": "528:6:7",
									"type": ""
								}
							],
							"src": "484:320:7"
						},
						{
							"body": {
								"nativeSrc": "864:87:7",
								"nodeType": "YulBlock",
								"src": "864:87:7",
								"statements": [
									{
										"nativeSrc": "874:11:7",
										"nodeType": "YulAssignment",
										"src": "874:11:7",
										"value": {
											"name": "ptr",
											"nativeSrc": "882:3:7",
											"nodeType": "YulIdentifier",
											"src": "882:3:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "874:4:7",
												"nodeType": "YulIdentifier",
												"src": "874:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "902:1:7",
													"nodeType": "YulLiteral",
													"src": "902:1:7",
													"type": "",
													"value": "0"
												},
												{
													"name": "ptr",
													"nativeSrc": "905:3:7",
													"nodeType": "YulIdentifier",
													"src": "905:3:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "895:6:7",
												"nodeType": "YulIdentifier",
												"src": "895:6:7"
											},
											"nativeSrc": "895:14:7",
											"nodeType": "YulFunctionCall",
											"src": "895:14:7"
										},
										"nativeSrc": "895:14:7",
										"nodeType": "YulExpressionStatement",
										"src": "895:14:7"
									},
									{
										"nativeSrc": "918:26:7",
										"nodeType": "YulAssignment",
										"src": "918:26:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "936:1:7",
													"nodeType": "YulLiteral",
													"src": "936:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "939:4:7",
													"nodeType": "YulLiteral",
													"src": "939:4:7",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "keccak256",
												"nativeSrc": "926:9:7",
												"nodeType": "YulIdentifier",
												"src": "926:9:7"
											},
											"nativeSrc": "926:18:7",
											"nodeType": "YulFunctionCall",
											"src": "926:18:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "918:4:7",
												"nodeType": "YulIdentifier",
												"src": "918:4:7"
											}
										]
									}
								]
							},
							"name": "array_dataslot_t_string_storage",
							"nativeSrc": "810:141:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "ptr",
									"nativeSrc": "851:3:7",
									"nodeType": "YulTypedName",
									"src": "851:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "data",
									"nativeSrc": "859:4:7",
									"nodeType": "YulTypedName",
									"src": "859:4:7",
									"type": ""
								}
							],
							"src": "810:141:7"
						},
						{
							"body": {
								"nativeSrc": "1001:49:7",
								"nodeType": "YulBlock",
								"src": "1001:49:7",
								"statements": [
									{
										"nativeSrc": "1011:33:7",
										"nodeType": "YulAssignment",
										"src": "1011:33:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1029:5:7",
															"nodeType": "YulIdentifier",
															"src": "1029:5:7"
														},
														{
															"kind": "number",
															"nativeSrc": "1036:2:7",
															"nodeType": "YulLiteral",
															"src": "1036:2:7",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1025:3:7",
														"nodeType": "YulIdentifier",
														"src": "1025:3:7"
													},
													"nativeSrc": "1025:14:7",
													"nodeType": "YulFunctionCall",
													"src": "1025:14:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1041:2:7",
													"nodeType": "YulLiteral",
													"src": "1041:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "1021:3:7",
												"nodeType": "YulIdentifier",
												"src": "1021:3:7"
											},
											"nativeSrc": "1021:23:7",
											"nodeType": "YulFunctionCall",
											"src": "1021:23:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "1011:6:7",
												"nodeType": "YulIdentifier",
												"src": "1011:6:7"
											}
										]
									}
								]
							},
							"name": "divide_by_32_ceil",
							"nativeSrc": "957:93:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "984:5:7",
									"nodeType": "YulTypedName",
									"src": "984:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "994:6:7",
									"nodeType": "YulTypedName",
									"src": "994:6:7",
									"type": ""
								}
							],
							"src": "957:93:7"
						},
						{
							"body": {
								"nativeSrc": "1109:54:7",
								"nodeType": "YulBlock",
								"src": "1109:54:7",
								"statements": [
									{
										"nativeSrc": "1119:37:7",
										"nodeType": "YulAssignment",
										"src": "1119:37:7",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nativeSrc": "1144:4:7",
													"nodeType": "YulIdentifier",
													"src": "1144:4:7"
												},
												{
													"name": "value",
													"nativeSrc": "1150:5:7",
													"nodeType": "YulIdentifier",
													"src": "1150:5:7"
												}
											],
											"functionName": {
												"name": "shl",
												"nativeSrc": "1140:3:7",
												"nodeType": "YulIdentifier",
												"src": "1140:3:7"
											},
											"nativeSrc": "1140:16:7",
											"nodeType": "YulFunctionCall",
											"src": "1140:16:7"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "1119:8:7",
												"nodeType": "YulIdentifier",
												"src": "1119:8:7"
											}
										]
									}
								]
							},
							"name": "shift_left_dynamic",
							"nativeSrc": "1056:107:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nativeSrc": "1084:4:7",
									"nodeType": "YulTypedName",
									"src": "1084:4:7",
									"type": ""
								},
								{
									"name": "value",
									"nativeSrc": "1090:5:7",
									"nodeType": "YulTypedName",
									"src": "1090:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "1100:8:7",
									"nodeType": "YulTypedName",
									"src": "1100:8:7",
									"type": ""
								}
							],
							"src": "1056:107:7"
						},
						{
							"body": {
								"nativeSrc": "1245:317:7",
								"nodeType": "YulBlock",
								"src": "1245:317:7",
								"statements": [
									{
										"nativeSrc": "1255:35:7",
										"nodeType": "YulVariableDeclaration",
										"src": "1255:35:7",
										"value": {
											"arguments": [
												{
													"name": "shiftBytes",
													"nativeSrc": "1276:10:7",
													"nodeType": "YulIdentifier",
													"src": "1276:10:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1288:1:7",
													"nodeType": "YulLiteral",
													"src": "1288:1:7",
													"type": "",
													"value": "8"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "1272:3:7",
												"nodeType": "YulIdentifier",
												"src": "1272:3:7"
											},
											"nativeSrc": "1272:18:7",
											"nodeType": "YulFunctionCall",
											"src": "1272:18:7"
										},
										"variables": [
											{
												"name": "shiftBits",
												"nativeSrc": "1259:9:7",
												"nodeType": "YulTypedName",
												"src": "1259:9:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1299:109:7",
										"nodeType": "YulVariableDeclaration",
										"src": "1299:109:7",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nativeSrc": "1330:9:7",
													"nodeType": "YulIdentifier",
													"src": "1330:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1341:66:7",
													"nodeType": "YulLiteral",
													"src": "1341:66:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nativeSrc": "1311:18:7",
												"nodeType": "YulIdentifier",
												"src": "1311:18:7"
											},
											"nativeSrc": "1311:97:7",
											"nodeType": "YulFunctionCall",
											"src": "1311:97:7"
										},
										"variables": [
											{
												"name": "mask",
												"nativeSrc": "1303:4:7",
												"nodeType": "YulTypedName",
												"src": "1303:4:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "1417:51:7",
										"nodeType": "YulAssignment",
										"src": "1417:51:7",
										"value": {
											"arguments": [
												{
													"name": "shiftBits",
													"nativeSrc": "1448:9:7",
													"nodeType": "YulIdentifier",
													"src": "1448:9:7"
												},
												{
													"name": "toInsert",
													"nativeSrc": "1459:8:7",
													"nodeType": "YulIdentifier",
													"src": "1459:8:7"
												}
											],
											"functionName": {
												"name": "shift_left_dynamic",
												"nativeSrc": "1429:18:7",
												"nodeType": "YulIdentifier",
												"src": "1429:18:7"
											},
											"nativeSrc": "1429:39:7",
											"nodeType": "YulFunctionCall",
											"src": "1429:39:7"
										},
										"variableNames": [
											{
												"name": "toInsert",
												"nativeSrc": "1417:8:7",
												"nodeType": "YulIdentifier",
												"src": "1417:8:7"
											}
										]
									},
									{
										"nativeSrc": "1477:30:7",
										"nodeType": "YulAssignment",
										"src": "1477:30:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1490:5:7",
													"nodeType": "YulIdentifier",
													"src": "1490:5:7"
												},
												{
													"arguments": [
														{
															"name": "mask",
															"nativeSrc": "1501:4:7",
															"nodeType": "YulIdentifier",
															"src": "1501:4:7"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "1497:3:7",
														"nodeType": "YulIdentifier",
														"src": "1497:3:7"
													},
													"nativeSrc": "1497:9:7",
													"nodeType": "YulFunctionCall",
													"src": "1497:9:7"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "1486:3:7",
												"nodeType": "YulIdentifier",
												"src": "1486:3:7"
											},
											"nativeSrc": "1486:21:7",
											"nodeType": "YulFunctionCall",
											"src": "1486:21:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1477:5:7",
												"nodeType": "YulIdentifier",
												"src": "1477:5:7"
											}
										]
									},
									{
										"nativeSrc": "1516:40:7",
										"nodeType": "YulAssignment",
										"src": "1516:40:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1529:5:7",
													"nodeType": "YulIdentifier",
													"src": "1529:5:7"
												},
												{
													"arguments": [
														{
															"name": "toInsert",
															"nativeSrc": "1540:8:7",
															"nodeType": "YulIdentifier",
															"src": "1540:8:7"
														},
														{
															"name": "mask",
															"nativeSrc": "1550:4:7",
															"nodeType": "YulIdentifier",
															"src": "1550:4:7"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "1536:3:7",
														"nodeType": "YulIdentifier",
														"src": "1536:3:7"
													},
													"nativeSrc": "1536:19:7",
													"nodeType": "YulFunctionCall",
													"src": "1536:19:7"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "1526:2:7",
												"nodeType": "YulIdentifier",
												"src": "1526:2:7"
											},
											"nativeSrc": "1526:30:7",
											"nodeType": "YulFunctionCall",
											"src": "1526:30:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "1516:6:7",
												"nodeType": "YulIdentifier",
												"src": "1516:6:7"
											}
										]
									}
								]
							},
							"name": "update_byte_slice_dynamic32",
							"nativeSrc": "1169:393:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1206:5:7",
									"nodeType": "YulTypedName",
									"src": "1206:5:7",
									"type": ""
								},
								{
									"name": "shiftBytes",
									"nativeSrc": "1213:10:7",
									"nodeType": "YulTypedName",
									"src": "1213:10:7",
									"type": ""
								},
								{
									"name": "toInsert",
									"nativeSrc": "1225:8:7",
									"nodeType": "YulTypedName",
									"src": "1225:8:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "1238:6:7",
									"nodeType": "YulTypedName",
									"src": "1238:6:7",
									"type": ""
								}
							],
							"src": "1169:393:7"
						},
						{
							"body": {
								"nativeSrc": "1613:32:7",
								"nodeType": "YulBlock",
								"src": "1613:32:7",
								"statements": [
									{
										"nativeSrc": "1623:16:7",
										"nodeType": "YulAssignment",
										"src": "1623:16:7",
										"value": {
											"name": "value",
											"nativeSrc": "1634:5:7",
											"nodeType": "YulIdentifier",
											"src": "1634:5:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1623:7:7",
												"nodeType": "YulIdentifier",
												"src": "1623:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "1568:77:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1595:5:7",
									"nodeType": "YulTypedName",
									"src": "1595:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1605:7:7",
									"nodeType": "YulTypedName",
									"src": "1605:7:7",
									"type": ""
								}
							],
							"src": "1568:77:7"
						},
						{
							"body": {
								"nativeSrc": "1683:28:7",
								"nodeType": "YulBlock",
								"src": "1683:28:7",
								"statements": [
									{
										"nativeSrc": "1693:12:7",
										"nodeType": "YulAssignment",
										"src": "1693:12:7",
										"value": {
											"name": "value",
											"nativeSrc": "1700:5:7",
											"nodeType": "YulIdentifier",
											"src": "1700:5:7"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "1693:3:7",
												"nodeType": "YulIdentifier",
												"src": "1693:3:7"
											}
										]
									}
								]
							},
							"name": "identity",
							"nativeSrc": "1651:60:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1669:5:7",
									"nodeType": "YulTypedName",
									"src": "1669:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "1679:3:7",
									"nodeType": "YulTypedName",
									"src": "1679:3:7",
									"type": ""
								}
							],
							"src": "1651:60:7"
						},
						{
							"body": {
								"nativeSrc": "1777:82:7",
								"nodeType": "YulBlock",
								"src": "1777:82:7",
								"statements": [
									{
										"nativeSrc": "1787:66:7",
										"nodeType": "YulAssignment",
										"src": "1787:66:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1845:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1845:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "1827:17:7",
																"nodeType": "YulIdentifier",
																"src": "1827:17:7"
															},
															"nativeSrc": "1827:24:7",
															"nodeType": "YulFunctionCall",
															"src": "1827:24:7"
														}
													],
													"functionName": {
														"name": "identity",
														"nativeSrc": "1818:8:7",
														"nodeType": "YulIdentifier",
														"src": "1818:8:7"
													},
													"nativeSrc": "1818:34:7",
													"nodeType": "YulFunctionCall",
													"src": "1818:34:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "1800:17:7",
												"nodeType": "YulIdentifier",
												"src": "1800:17:7"
											},
											"nativeSrc": "1800:53:7",
											"nodeType": "YulFunctionCall",
											"src": "1800:53:7"
										},
										"variableNames": [
											{
												"name": "converted",
												"nativeSrc": "1787:9:7",
												"nodeType": "YulIdentifier",
												"src": "1787:9:7"
											}
										]
									}
								]
							},
							"name": "convert_t_uint256_to_t_uint256",
							"nativeSrc": "1717:142:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1757:5:7",
									"nodeType": "YulTypedName",
									"src": "1757:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "converted",
									"nativeSrc": "1767:9:7",
									"nodeType": "YulTypedName",
									"src": "1767:9:7",
									"type": ""
								}
							],
							"src": "1717:142:7"
						},
						{
							"body": {
								"nativeSrc": "1912:28:7",
								"nodeType": "YulBlock",
								"src": "1912:28:7",
								"statements": [
									{
										"nativeSrc": "1922:12:7",
										"nodeType": "YulAssignment",
										"src": "1922:12:7",
										"value": {
											"name": "value",
											"nativeSrc": "1929:5:7",
											"nodeType": "YulIdentifier",
											"src": "1929:5:7"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "1922:3:7",
												"nodeType": "YulIdentifier",
												"src": "1922:3:7"
											}
										]
									}
								]
							},
							"name": "prepare_store_t_uint256",
							"nativeSrc": "1865:75:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1898:5:7",
									"nodeType": "YulTypedName",
									"src": "1898:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "1908:3:7",
									"nodeType": "YulTypedName",
									"src": "1908:3:7",
									"type": ""
								}
							],
							"src": "1865:75:7"
						},
						{
							"body": {
								"nativeSrc": "2022:193:7",
								"nodeType": "YulBlock",
								"src": "2022:193:7",
								"statements": [
									{
										"nativeSrc": "2032:63:7",
										"nodeType": "YulVariableDeclaration",
										"src": "2032:63:7",
										"value": {
											"arguments": [
												{
													"name": "value_0",
													"nativeSrc": "2087:7:7",
													"nodeType": "YulIdentifier",
													"src": "2087:7:7"
												}
											],
											"functionName": {
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2056:30:7",
												"nodeType": "YulIdentifier",
												"src": "2056:30:7"
											},
											"nativeSrc": "2056:39:7",
											"nodeType": "YulFunctionCall",
											"src": "2056:39:7"
										},
										"variables": [
											{
												"name": "convertedValue_0",
												"nativeSrc": "2036:16:7",
												"nodeType": "YulTypedName",
												"src": "2036:16:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "2111:4:7",
													"nodeType": "YulIdentifier",
													"src": "2111:4:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "slot",
																	"nativeSrc": "2151:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2151:4:7"
																}
															],
															"functionName": {
																"name": "sload",
																"nativeSrc": "2145:5:7",
																"nodeType": "YulIdentifier",
																"src": "2145:5:7"
															},
															"nativeSrc": "2145:11:7",
															"nodeType": "YulFunctionCall",
															"src": "2145:11:7"
														},
														{
															"name": "offset",
															"nativeSrc": "2158:6:7",
															"nodeType": "YulIdentifier",
															"src": "2158:6:7"
														},
														{
															"arguments": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2190:16:7",
																	"nodeType": "YulIdentifier",
																	"src": "2190:16:7"
																}
															],
															"functionName": {
																"name": "prepare_store_t_uint256",
																"nativeSrc": "2166:23:7",
																"nodeType": "YulIdentifier",
																"src": "2166:23:7"
															},
															"nativeSrc": "2166:41:7",
															"nodeType": "YulFunctionCall",
															"src": "2166:41:7"
														}
													],
													"functionName": {
														"name": "update_byte_slice_dynamic32",
														"nativeSrc": "2117:27:7",
														"nodeType": "YulIdentifier",
														"src": "2117:27:7"
													},
													"nativeSrc": "2117:91:7",
													"nodeType": "YulFunctionCall",
													"src": "2117:91:7"
												}
											],
											"functionName": {
												"name": "sstore",
												"nativeSrc": "2104:6:7",
												"nodeType": "YulIdentifier",
												"src": "2104:6:7"
											},
											"nativeSrc": "2104:105:7",
											"nodeType": "YulFunctionCall",
											"src": "2104:105:7"
										},
										"nativeSrc": "2104:105:7",
										"nodeType": "YulExpressionStatement",
										"src": "2104:105:7"
									}
								]
							},
							"name": "update_storage_value_t_uint256_to_t_uint256",
							"nativeSrc": "1946:269:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "1999:4:7",
									"nodeType": "YulTypedName",
									"src": "1999:4:7",
									"type": ""
								},
								{
									"name": "offset",
									"nativeSrc": "2005:6:7",
									"nodeType": "YulTypedName",
									"src": "2005:6:7",
									"type": ""
								},
								{
									"name": "value_0",
									"nativeSrc": "2013:7:7",
									"nodeType": "YulTypedName",
									"src": "2013:7:7",
									"type": ""
								}
							],
							"src": "1946:269:7"
						},
						{
							"body": {
								"nativeSrc": "2270:24:7",
								"nodeType": "YulBlock",
								"src": "2270:24:7",
								"statements": [
									{
										"nativeSrc": "2280:8:7",
										"nodeType": "YulAssignment",
										"src": "2280:8:7",
										"value": {
											"kind": "number",
											"nativeSrc": "2287:1:7",
											"nodeType": "YulLiteral",
											"src": "2287:1:7",
											"type": "",
											"value": "0"
										},
										"variableNames": [
											{
												"name": "ret",
												"nativeSrc": "2280:3:7",
												"nodeType": "YulIdentifier",
												"src": "2280:3:7"
											}
										]
									}
								]
							},
							"name": "zero_value_for_split_t_uint256",
							"nativeSrc": "2221:73:7",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "ret",
									"nativeSrc": "2266:3:7",
									"nodeType": "YulTypedName",
									"src": "2266:3:7",
									"type": ""
								}
							],
							"src": "2221:73:7"
						},
						{
							"body": {
								"nativeSrc": "2353:136:7",
								"nodeType": "YulBlock",
								"src": "2353:136:7",
								"statements": [
									{
										"nativeSrc": "2363:46:7",
										"nodeType": "YulVariableDeclaration",
										"src": "2363:46:7",
										"value": {
											"arguments": [],
											"functionName": {
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2377:30:7",
												"nodeType": "YulIdentifier",
												"src": "2377:30:7"
											},
											"nativeSrc": "2377:32:7",
											"nodeType": "YulFunctionCall",
											"src": "2377:32:7"
										},
										"variables": [
											{
												"name": "zero_0",
												"nativeSrc": "2367:6:7",
												"nodeType": "YulTypedName",
												"src": "2367:6:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "2462:4:7",
													"nodeType": "YulIdentifier",
													"src": "2462:4:7"
												},
												{
													"name": "offset",
													"nativeSrc": "2468:6:7",
													"nodeType": "YulIdentifier",
													"src": "2468:6:7"
												},
												{
													"name": "zero_0",
													"nativeSrc": "2476:6:7",
													"nodeType": "YulIdentifier",
													"src": "2476:6:7"
												}
											],
											"functionName": {
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2418:43:7",
												"nodeType": "YulIdentifier",
												"src": "2418:43:7"
											},
											"nativeSrc": "2418:65:7",
											"nodeType": "YulFunctionCall",
											"src": "2418:65:7"
										},
										"nativeSrc": "2418:65:7",
										"nodeType": "YulExpressionStatement",
										"src": "2418:65:7"
									}
								]
							},
							"name": "storage_set_to_zero_t_uint256",
							"nativeSrc": "2300:189:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "2339:4:7",
									"nodeType": "YulTypedName",
									"src": "2339:4:7",
									"type": ""
								},
								{
									"name": "offset",
									"nativeSrc": "2345:6:7",
									"nodeType": "YulTypedName",
									"src": "2345:6:7",
									"type": ""
								}
							],
							"src": "2300:189:7"
						},
						{
							"body": {
								"nativeSrc": "2545:136:7",
								"nodeType": "YulBlock",
								"src": "2545:136:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2612:63:7",
											"nodeType": "YulBlock",
											"src": "2612:63:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "2656:5:7",
																"nodeType": "YulIdentifier",
																"src": "2656:5:7"
															},
															{
																"kind": "number",
																"nativeSrc": "2663:1:7",
																"nodeType": "YulLiteral",
																"src": "2663:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "storage_set_to_zero_t_uint256",
															"nativeSrc": "2626:29:7",
															"nodeType": "YulIdentifier",
															"src": "2626:29:7"
														},
														"nativeSrc": "2626:39:7",
														"nodeType": "YulFunctionCall",
														"src": "2626:39:7"
													},
													"nativeSrc": "2626:39:7",
													"nodeType": "YulExpressionStatement",
													"src": "2626:39:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "start",
													"nativeSrc": "2565:5:7",
													"nodeType": "YulIdentifier",
													"src": "2565:5:7"
												},
												{
													"name": "end",
													"nativeSrc": "2572:3:7",
													"nodeType": "YulIdentifier",
													"src": "2572:3:7"
												}
											],
											"functionName": {
												"name": "lt",
												"nativeSrc": "2562:2:7",
												"nodeType": "YulIdentifier",
												"src": "2562:2:7"
											},
											"nativeSrc": "2562:14:7",
											"nodeType": "YulFunctionCall",
											"src": "2562:14:7"
										},
										"nativeSrc": "2555:120:7",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "2577:26:7",
											"nodeType": "YulBlock",
											"src": "2577:26:7",
											"statements": [
												{
													"nativeSrc": "2579:22:7",
													"nodeType": "YulAssignment",
													"src": "2579:22:7",
													"value": {
														"arguments": [
															{
																"name": "start",
																"nativeSrc": "2592:5:7",
																"nodeType": "YulIdentifier",
																"src": "2592:5:7"
															},
															{
																"kind": "number",
																"nativeSrc": "2599:1:7",
																"nodeType": "YulLiteral",
																"src": "2599:1:7",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "2588:3:7",
															"nodeType": "YulIdentifier",
															"src": "2588:3:7"
														},
														"nativeSrc": "2588:13:7",
														"nodeType": "YulFunctionCall",
														"src": "2588:13:7"
													},
													"variableNames": [
														{
															"name": "start",
															"nativeSrc": "2579:5:7",
															"nodeType": "YulIdentifier",
															"src": "2579:5:7"
														}
													]
												}
											]
										},
										"pre": {
											"nativeSrc": "2559:2:7",
											"nodeType": "YulBlock",
											"src": "2559:2:7",
											"statements": []
										},
										"src": "2555:120:7"
									}
								]
							},
							"name": "clear_storage_range_t_bytes1",
							"nativeSrc": "2495:186:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "start",
									"nativeSrc": "2533:5:7",
									"nodeType": "YulTypedName",
									"src": "2533:5:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2540:3:7",
									"nodeType": "YulTypedName",
									"src": "2540:3:7",
									"type": ""
								}
							],
							"src": "2495:186:7"
						},
						{
							"body": {
								"nativeSrc": "2766:464:7",
								"nodeType": "YulBlock",
								"src": "2766:464:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2792:431:7",
											"nodeType": "YulBlock",
											"src": "2792:431:7",
											"statements": [
												{
													"nativeSrc": "2806:54:7",
													"nodeType": "YulVariableDeclaration",
													"src": "2806:54:7",
													"value": {
														"arguments": [
															{
																"name": "array",
																"nativeSrc": "2854:5:7",
																"nodeType": "YulIdentifier",
																"src": "2854:5:7"
															}
														],
														"functionName": {
															"name": "array_dataslot_t_string_storage",
															"nativeSrc": "2822:31:7",
															"nodeType": "YulIdentifier",
															"src": "2822:31:7"
														},
														"nativeSrc": "2822:38:7",
														"nodeType": "YulFunctionCall",
														"src": "2822:38:7"
													},
													"variables": [
														{
															"name": "dataArea",
															"nativeSrc": "2810:8:7",
															"nodeType": "YulTypedName",
															"src": "2810:8:7",
															"type": ""
														}
													]
												},
												{
													"nativeSrc": "2873:63:7",
													"nodeType": "YulVariableDeclaration",
													"src": "2873:63:7",
													"value": {
														"arguments": [
															{
																"name": "dataArea",
																"nativeSrc": "2896:8:7",
																"nodeType": "YulIdentifier",
																"src": "2896:8:7"
															},
															{
																"arguments": [
																	{
																		"name": "startIndex",
																		"nativeSrc": "2924:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2924:10:7"
																	}
																],
																"functionName": {
																	"name": "divide_by_32_ceil",
																	"nativeSrc": "2906:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2906:17:7"
																},
																"nativeSrc": "2906:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2906:29:7"
															}
														],
														"functionName": {
															"name": "add",
															"nativeSrc": "2892:3:7",
															"nodeType": "YulIdentifier",
															"src": "2892:3:7"
														},
														"nativeSrc": "2892:44:7",
														"nodeType": "YulFunctionCall",
														"src": "2892:44:7"
													},
													"variables": [
														{
															"name": "deleteStart",
															"nativeSrc": "2877:11:7",
															"nodeType": "YulTypedName",
															"src": "2877:11:7",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nativeSrc": "3093:27:7",
														"nodeType": "YulBlock",
														"src": "3093:27:7",
														"statements": [
															{
																"nativeSrc": "3095:23:7",
																"nodeType": "YulAssignment",
																"src": "3095:23:7",
																"value": {
																	"name": "dataArea",
																	"nativeSrc": "3110:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3110:8:7"
																},
																"variableNames": [
																	{
																		"name": "deleteStart",
																		"nativeSrc": "3095:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "3095:11:7"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "startIndex",
																"nativeSrc": "3077:10:7",
																"nodeType": "YulIdentifier",
																"src": "3077:10:7"
															},
															{
																"kind": "number",
																"nativeSrc": "3089:2:7",
																"nodeType": "YulLiteral",
																"src": "3089:2:7",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "lt",
															"nativeSrc": "3074:2:7",
															"nodeType": "YulIdentifier",
															"src": "3074:2:7"
														},
														"nativeSrc": "3074:18:7",
														"nodeType": "YulFunctionCall",
														"src": "3074:18:7"
													},
													"nativeSrc": "3071:49:7",
													"nodeType": "YulIf",
													"src": "3071:49:7"
												},
												{
													"expression": {
														"arguments": [
															{
																"name": "deleteStart",
																"nativeSrc": "3162:11:7",
																"nodeType": "YulIdentifier",
																"src": "3162:11:7"
															},
															{
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "3179:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3179:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "len",
																				"nativeSrc": "3207:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3207:3:7"
																			}
																		],
																		"functionName": {
																			"name": "divide_by_32_ceil",
																			"nativeSrc": "3189:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3189:17:7"
																		},
																		"nativeSrc": "3189:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3189:22:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3175:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3175:3:7"
																},
																"nativeSrc": "3175:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3175:37:7"
															}
														],
														"functionName": {
															"name": "clear_storage_range_t_bytes1",
															"nativeSrc": "3133:28:7",
															"nodeType": "YulIdentifier",
															"src": "3133:28:7"
														},
														"nativeSrc": "3133:80:7",
														"nodeType": "YulFunctionCall",
														"src": "3133:80:7"
													},
													"nativeSrc": "3133:80:7",
													"nodeType": "YulExpressionStatement",
													"src": "3133:80:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "len",
													"nativeSrc": "2783:3:7",
													"nodeType": "YulIdentifier",
													"src": "2783:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "2788:2:7",
													"nodeType": "YulLiteral",
													"src": "2788:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "2780:2:7",
												"nodeType": "YulIdentifier",
												"src": "2780:2:7"
											},
											"nativeSrc": "2780:11:7",
											"nodeType": "YulFunctionCall",
											"src": "2780:11:7"
										},
										"nativeSrc": "2777:446:7",
										"nodeType": "YulIf",
										"src": "2777:446:7"
									}
								]
							},
							"name": "clean_up_bytearray_end_slots_t_string_storage",
							"nativeSrc": "2687:543:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "array",
									"nativeSrc": "2742:5:7",
									"nodeType": "YulTypedName",
									"src": "2742:5:7",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "2749:3:7",
									"nodeType": "YulTypedName",
									"src": "2749:3:7",
									"type": ""
								},
								{
									"name": "startIndex",
									"nativeSrc": "2754:10:7",
									"nodeType": "YulTypedName",
									"src": "2754:10:7",
									"type": ""
								}
							],
							"src": "2687:543:7"
						},
						{
							"body": {
								"nativeSrc": "3299:54:7",
								"nodeType": "YulBlock",
								"src": "3299:54:7",
								"statements": [
									{
										"nativeSrc": "3309:37:7",
										"nodeType": "YulAssignment",
										"src": "3309:37:7",
										"value": {
											"arguments": [
												{
													"name": "bits",
													"nativeSrc": "3334:4:7",
													"nodeType": "YulIdentifier",
													"src": "3334:4:7"
												},
												{
													"name": "value",
													"nativeSrc": "3340:5:7",
													"nodeType": "YulIdentifier",
													"src": "3340:5:7"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "3330:3:7",
												"nodeType": "YulIdentifier",
												"src": "3330:3:7"
											},
											"nativeSrc": "3330:16:7",
											"nodeType": "YulFunctionCall",
											"src": "3330:16:7"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "3309:8:7",
												"nodeType": "YulIdentifier",
												"src": "3309:8:7"
											}
										]
									}
								]
							},
							"name": "shift_right_unsigned_dynamic",
							"nativeSrc": "3236:117:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "bits",
									"nativeSrc": "3274:4:7",
									"nodeType": "YulTypedName",
									"src": "3274:4:7",
									"type": ""
								},
								{
									"name": "value",
									"nativeSrc": "3280:5:7",
									"nodeType": "YulTypedName",
									"src": "3280:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "3290:8:7",
									"nodeType": "YulTypedName",
									"src": "3290:8:7",
									"type": ""
								}
							],
							"src": "3236:117:7"
						},
						{
							"body": {
								"nativeSrc": "3410:118:7",
								"nodeType": "YulBlock",
								"src": "3410:118:7",
								"statements": [
									{
										"nativeSrc": "3420:68:7",
										"nodeType": "YulVariableDeclaration",
										"src": "3420:68:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "3469:1:7",
																	"nodeType": "YulLiteral",
																	"src": "3469:1:7",
																	"type": "",
																	"value": "8"
																},
																{
																	"name": "bytes",
																	"nativeSrc": "3472:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:7"
																}
															],
															"functionName": {
																"name": "mul",
																"nativeSrc": "3465:3:7",
																"nodeType": "YulIdentifier",
																"src": "3465:3:7"
															},
															"nativeSrc": "3465:13:7",
															"nodeType": "YulFunctionCall",
															"src": "3465:13:7"
														},
														{
															"arguments": [
																{
																	"kind": "number",
																	"nativeSrc": "3484:1:7",
																	"nodeType": "YulLiteral",
																	"src": "3484:1:7",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "not",
																"nativeSrc": "3480:3:7",
																"nodeType": "YulIdentifier",
																"src": "3480:3:7"
															},
															"nativeSrc": "3480:6:7",
															"nodeType": "YulFunctionCall",
															"src": "3480:6:7"
														}
													],
													"functionName": {
														"name": "shift_right_unsigned_dynamic",
														"nativeSrc": "3436:28:7",
														"nodeType": "YulIdentifier",
														"src": "3436:28:7"
													},
													"nativeSrc": "3436:51:7",
													"nodeType": "YulFunctionCall",
													"src": "3436:51:7"
												}
											],
											"functionName": {
												"name": "not",
												"nativeSrc": "3432:3:7",
												"nodeType": "YulIdentifier",
												"src": "3432:3:7"
											},
											"nativeSrc": "3432:56:7",
											"nodeType": "YulFunctionCall",
											"src": "3432:56:7"
										},
										"variables": [
											{
												"name": "mask",
												"nativeSrc": "3424:4:7",
												"nodeType": "YulTypedName",
												"src": "3424:4:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "3497:25:7",
										"nodeType": "YulAssignment",
										"src": "3497:25:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3511:4:7",
													"nodeType": "YulIdentifier",
													"src": "3511:4:7"
												},
												{
													"name": "mask",
													"nativeSrc": "3517:4:7",
													"nodeType": "YulIdentifier",
													"src": "3517:4:7"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "3507:3:7",
												"nodeType": "YulIdentifier",
												"src": "3507:3:7"
											},
											"nativeSrc": "3507:15:7",
											"nodeType": "YulFunctionCall",
											"src": "3507:15:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "3497:6:7",
												"nodeType": "YulIdentifier",
												"src": "3497:6:7"
											}
										]
									}
								]
							},
							"name": "mask_bytes_dynamic",
							"nativeSrc": "3359:169:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "3387:4:7",
									"nodeType": "YulTypedName",
									"src": "3387:4:7",
									"type": ""
								},
								{
									"name": "bytes",
									"nativeSrc": "3393:5:7",
									"nodeType": "YulTypedName",
									"src": "3393:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "3403:6:7",
									"nodeType": "YulTypedName",
									"src": "3403:6:7",
									"type": ""
								}
							],
							"src": "3359:169:7"
						},
						{
							"body": {
								"nativeSrc": "3614:214:7",
								"nodeType": "YulBlock",
								"src": "3614:214:7",
								"statements": [
									{
										"nativeSrc": "3747:37:7",
										"nodeType": "YulAssignment",
										"src": "3747:37:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3774:4:7",
													"nodeType": "YulIdentifier",
													"src": "3774:4:7"
												},
												{
													"name": "len",
													"nativeSrc": "3780:3:7",
													"nodeType": "YulIdentifier",
													"src": "3780:3:7"
												}
											],
											"functionName": {
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3755:18:7",
												"nodeType": "YulIdentifier",
												"src": "3755:18:7"
											},
											"nativeSrc": "3755:29:7",
											"nodeType": "YulFunctionCall",
											"src": "3755:29:7"
										},
										"variableNames": [
											{
												"name": "data",
												"nativeSrc": "3747:4:7",
												"nodeType": "YulIdentifier",
												"src": "3747:4:7"
											}
										]
									},
									{
										"nativeSrc": "3793:29:7",
										"nodeType": "YulAssignment",
										"src": "3793:29:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "3804:4:7",
													"nodeType": "YulIdentifier",
													"src": "3804:4:7"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "3814:1:7",
															"nodeType": "YulLiteral",
															"src": "3814:1:7",
															"type": "",
															"value": "2"
														},
														{
															"name": "len",
															"nativeSrc": "3817:3:7",
															"nodeType": "YulIdentifier",
															"src": "3817:3:7"
														}
													],
													"functionName": {
														"name": "mul",
														"nativeSrc": "3810:3:7",
														"nodeType": "YulIdentifier",
														"src": "3810:3:7"
													},
													"nativeSrc": "3810:11:7",
													"nodeType": "YulFunctionCall",
													"src": "3810:11:7"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "3801:2:7",
												"nodeType": "YulIdentifier",
												"src": "3801:2:7"
											},
											"nativeSrc": "3801:21:7",
											"nodeType": "YulFunctionCall",
											"src": "3801:21:7"
										},
										"variableNames": [
											{
												"name": "used",
												"nativeSrc": "3793:4:7",
												"nodeType": "YulIdentifier",
												"src": "3793:4:7"
											}
										]
									}
								]
							},
							"name": "extract_used_part_and_set_length_of_short_byte_array",
							"nativeSrc": "3533:295:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "3595:4:7",
									"nodeType": "YulTypedName",
									"src": "3595:4:7",
									"type": ""
								},
								{
									"name": "len",
									"nativeSrc": "3601:3:7",
									"nodeType": "YulTypedName",
									"src": "3601:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "used",
									"nativeSrc": "3609:4:7",
									"nodeType": "YulTypedName",
									"src": "3609:4:7",
									"type": ""
								}
							],
							"src": "3533:295:7"
						},
						{
							"body": {
								"nativeSrc": "3925:1303:7",
								"nodeType": "YulBlock",
								"src": "3925:1303:7",
								"statements": [
									{
										"nativeSrc": "3936:51:7",
										"nodeType": "YulVariableDeclaration",
										"src": "3936:51:7",
										"value": {
											"arguments": [
												{
													"name": "src",
													"nativeSrc": "3983:3:7",
													"nodeType": "YulIdentifier",
													"src": "3983:3:7"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3950:32:7",
												"nodeType": "YulIdentifier",
												"src": "3950:32:7"
											},
											"nativeSrc": "3950:37:7",
											"nodeType": "YulFunctionCall",
											"src": "3950:37:7"
										},
										"variables": [
											{
												"name": "newLen",
												"nativeSrc": "3940:6:7",
												"nodeType": "YulTypedName",
												"src": "3940:6:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "4072:22:7",
											"nodeType": "YulBlock",
											"src": "4072:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nativeSrc": "4074:16:7",
															"nodeType": "YulIdentifier",
															"src": "4074:16:7"
														},
														"nativeSrc": "4074:18:7",
														"nodeType": "YulFunctionCall",
														"src": "4074:18:7"
													},
													"nativeSrc": "4074:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "4074:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "4044:6:7",
													"nodeType": "YulIdentifier",
													"src": "4044:6:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4052:18:7",
													"nodeType": "YulLiteral",
													"src": "4052:18:7",
													"type": "",
													"value": "0xffffffffffffffff"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "4041:2:7",
												"nodeType": "YulIdentifier",
												"src": "4041:2:7"
											},
											"nativeSrc": "4041:30:7",
											"nodeType": "YulFunctionCall",
											"src": "4041:30:7"
										},
										"nativeSrc": "4038:56:7",
										"nodeType": "YulIf",
										"src": "4038:56:7"
									},
									{
										"nativeSrc": "4104:52:7",
										"nodeType": "YulVariableDeclaration",
										"src": "4104:52:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "slot",
															"nativeSrc": "4150:4:7",
															"nodeType": "YulIdentifier",
															"src": "4150:4:7"
														}
													],
													"functionName": {
														"name": "sload",
														"nativeSrc": "4144:5:7",
														"nodeType": "YulIdentifier",
														"src": "4144:5:7"
													},
													"nativeSrc": "4144:11:7",
													"nodeType": "YulFunctionCall",
													"src": "4144:11:7"
												}
											],
											"functionName": {
												"name": "extract_byte_array_length",
												"nativeSrc": "4118:25:7",
												"nodeType": "YulIdentifier",
												"src": "4118:25:7"
											},
											"nativeSrc": "4118:38:7",
											"nodeType": "YulFunctionCall",
											"src": "4118:38:7"
										},
										"variables": [
											{
												"name": "oldLen",
												"nativeSrc": "4108:6:7",
												"nodeType": "YulTypedName",
												"src": "4108:6:7",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "slot",
													"nativeSrc": "4249:4:7",
													"nodeType": "YulIdentifier",
													"src": "4249:4:7"
												},
												{
													"name": "oldLen",
													"nativeSrc": "4255:6:7",
													"nodeType": "YulIdentifier",
													"src": "4255:6:7"
												},
												{
													"name": "newLen",
													"nativeSrc": "4263:6:7",
													"nodeType": "YulIdentifier",
													"src": "4263:6:7"
												}
											],
											"functionName": {
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4203:45:7",
												"nodeType": "YulIdentifier",
												"src": "4203:45:7"
											},
											"nativeSrc": "4203:67:7",
											"nodeType": "YulFunctionCall",
											"src": "4203:67:7"
										},
										"nativeSrc": "4203:67:7",
										"nodeType": "YulExpressionStatement",
										"src": "4203:67:7"
									},
									{
										"nativeSrc": "4280:18:7",
										"nodeType": "YulVariableDeclaration",
										"src": "4280:18:7",
										"value": {
											"kind": "number",
											"nativeSrc": "4297:1:7",
											"nodeType": "YulLiteral",
											"src": "4297:1:7",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "srcOffset",
												"nativeSrc": "4284:9:7",
												"nodeType": "YulTypedName",
												"src": "4284:9:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "4308:17:7",
										"nodeType": "YulAssignment",
										"src": "4308:17:7",
										"value": {
											"kind": "number",
											"nativeSrc": "4321:4:7",
											"nodeType": "YulLiteral",
											"src": "4321:4:7",
											"type": "",
											"value": "0x20"
										},
										"variableNames": [
											{
												"name": "srcOffset",
												"nativeSrc": "4308:9:7",
												"nodeType": "YulIdentifier",
												"src": "4308:9:7"
											}
										]
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "4372:611:7",
													"nodeType": "YulBlock",
													"src": "4372:611:7",
													"statements": [
														{
															"nativeSrc": "4386:37:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4386:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4405:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4405:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4417:4:7",
																				"nodeType": "YulLiteral",
																				"src": "4417:4:7",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:7"
																		},
																		"nativeSrc": "4413:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4413:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4401:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:7"
																},
																"nativeSrc": "4401:22:7",
																"nodeType": "YulFunctionCall",
																"src": "4401:22:7"
															},
															"variables": [
																{
																	"name": "loopEnd",
																	"nativeSrc": "4390:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4390:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4437:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4437:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4483:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4483:4:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_string_storage",
																	"nativeSrc": "4451:31:7",
																	"nodeType": "YulIdentifier",
																	"src": "4451:31:7"
																},
																"nativeSrc": "4451:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4451:37:7"
															},
															"variables": [
																{
																	"name": "dstPtr",
																	"nativeSrc": "4441:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4441:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4501:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4501:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4510:1:7",
																"nodeType": "YulLiteral",
																"src": "4510:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4505:1:7",
																	"nodeType": "YulTypedName",
																	"src": "4505:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4569:163:7",
																"nodeType": "YulBlock",
																"src": "4569:163:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4594:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4594:6:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4612:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4612:3:7"
																								},
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4617:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4617:9:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4608:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4608:3:7"
																							},
																							"nativeSrc": "4608:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4608:19:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4602:5:7"
																					},
																					"nativeSrc": "4602:26:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4602:26:7"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "4587:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4587:6:7"
																			},
																			"nativeSrc": "4587:42:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4587:42:7"
																		},
																		"nativeSrc": "4587:42:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4587:42:7"
																	},
																	{
																		"nativeSrc": "4646:24:7",
																		"nodeType": "YulAssignment",
																		"src": "4646:24:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4660:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4660:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4668:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4668:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4656:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4656:3:7"
																			},
																			"nativeSrc": "4656:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4656:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dstPtr",
																				"nativeSrc": "4646:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4646:6:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4687:31:7",
																		"nodeType": "YulAssignment",
																		"src": "4687:31:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcOffset",
																					"nativeSrc": "4704:9:7",
																					"nodeType": "YulIdentifier",
																					"src": "4704:9:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4715:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4715:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4700:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4700:3:7"
																			},
																			"nativeSrc": "4700:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4700:18:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcOffset",
																				"nativeSrc": "4687:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4535:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4535:1:7"
																	},
																	{
																		"name": "loopEnd",
																		"nativeSrc": "4538:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4538:7:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4532:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4532:2:7"
																},
																"nativeSrc": "4532:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4532:14:7"
															},
															"nativeSrc": "4524:208:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4547:21:7",
																"nodeType": "YulBlock",
																"src": "4547:21:7",
																"statements": [
																	{
																		"nativeSrc": "4549:17:7",
																		"nodeType": "YulAssignment",
																		"src": "4549:17:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4558:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "4558:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4561:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4561:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4554:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4554:3:7"
																			},
																			"nativeSrc": "4554:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4554:12:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4549:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "4549:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4528:3:7",
																"nodeType": "YulBlock",
																"src": "4528:3:7",
																"statements": []
															},
															"src": "4524:208:7"
														},
														{
															"body": {
																"nativeSrc": "4768:156:7",
																"nodeType": "YulBlock",
																"src": "4768:156:7",
																"statements": [
																	{
																		"nativeSrc": "4786:43:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4786:43:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "4813:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4813:3:7"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "4818:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "4818:9:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4809:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4809:3:7"
																					},
																					"nativeSrc": "4809:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4809:19:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4803:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4803:5:7"
																			},
																			"nativeSrc": "4803:26:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4803:26:7"
																		},
																		"variables": [
																			{
																				"name": "lastValue",
																				"nativeSrc": "4790:9:7",
																				"nodeType": "YulTypedName",
																				"src": "4790:9:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dstPtr",
																					"nativeSrc": "4853:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4853:6:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "lastValue",
																							"nativeSrc": "4880:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "4880:9:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "newLen",
																									"nativeSrc": "4895:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4895:6:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4903:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4903:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "4891:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4891:3:7"
																							},
																							"nativeSrc": "4891:17:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4891:17:7"
																						}
																					],
																					"functionName": {
																						"name": "mask_bytes_dynamic",
																						"nativeSrc": "4861:18:7",
																						"nodeType": "YulIdentifier",
																						"src": "4861:18:7"
																					},
																					"nativeSrc": "4861:48:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4861:48:7"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "4846:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4846:6:7"
																			},
																			"nativeSrc": "4846:64:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4846:64:7"
																		},
																		"nativeSrc": "4846:64:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4846:64:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "loopEnd",
																		"nativeSrc": "4751:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4751:7:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4748:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4748:2:7"
																},
																"nativeSrc": "4748:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4748:19:7"
															},
															"nativeSrc": "4745:179:7",
															"nodeType": "YulIf",
															"src": "4745:179:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4944:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4944:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "newLen",
																						"nativeSrc": "4958:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4958:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4966:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4966:1:7",
																						"type": "",
																						"value": "2"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4954:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4954:3:7"
																				},
																				"nativeSrc": "4954:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4954:14:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4970:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4970:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4950:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4950:3:7"
																		},
																		"nativeSrc": "4950:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4950:22:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:7"
																},
																"nativeSrc": "4937:36:7",
																"nodeType": "YulFunctionCall",
																"src": "4937:36:7"
															},
															"nativeSrc": "4937:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "4937:36:7"
														}
													]
												},
												"nativeSrc": "4365:618:7",
												"nodeType": "YulCase",
												"src": "4365:618:7",
												"value": {
													"kind": "number",
													"nativeSrc": "4370:1:7",
													"nodeType": "YulLiteral",
													"src": "4370:1:7",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "5000:222:7",
													"nodeType": "YulBlock",
													"src": "5000:222:7",
													"statements": [
														{
															"nativeSrc": "5014:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5014:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5027:1:7",
																"nodeType": "YulLiteral",
																"src": "5027:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5018:5:7",
																	"nodeType": "YulTypedName",
																	"src": "5018:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5051:67:7",
																"nodeType": "YulBlock",
																"src": "5051:67:7",
																"statements": [
																	{
																		"nativeSrc": "5069:35:7",
																		"nodeType": "YulAssignment",
																		"src": "5069:35:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "5088:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5088:3:7"
																						},
																						{
																							"name": "srcOffset",
																							"nativeSrc": "5093:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "5093:9:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5084:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5084:3:7"
																					},
																					"nativeSrc": "5084:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5084:19:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5078:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5078:5:7"
																			},
																			"nativeSrc": "5078:26:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5078:26:7"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "5069:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5069:5:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"name": "newLen",
																"nativeSrc": "5044:6:7",
																"nodeType": "YulIdentifier",
																"src": "5044:6:7"
															},
															"nativeSrc": "5041:77:7",
															"nodeType": "YulIf",
															"src": "5041:77:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5138:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5138:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5197:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5197:5:7"
																			},
																			{
																				"name": "newLen",
																				"nativeSrc": "5204:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5204:6:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_used_part_and_set_length_of_short_byte_array",
																			"nativeSrc": "5144:52:7",
																			"nodeType": "YulIdentifier",
																			"src": "5144:52:7"
																		},
																		"nativeSrc": "5144:67:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5144:67:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:7"
																},
																"nativeSrc": "5131:81:7",
																"nodeType": "YulFunctionCall",
																"src": "5131:81:7"
															},
															"nativeSrc": "5131:81:7",
															"nodeType": "YulExpressionStatement",
															"src": "5131:81:7"
														}
													]
												},
												"nativeSrc": "4992:230:7",
												"nodeType": "YulCase",
												"src": "4992:230:7",
												"value": "default"
											}
										],
										"expression": {
											"arguments": [
												{
													"name": "newLen",
													"nativeSrc": "4345:6:7",
													"nodeType": "YulIdentifier",
													"src": "4345:6:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4353:2:7",
													"nodeType": "YulLiteral",
													"src": "4353:2:7",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "4342:2:7",
												"nodeType": "YulIdentifier",
												"src": "4342:2:7"
											},
											"nativeSrc": "4342:14:7",
											"nodeType": "YulFunctionCall",
											"src": "4342:14:7"
										},
										"nativeSrc": "4335:887:7",
										"nodeType": "YulSwitch",
										"src": "4335:887:7"
									}
								]
							},
							"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
							"nativeSrc": "3833:1395:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "slot",
									"nativeSrc": "3914:4:7",
									"nodeType": "YulTypedName",
									"src": "3914:4:7",
									"type": ""
								},
								{
									"name": "src",
									"nativeSrc": "3920:3:7",
									"nodeType": "YulTypedName",
									"src": "3920:3:7",
									"type": ""
								}
							],
							"src": "3833:1395:7"
						},
						{
							"body": {
								"nativeSrc": "5279:81:7",
								"nodeType": "YulBlock",
								"src": "5279:81:7",
								"statements": [
									{
										"nativeSrc": "5289:65:7",
										"nodeType": "YulAssignment",
										"src": "5289:65:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "5304:5:7",
													"nodeType": "YulIdentifier",
													"src": "5304:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5311:42:7",
													"nodeType": "YulLiteral",
													"src": "5311:42:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "5300:3:7",
												"nodeType": "YulIdentifier",
												"src": "5300:3:7"
											},
											"nativeSrc": "5300:54:7",
											"nodeType": "YulFunctionCall",
											"src": "5300:54:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "5289:7:7",
												"nodeType": "YulIdentifier",
												"src": "5289:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "5234:126:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5261:5:7",
									"nodeType": "YulTypedName",
									"src": "5261:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "5271:7:7",
									"nodeType": "YulTypedName",
									"src": "5271:7:7",
									"type": ""
								}
							],
							"src": "5234:126:7"
						},
						{
							"body": {
								"nativeSrc": "5411:51:7",
								"nodeType": "YulBlock",
								"src": "5411:51:7",
								"statements": [
									{
										"nativeSrc": "5421:35:7",
										"nodeType": "YulAssignment",
										"src": "5421:35:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "5450:5:7",
													"nodeType": "YulIdentifier",
													"src": "5450:5:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "5432:17:7",
												"nodeType": "YulIdentifier",
												"src": "5432:17:7"
											},
											"nativeSrc": "5432:24:7",
											"nodeType": "YulFunctionCall",
											"src": "5432:24:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "5421:7:7",
												"nodeType": "YulIdentifier",
												"src": "5421:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "5366:96:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5393:5:7",
									"nodeType": "YulTypedName",
									"src": "5393:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "5403:7:7",
									"nodeType": "YulTypedName",
									"src": "5403:7:7",
									"type": ""
								}
							],
							"src": "5366:96:7"
						},
						{
							"body": {
								"nativeSrc": "5533:53:7",
								"nodeType": "YulBlock",
								"src": "5533:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5550:3:7",
													"nodeType": "YulIdentifier",
													"src": "5550:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5573:5:7",
															"nodeType": "YulIdentifier",
															"src": "5573:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "5555:17:7",
														"nodeType": "YulIdentifier",
														"src": "5555:17:7"
													},
													"nativeSrc": "5555:24:7",
													"nodeType": "YulFunctionCall",
													"src": "5555:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5543:6:7",
												"nodeType": "YulIdentifier",
												"src": "5543:6:7"
											},
											"nativeSrc": "5543:37:7",
											"nodeType": "YulFunctionCall",
											"src": "5543:37:7"
										},
										"nativeSrc": "5543:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "5543:37:7"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "5468:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5521:5:7",
									"nodeType": "YulTypedName",
									"src": "5521:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5528:3:7",
									"nodeType": "YulTypedName",
									"src": "5528:3:7",
									"type": ""
								}
							],
							"src": "5468:118:7"
						},
						{
							"body": {
								"nativeSrc": "5690:124:7",
								"nodeType": "YulBlock",
								"src": "5690:124:7",
								"statements": [
									{
										"nativeSrc": "5700:26:7",
										"nodeType": "YulAssignment",
										"src": "5700:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5712:9:7",
													"nodeType": "YulIdentifier",
													"src": "5712:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5723:2:7",
													"nodeType": "YulLiteral",
													"src": "5723:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5708:3:7",
												"nodeType": "YulIdentifier",
												"src": "5708:3:7"
											},
											"nativeSrc": "5708:18:7",
											"nodeType": "YulFunctionCall",
											"src": "5708:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5700:4:7",
												"nodeType": "YulIdentifier",
												"src": "5700:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5780:6:7",
													"nodeType": "YulIdentifier",
													"src": "5780:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5793:9:7",
															"nodeType": "YulIdentifier",
															"src": "5793:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "5804:1:7",
															"nodeType": "YulLiteral",
															"src": "5804:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5789:3:7",
														"nodeType": "YulIdentifier",
														"src": "5789:3:7"
													},
													"nativeSrc": "5789:17:7",
													"nodeType": "YulFunctionCall",
													"src": "5789:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5736:43:7",
												"nodeType": "YulIdentifier",
												"src": "5736:43:7"
											},
											"nativeSrc": "5736:71:7",
											"nodeType": "YulFunctionCall",
											"src": "5736:71:7"
										},
										"nativeSrc": "5736:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "5736:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "5592:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5662:9:7",
									"nodeType": "YulTypedName",
									"src": "5662:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5674:6:7",
									"nodeType": "YulTypedName",
									"src": "5674:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5685:4:7",
									"nodeType": "YulTypedName",
									"src": "5685:4:7",
									"type": ""
								}
							],
							"src": "5592:222:7"
						},
						{
							"body": {
								"nativeSrc": "5848:152:7",
								"nodeType": "YulBlock",
								"src": "5848:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5865:1:7",
													"nodeType": "YulLiteral",
													"src": "5865:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "5868:77:7",
													"nodeType": "YulLiteral",
													"src": "5868:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5858:6:7",
												"nodeType": "YulIdentifier",
												"src": "5858:6:7"
											},
											"nativeSrc": "5858:88:7",
											"nodeType": "YulFunctionCall",
											"src": "5858:88:7"
										},
										"nativeSrc": "5858:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "5858:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5962:1:7",
													"nodeType": "YulLiteral",
													"src": "5962:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "5965:4:7",
													"nodeType": "YulLiteral",
													"src": "5965:4:7",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5955:6:7",
												"nodeType": "YulIdentifier",
												"src": "5955:6:7"
											},
											"nativeSrc": "5955:15:7",
											"nodeType": "YulFunctionCall",
											"src": "5955:15:7"
										},
										"nativeSrc": "5955:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "5955:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "5986:1:7",
													"nodeType": "YulLiteral",
													"src": "5986:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "5989:4:7",
													"nodeType": "YulLiteral",
													"src": "5989:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "5979:6:7",
												"nodeType": "YulIdentifier",
												"src": "5979:6:7"
											},
											"nativeSrc": "5979:15:7",
											"nodeType": "YulFunctionCall",
											"src": "5979:15:7"
										},
										"nativeSrc": "5979:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "5979:15:7"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "5820:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "5820:180:7"
						},
						{
							"body": {
								"nativeSrc": "6057:51:7",
								"nodeType": "YulBlock",
								"src": "6057:51:7",
								"statements": [
									{
										"nativeSrc": "6067:34:7",
										"nodeType": "YulAssignment",
										"src": "6067:34:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "6092:1:7",
													"nodeType": "YulLiteral",
													"src": "6092:1:7",
													"type": "",
													"value": "1"
												},
												{
													"name": "value",
													"nativeSrc": "6095:5:7",
													"nodeType": "YulIdentifier",
													"src": "6095:5:7"
												}
											],
											"functionName": {
												"name": "shr",
												"nativeSrc": "6088:3:7",
												"nodeType": "YulIdentifier",
												"src": "6088:3:7"
											},
											"nativeSrc": "6088:13:7",
											"nodeType": "YulFunctionCall",
											"src": "6088:13:7"
										},
										"variableNames": [
											{
												"name": "newValue",
												"nativeSrc": "6067:8:7",
												"nodeType": "YulIdentifier",
												"src": "6067:8:7"
											}
										]
									}
								]
							},
							"name": "shift_right_1_unsigned",
							"nativeSrc": "6006:102:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "6038:5:7",
									"nodeType": "YulTypedName",
									"src": "6038:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "newValue",
									"nativeSrc": "6048:8:7",
									"nodeType": "YulTypedName",
									"src": "6048:8:7",
									"type": ""
								}
							],
							"src": "6006:102:7"
						},
						{
							"body": {
								"nativeSrc": "6187:775:7",
								"nodeType": "YulBlock",
								"src": "6187:775:7",
								"statements": [
									{
										"nativeSrc": "6197:15:7",
										"nodeType": "YulAssignment",
										"src": "6197:15:7",
										"value": {
											"name": "_power",
											"nativeSrc": "6206:6:7",
											"nodeType": "YulIdentifier",
											"src": "6206:6:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "6197:5:7",
												"nodeType": "YulIdentifier",
												"src": "6197:5:7"
											}
										]
									},
									{
										"nativeSrc": "6221:14:7",
										"nodeType": "YulAssignment",
										"src": "6221:14:7",
										"value": {
											"name": "_base",
											"nativeSrc": "6230:5:7",
											"nodeType": "YulIdentifier",
											"src": "6230:5:7"
										},
										"variableNames": [
											{
												"name": "base",
												"nativeSrc": "6221:4:7",
												"nodeType": "YulIdentifier",
												"src": "6221:4:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "6279:677:7",
											"nodeType": "YulBlock",
											"src": "6279:677:7",
											"statements": [
												{
													"body": {
														"nativeSrc": "6367:22:7",
														"nodeType": "YulBlock",
														"src": "6367:22:7",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"functionName": {
																		"name": "panic_error_0x11",
																		"nativeSrc": "6369:16:7",
																		"nodeType": "YulIdentifier",
																		"src": "6369:16:7"
																	},
																	"nativeSrc": "6369:18:7",
																	"nodeType": "YulFunctionCall",
																	"src": "6369:18:7"
																},
																"nativeSrc": "6369:18:7",
																"nodeType": "YulExpressionStatement",
																"src": "6369:18:7"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "base",
																"nativeSrc": "6345:4:7",
																"nodeType": "YulIdentifier",
																"src": "6345:4:7"
															},
															{
																"arguments": [
																	{
																		"name": "max",
																		"nativeSrc": "6355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6355:3:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "6360:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6360:4:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6351:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6351:3:7"
																},
																"nativeSrc": "6351:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6351:14:7"
															}
														],
														"functionName": {
															"name": "gt",
															"nativeSrc": "6342:2:7",
															"nodeType": "YulIdentifier",
															"src": "6342:2:7"
														},
														"nativeSrc": "6342:24:7",
														"nodeType": "YulFunctionCall",
														"src": "6342:24:7"
													},
													"nativeSrc": "6339:50:7",
													"nodeType": "YulIf",
													"src": "6339:50:7"
												},
												{
													"body": {
														"nativeSrc": "6434:419:7",
														"nodeType": "YulBlock",
														"src": "6434:419:7",
														"statements": [
															{
																"nativeSrc": "6814:25:7",
																"nodeType": "YulAssignment",
																"src": "6814:25:7",
																"value": {
																	"arguments": [
																		{
																			"name": "power",
																			"nativeSrc": "6827:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6827:5:7"
																		},
																		{
																			"name": "base",
																			"nativeSrc": "6834:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "6834:4:7"
																		}
																	],
																	"functionName": {
																		"name": "mul",
																		"nativeSrc": "6823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6823:3:7"
																	},
																	"nativeSrc": "6823:16:7",
																	"nodeType": "YulFunctionCall",
																	"src": "6823:16:7"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nativeSrc": "6814:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6814:5:7"
																	}
																]
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "exponent",
																"nativeSrc": "6409:8:7",
																"nodeType": "YulIdentifier",
																"src": "6409:8:7"
															},
															{
																"kind": "number",
																"nativeSrc": "6419:1:7",
																"nodeType": "YulLiteral",
																"src": "6419:1:7",
																"type": "",
																"value": "1"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "6405:3:7",
															"nodeType": "YulIdentifier",
															"src": "6405:3:7"
														},
														"nativeSrc": "6405:16:7",
														"nodeType": "YulFunctionCall",
														"src": "6405:16:7"
													},
													"nativeSrc": "6402:451:7",
													"nodeType": "YulIf",
													"src": "6402:451:7"
												},
												{
													"nativeSrc": "6866:23:7",
													"nodeType": "YulAssignment",
													"src": "6866:23:7",
													"value": {
														"arguments": [
															{
																"name": "base",
																"nativeSrc": "6878:4:7",
																"nodeType": "YulIdentifier",
																"src": "6878:4:7"
															},
															{
																"name": "base",
																"nativeSrc": "6884:4:7",
																"nodeType": "YulIdentifier",
																"src": "6884:4:7"
															}
														],
														"functionName": {
															"name": "mul",
															"nativeSrc": "6874:3:7",
															"nodeType": "YulIdentifier",
															"src": "6874:3:7"
														},
														"nativeSrc": "6874:15:7",
														"nodeType": "YulFunctionCall",
														"src": "6874:15:7"
													},
													"variableNames": [
														{
															"name": "base",
															"nativeSrc": "6866:4:7",
															"nodeType": "YulIdentifier",
															"src": "6866:4:7"
														}
													]
												},
												{
													"nativeSrc": "6902:44:7",
													"nodeType": "YulAssignment",
													"src": "6902:44:7",
													"value": {
														"arguments": [
															{
																"name": "exponent",
																"nativeSrc": "6937:8:7",
																"nodeType": "YulIdentifier",
																"src": "6937:8:7"
															}
														],
														"functionName": {
															"name": "shift_right_1_unsigned",
															"nativeSrc": "6914:22:7",
															"nodeType": "YulIdentifier",
															"src": "6914:22:7"
														},
														"nativeSrc": "6914:32:7",
														"nodeType": "YulFunctionCall",
														"src": "6914:32:7"
													},
													"variableNames": [
														{
															"name": "exponent",
															"nativeSrc": "6902:8:7",
															"nodeType": "YulIdentifier",
															"src": "6902:8:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "exponent",
													"nativeSrc": "6255:8:7",
													"nodeType": "YulIdentifier",
													"src": "6255:8:7"
												},
												{
													"kind": "number",
													"nativeSrc": "6265:1:7",
													"nodeType": "YulLiteral",
													"src": "6265:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "6252:2:7",
												"nodeType": "YulIdentifier",
												"src": "6252:2:7"
											},
											"nativeSrc": "6252:15:7",
											"nodeType": "YulFunctionCall",
											"src": "6252:15:7"
										},
										"nativeSrc": "6244:712:7",
										"nodeType": "YulForLoop",
										"post": {
											"nativeSrc": "6268:2:7",
											"nodeType": "YulBlock",
											"src": "6268:2:7",
											"statements": []
										},
										"pre": {
											"nativeSrc": "6248:3:7",
											"nodeType": "YulBlock",
											"src": "6248:3:7",
											"statements": []
										},
										"src": "6244:712:7"
									}
								]
							},
							"name": "checked_exp_helper",
							"nativeSrc": "6114:848:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "_power",
									"nativeSrc": "6142:6:7",
									"nodeType": "YulTypedName",
									"src": "6142:6:7",
									"type": ""
								},
								{
									"name": "_base",
									"nativeSrc": "6150:5:7",
									"nodeType": "YulTypedName",
									"src": "6150:5:7",
									"type": ""
								},
								{
									"name": "exponent",
									"nativeSrc": "6157:8:7",
									"nodeType": "YulTypedName",
									"src": "6157:8:7",
									"type": ""
								},
								{
									"name": "max",
									"nativeSrc": "6167:3:7",
									"nodeType": "YulTypedName",
									"src": "6167:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "power",
									"nativeSrc": "6175:5:7",
									"nodeType": "YulTypedName",
									"src": "6175:5:7",
									"type": ""
								},
								{
									"name": "base",
									"nativeSrc": "6182:4:7",
									"nodeType": "YulTypedName",
									"src": "6182:4:7",
									"type": ""
								}
							],
							"src": "6114:848:7"
						},
						{
							"body": {
								"nativeSrc": "7028:1013:7",
								"nodeType": "YulBlock",
								"src": "7028:1013:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "7223:20:7",
											"nodeType": "YulBlock",
											"src": "7223:20:7",
											"statements": [
												{
													"nativeSrc": "7225:10:7",
													"nodeType": "YulAssignment",
													"src": "7225:10:7",
													"value": {
														"kind": "number",
														"nativeSrc": "7234:1:7",
														"nodeType": "YulLiteral",
														"src": "7234:1:7",
														"type": "",
														"value": "1"
													},
													"variableNames": [
														{
															"name": "power",
															"nativeSrc": "7225:5:7",
															"nodeType": "YulIdentifier",
															"src": "7225:5:7"
														}
													]
												},
												{
													"nativeSrc": "7236:5:7",
													"nodeType": "YulLeave",
													"src": "7236:5:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "exponent",
													"nativeSrc": "7213:8:7",
													"nodeType": "YulIdentifier",
													"src": "7213:8:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "7206:6:7",
												"nodeType": "YulIdentifier",
												"src": "7206:6:7"
											},
											"nativeSrc": "7206:16:7",
											"nodeType": "YulFunctionCall",
											"src": "7206:16:7"
										},
										"nativeSrc": "7203:40:7",
										"nodeType": "YulIf",
										"src": "7203:40:7"
									},
									{
										"body": {
											"nativeSrc": "7268:20:7",
											"nodeType": "YulBlock",
											"src": "7268:20:7",
											"statements": [
												{
													"nativeSrc": "7270:10:7",
													"nodeType": "YulAssignment",
													"src": "7270:10:7",
													"value": {
														"kind": "number",
														"nativeSrc": "7279:1:7",
														"nodeType": "YulLiteral",
														"src": "7279:1:7",
														"type": "",
														"value": "0"
													},
													"variableNames": [
														{
															"name": "power",
															"nativeSrc": "7270:5:7",
															"nodeType": "YulIdentifier",
															"src": "7270:5:7"
														}
													]
												},
												{
													"nativeSrc": "7281:5:7",
													"nodeType": "YulLeave",
													"src": "7281:5:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "base",
													"nativeSrc": "7262:4:7",
													"nodeType": "YulIdentifier",
													"src": "7262:4:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "7255:6:7",
												"nodeType": "YulIdentifier",
												"src": "7255:6:7"
											},
											"nativeSrc": "7255:12:7",
											"nodeType": "YulFunctionCall",
											"src": "7255:12:7"
										},
										"nativeSrc": "7252:36:7",
										"nodeType": "YulIf",
										"src": "7252:36:7"
									},
									{
										"cases": [
											{
												"body": {
													"nativeSrc": "7398:20:7",
													"nodeType": "YulBlock",
													"src": "7398:20:7",
													"statements": [
														{
															"nativeSrc": "7400:10:7",
															"nodeType": "YulAssignment",
															"src": "7400:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7409:1:7",
																"nodeType": "YulLiteral",
																"src": "7409:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7400:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:5:7"
																}
															]
														},
														{
															"nativeSrc": "7411:5:7",
															"nodeType": "YulLeave",
															"src": "7411:5:7"
														}
													]
												},
												"nativeSrc": "7391:27:7",
												"nodeType": "YulCase",
												"src": "7391:27:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7396:1:7",
													"nodeType": "YulLiteral",
													"src": "7396:1:7",
													"type": "",
													"value": "1"
												}
											},
											{
												"body": {
													"nativeSrc": "7442:176:7",
													"nodeType": "YulBlock",
													"src": "7442:176:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7477:22:7",
																"nodeType": "YulBlock",
																"src": "7477:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7479:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7479:16:7"
																			},
																			"nativeSrc": "7479:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7479:18:7"
																		},
																		"nativeSrc": "7479:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7479:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7462:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7462:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7472:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7472:3:7",
																		"type": "",
																		"value": "255"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7459:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7459:2:7"
																},
																"nativeSrc": "7459:17:7",
																"nodeType": "YulFunctionCall",
																"src": "7459:17:7"
															},
															"nativeSrc": "7456:43:7",
															"nodeType": "YulIf",
															"src": "7456:43:7"
														},
														{
															"nativeSrc": "7512:25:7",
															"nodeType": "YulAssignment",
															"src": "7512:25:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7525:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7525:1:7",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7528:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "7528:8:7"
																	}
																],
																"functionName": {
																	"name": "exp",
																	"nativeSrc": "7521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7521:3:7"
																},
																"nativeSrc": "7521:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7521:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7512:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7512:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7568:22:7",
																"nodeType": "YulBlock",
																"src": "7568:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7570:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7570:16:7"
																			},
																			"nativeSrc": "7570:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7570:18:7"
																		},
																		"nativeSrc": "7570:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7570:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7556:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7556:5:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7563:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7563:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7553:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7553:2:7"
																},
																"nativeSrc": "7553:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7553:14:7"
															},
															"nativeSrc": "7550:40:7",
															"nodeType": "YulIf",
															"src": "7550:40:7"
														},
														{
															"nativeSrc": "7603:5:7",
															"nodeType": "YulLeave",
															"src": "7603:5:7"
														}
													]
												},
												"nativeSrc": "7427:191:7",
												"nodeType": "YulCase",
												"src": "7427:191:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7432:1:7",
													"nodeType": "YulLiteral",
													"src": "7432:1:7",
													"type": "",
													"value": "2"
												}
											}
										],
										"expression": {
											"name": "base",
											"nativeSrc": "7348:4:7",
											"nodeType": "YulIdentifier",
											"src": "7348:4:7"
										},
										"nativeSrc": "7341:277:7",
										"nodeType": "YulSwitch",
										"src": "7341:277:7"
									},
									{
										"body": {
											"nativeSrc": "7750:123:7",
											"nodeType": "YulBlock",
											"src": "7750:123:7",
											"statements": [
												{
													"nativeSrc": "7764:28:7",
													"nodeType": "YulAssignment",
													"src": "7764:28:7",
													"value": {
														"arguments": [
															{
																"name": "base",
																"nativeSrc": "7777:4:7",
																"nodeType": "YulIdentifier",
																"src": "7777:4:7"
															},
															{
																"name": "exponent",
																"nativeSrc": "7783:8:7",
																"nodeType": "YulIdentifier",
																"src": "7783:8:7"
															}
														],
														"functionName": {
															"name": "exp",
															"nativeSrc": "7773:3:7",
															"nodeType": "YulIdentifier",
															"src": "7773:3:7"
														},
														"nativeSrc": "7773:19:7",
														"nodeType": "YulFunctionCall",
														"src": "7773:19:7"
													},
													"variableNames": [
														{
															"name": "power",
															"nativeSrc": "7764:5:7",
															"nodeType": "YulIdentifier",
															"src": "7764:5:7"
														}
													]
												},
												{
													"body": {
														"nativeSrc": "7823:22:7",
														"nodeType": "YulBlock",
														"src": "7823:22:7",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"functionName": {
																		"name": "panic_error_0x11",
																		"nativeSrc": "7825:16:7",
																		"nodeType": "YulIdentifier",
																		"src": "7825:16:7"
																	},
																	"nativeSrc": "7825:18:7",
																	"nodeType": "YulFunctionCall",
																	"src": "7825:18:7"
																},
																"nativeSrc": "7825:18:7",
																"nodeType": "YulExpressionStatement",
																"src": "7825:18:7"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "power",
																"nativeSrc": "7811:5:7",
																"nodeType": "YulIdentifier",
																"src": "7811:5:7"
															},
															{
																"name": "max",
																"nativeSrc": "7818:3:7",
																"nodeType": "YulIdentifier",
																"src": "7818:3:7"
															}
														],
														"functionName": {
															"name": "gt",
															"nativeSrc": "7808:2:7",
															"nodeType": "YulIdentifier",
															"src": "7808:2:7"
														},
														"nativeSrc": "7808:14:7",
														"nodeType": "YulFunctionCall",
														"src": "7808:14:7"
													},
													"nativeSrc": "7805:40:7",
													"nodeType": "YulIf",
													"src": "7805:40:7"
												},
												{
													"nativeSrc": "7858:5:7",
													"nodeType": "YulLeave",
													"src": "7858:5:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "base",
																	"nativeSrc": "7653:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7653:4:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7659:2:7",
																	"nodeType": "YulLiteral",
																	"src": "7659:2:7",
																	"type": "",
																	"value": "11"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7650:2:7",
																"nodeType": "YulIdentifier",
																"src": "7650:2:7"
															},
															"nativeSrc": "7650:12:7",
															"nodeType": "YulFunctionCall",
															"src": "7650:12:7"
														},
														{
															"arguments": [
																{
																	"name": "exponent",
																	"nativeSrc": "7667:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7667:8:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7677:2:7",
																	"nodeType": "YulLiteral",
																	"src": "7677:2:7",
																	"type": "",
																	"value": "78"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7664:2:7",
																"nodeType": "YulIdentifier",
																"src": "7664:2:7"
															},
															"nativeSrc": "7664:16:7",
															"nodeType": "YulFunctionCall",
															"src": "7664:16:7"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "7646:3:7",
														"nodeType": "YulIdentifier",
														"src": "7646:3:7"
													},
													"nativeSrc": "7646:35:7",
													"nodeType": "YulFunctionCall",
													"src": "7646:35:7"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "base",
																	"nativeSrc": "7702:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7702:4:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7708:3:7",
																	"nodeType": "YulLiteral",
																	"src": "7708:3:7",
																	"type": "",
																	"value": "307"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7699:2:7",
																"nodeType": "YulIdentifier",
																"src": "7699:2:7"
															},
															"nativeSrc": "7699:13:7",
															"nodeType": "YulFunctionCall",
															"src": "7699:13:7"
														},
														{
															"arguments": [
																{
																	"name": "exponent",
																	"nativeSrc": "7717:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "7717:8:7"
																},
																{
																	"kind": "number",
																	"nativeSrc": "7727:2:7",
																	"nodeType": "YulLiteral",
																	"src": "7727:2:7",
																	"type": "",
																	"value": "32"
																}
															],
															"functionName": {
																"name": "lt",
																"nativeSrc": "7714:2:7",
																"nodeType": "YulIdentifier",
																"src": "7714:2:7"
															},
															"nativeSrc": "7714:16:7",
															"nodeType": "YulFunctionCall",
															"src": "7714:16:7"
														}
													],
													"functionName": {
														"name": "and",
														"nativeSrc": "7695:3:7",
														"nodeType": "YulIdentifier",
														"src": "7695:3:7"
													},
													"nativeSrc": "7695:36:7",
													"nodeType": "YulFunctionCall",
													"src": "7695:36:7"
												}
											],
											"functionName": {
												"name": "or",
												"nativeSrc": "7630:2:7",
												"nodeType": "YulIdentifier",
												"src": "7630:2:7"
											},
											"nativeSrc": "7630:111:7",
											"nodeType": "YulFunctionCall",
											"src": "7630:111:7"
										},
										"nativeSrc": "7627:246:7",
										"nodeType": "YulIf",
										"src": "7627:246:7"
									},
									{
										"nativeSrc": "7883:57:7",
										"nodeType": "YulAssignment",
										"src": "7883:57:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7917:1:7",
													"nodeType": "YulLiteral",
													"src": "7917:1:7",
													"type": "",
													"value": "1"
												},
												{
													"name": "base",
													"nativeSrc": "7920:4:7",
													"nodeType": "YulIdentifier",
													"src": "7920:4:7"
												},
												{
													"name": "exponent",
													"nativeSrc": "7926:8:7",
													"nodeType": "YulIdentifier",
													"src": "7926:8:7"
												},
												{
													"name": "max",
													"nativeSrc": "7936:3:7",
													"nodeType": "YulIdentifier",
													"src": "7936:3:7"
												}
											],
											"functionName": {
												"name": "checked_exp_helper",
												"nativeSrc": "7898:18:7",
												"nodeType": "YulIdentifier",
												"src": "7898:18:7"
											},
											"nativeSrc": "7898:42:7",
											"nodeType": "YulFunctionCall",
											"src": "7898:42:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "7883:5:7",
												"nodeType": "YulIdentifier",
												"src": "7883:5:7"
											},
											{
												"name": "base",
												"nativeSrc": "7890:4:7",
												"nodeType": "YulIdentifier",
												"src": "7890:4:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "7979:22:7",
											"nodeType": "YulBlock",
											"src": "7979:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "7981:16:7",
															"nodeType": "YulIdentifier",
															"src": "7981:16:7"
														},
														"nativeSrc": "7981:18:7",
														"nodeType": "YulFunctionCall",
														"src": "7981:18:7"
													},
													"nativeSrc": "7981:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "7981:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "power",
													"nativeSrc": "7956:5:7",
													"nodeType": "YulIdentifier",
													"src": "7956:5:7"
												},
												{
													"arguments": [
														{
															"name": "max",
															"nativeSrc": "7967:3:7",
															"nodeType": "YulIdentifier",
															"src": "7967:3:7"
														},
														{
															"name": "base",
															"nativeSrc": "7972:4:7",
															"nodeType": "YulIdentifier",
															"src": "7972:4:7"
														}
													],
													"functionName": {
														"name": "div",
														"nativeSrc": "7963:3:7",
														"nodeType": "YulIdentifier",
														"src": "7963:3:7"
													},
													"nativeSrc": "7963:14:7",
													"nodeType": "YulFunctionCall",
													"src": "7963:14:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "7953:2:7",
												"nodeType": "YulIdentifier",
												"src": "7953:2:7"
											},
											"nativeSrc": "7953:25:7",
											"nodeType": "YulFunctionCall",
											"src": "7953:25:7"
										},
										"nativeSrc": "7950:51:7",
										"nodeType": "YulIf",
										"src": "7950:51:7"
									},
									{
										"nativeSrc": "8010:25:7",
										"nodeType": "YulAssignment",
										"src": "8010:25:7",
										"value": {
											"arguments": [
												{
													"name": "power",
													"nativeSrc": "8023:5:7",
													"nodeType": "YulIdentifier",
													"src": "8023:5:7"
												},
												{
													"name": "base",
													"nativeSrc": "8030:4:7",
													"nodeType": "YulIdentifier",
													"src": "8030:4:7"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "8019:3:7",
												"nodeType": "YulIdentifier",
												"src": "8019:3:7"
											},
											"nativeSrc": "8019:16:7",
											"nodeType": "YulFunctionCall",
											"src": "8019:16:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "8010:5:7",
												"nodeType": "YulIdentifier",
												"src": "8010:5:7"
											}
										]
									}
								]
							},
							"name": "checked_exp_unsigned",
							"nativeSrc": "6968:1073:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "base",
									"nativeSrc": "6998:4:7",
									"nodeType": "YulTypedName",
									"src": "6998:4:7",
									"type": ""
								},
								{
									"name": "exponent",
									"nativeSrc": "7004:8:7",
									"nodeType": "YulTypedName",
									"src": "7004:8:7",
									"type": ""
								},
								{
									"name": "max",
									"nativeSrc": "7014:3:7",
									"nodeType": "YulTypedName",
									"src": "7014:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "power",
									"nativeSrc": "7022:5:7",
									"nodeType": "YulTypedName",
									"src": "7022:5:7",
									"type": ""
								}
							],
							"src": "6968:1073:7"
						},
						{
							"body": {
								"nativeSrc": "8090:43:7",
								"nodeType": "YulBlock",
								"src": "8090:43:7",
								"statements": [
									{
										"nativeSrc": "8100:27:7",
										"nodeType": "YulAssignment",
										"src": "8100:27:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "8115:5:7",
													"nodeType": "YulIdentifier",
													"src": "8115:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8122:4:7",
													"nodeType": "YulLiteral",
													"src": "8122:4:7",
													"type": "",
													"value": "0xff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "8111:3:7",
												"nodeType": "YulIdentifier",
												"src": "8111:3:7"
											},
											"nativeSrc": "8111:16:7",
											"nodeType": "YulFunctionCall",
											"src": "8111:16:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "8100:7:7",
												"nodeType": "YulIdentifier",
												"src": "8100:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint8",
							"nativeSrc": "8047:86:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "8072:5:7",
									"nodeType": "YulTypedName",
									"src": "8072:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "8082:7:7",
									"nodeType": "YulTypedName",
									"src": "8082:7:7",
									"type": ""
								}
							],
							"src": "8047:86:7"
						},
						{
							"body": {
								"nativeSrc": "8203:217:7",
								"nodeType": "YulBlock",
								"src": "8203:217:7",
								"statements": [
									{
										"nativeSrc": "8213:31:7",
										"nodeType": "YulAssignment",
										"src": "8213:31:7",
										"value": {
											"arguments": [
												{
													"name": "base",
													"nativeSrc": "8239:4:7",
													"nodeType": "YulIdentifier",
													"src": "8239:4:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8221:17:7",
												"nodeType": "YulIdentifier",
												"src": "8221:17:7"
											},
											"nativeSrc": "8221:23:7",
											"nodeType": "YulFunctionCall",
											"src": "8221:23:7"
										},
										"variableNames": [
											{
												"name": "base",
												"nativeSrc": "8213:4:7",
												"nodeType": "YulIdentifier",
												"src": "8213:4:7"
											}
										]
									},
									{
										"nativeSrc": "8253:37:7",
										"nodeType": "YulAssignment",
										"src": "8253:37:7",
										"value": {
											"arguments": [
												{
													"name": "exponent",
													"nativeSrc": "8281:8:7",
													"nodeType": "YulIdentifier",
													"src": "8281:8:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint8",
												"nativeSrc": "8265:15:7",
												"nodeType": "YulIdentifier",
												"src": "8265:15:7"
											},
											"nativeSrc": "8265:25:7",
											"nodeType": "YulFunctionCall",
											"src": "8265:25:7"
										},
										"variableNames": [
											{
												"name": "exponent",
												"nativeSrc": "8253:8:7",
												"nodeType": "YulIdentifier",
												"src": "8253:8:7"
											}
										]
									},
									{
										"nativeSrc": "8300:113:7",
										"nodeType": "YulAssignment",
										"src": "8300:113:7",
										"value": {
											"arguments": [
												{
													"name": "base",
													"nativeSrc": "8330:4:7",
													"nodeType": "YulIdentifier",
													"src": "8330:4:7"
												},
												{
													"name": "exponent",
													"nativeSrc": "8336:8:7",
													"nodeType": "YulIdentifier",
													"src": "8336:8:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8346:66:7",
													"nodeType": "YulLiteral",
													"src": "8346:66:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "checked_exp_unsigned",
												"nativeSrc": "8309:20:7",
												"nodeType": "YulIdentifier",
												"src": "8309:20:7"
											},
											"nativeSrc": "8309:104:7",
											"nodeType": "YulFunctionCall",
											"src": "8309:104:7"
										},
										"variableNames": [
											{
												"name": "power",
												"nativeSrc": "8300:5:7",
												"nodeType": "YulIdentifier",
												"src": "8300:5:7"
											}
										]
									}
								]
							},
							"name": "checked_exp_t_uint256_t_uint8",
							"nativeSrc": "8139:281:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "base",
									"nativeSrc": "8178:4:7",
									"nodeType": "YulTypedName",
									"src": "8178:4:7",
									"type": ""
								},
								{
									"name": "exponent",
									"nativeSrc": "8184:8:7",
									"nodeType": "YulTypedName",
									"src": "8184:8:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "power",
									"nativeSrc": "8197:5:7",
									"nodeType": "YulTypedName",
									"src": "8197:5:7",
									"type": ""
								}
							],
							"src": "8139:281:7"
						},
						{
							"body": {
								"nativeSrc": "8474:362:7",
								"nodeType": "YulBlock",
								"src": "8474:362:7",
								"statements": [
									{
										"nativeSrc": "8484:25:7",
										"nodeType": "YulAssignment",
										"src": "8484:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8507:1:7",
													"nodeType": "YulIdentifier",
													"src": "8507:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8489:17:7",
												"nodeType": "YulIdentifier",
												"src": "8489:17:7"
											},
											"nativeSrc": "8489:20:7",
											"nodeType": "YulFunctionCall",
											"src": "8489:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "8484:1:7",
												"nodeType": "YulIdentifier",
												"src": "8484:1:7"
											}
										]
									},
									{
										"nativeSrc": "8518:25:7",
										"nodeType": "YulAssignment",
										"src": "8518:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "8541:1:7",
													"nodeType": "YulIdentifier",
													"src": "8541:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8523:17:7",
												"nodeType": "YulIdentifier",
												"src": "8523:17:7"
											},
											"nativeSrc": "8523:20:7",
											"nodeType": "YulFunctionCall",
											"src": "8523:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "8518:1:7",
												"nodeType": "YulIdentifier",
												"src": "8518:1:7"
											}
										]
									},
									{
										"nativeSrc": "8552:28:7",
										"nodeType": "YulVariableDeclaration",
										"src": "8552:28:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "8575:1:7",
													"nodeType": "YulIdentifier",
													"src": "8575:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "8578:1:7",
													"nodeType": "YulIdentifier",
													"src": "8578:1:7"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "8571:3:7",
												"nodeType": "YulIdentifier",
												"src": "8571:3:7"
											},
											"nativeSrc": "8571:9:7",
											"nodeType": "YulFunctionCall",
											"src": "8571:9:7"
										},
										"variables": [
											{
												"name": "product_raw",
												"nativeSrc": "8556:11:7",
												"nodeType": "YulTypedName",
												"src": "8556:11:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "8589:41:7",
										"nodeType": "YulAssignment",
										"src": "8589:41:7",
										"value": {
											"arguments": [
												{
													"name": "product_raw",
													"nativeSrc": "8618:11:7",
													"nodeType": "YulIdentifier",
													"src": "8618:11:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "8600:17:7",
												"nodeType": "YulIdentifier",
												"src": "8600:17:7"
											},
											"nativeSrc": "8600:30:7",
											"nodeType": "YulFunctionCall",
											"src": "8600:30:7"
										},
										"variableNames": [
											{
												"name": "product",
												"nativeSrc": "8589:7:7",
												"nodeType": "YulIdentifier",
												"src": "8589:7:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8807:22:7",
											"nodeType": "YulBlock",
											"src": "8807:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "8809:16:7",
															"nodeType": "YulIdentifier",
															"src": "8809:16:7"
														},
														"nativeSrc": "8809:18:7",
														"nodeType": "YulFunctionCall",
														"src": "8809:18:7"
													},
													"nativeSrc": "8809:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "8809:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nativeSrc": "8740:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8740:1:7"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "8733:6:7",
																"nodeType": "YulIdentifier",
																"src": "8733:6:7"
															},
															"nativeSrc": "8733:9:7",
															"nodeType": "YulFunctionCall",
															"src": "8733:9:7"
														},
														{
															"arguments": [
																{
																	"name": "y",
																	"nativeSrc": "8763:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8763:1:7"
																},
																{
																	"arguments": [
																		{
																			"name": "product",
																			"nativeSrc": "8770:7:7",
																			"nodeType": "YulIdentifier",
																			"src": "8770:7:7"
																		},
																		{
																			"name": "x",
																			"nativeSrc": "8779:1:7",
																			"nodeType": "YulIdentifier",
																			"src": "8779:1:7"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nativeSrc": "8766:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8766:3:7"
																	},
																	"nativeSrc": "8766:15:7",
																	"nodeType": "YulFunctionCall",
																	"src": "8766:15:7"
																}
															],
															"functionName": {
																"name": "eq",
																"nativeSrc": "8760:2:7",
																"nodeType": "YulIdentifier",
																"src": "8760:2:7"
															},
															"nativeSrc": "8760:22:7",
															"nodeType": "YulFunctionCall",
															"src": "8760:22:7"
														}
													],
													"functionName": {
														"name": "or",
														"nativeSrc": "8713:2:7",
														"nodeType": "YulIdentifier",
														"src": "8713:2:7"
													},
													"nativeSrc": "8713:83:7",
													"nodeType": "YulFunctionCall",
													"src": "8713:83:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "8693:6:7",
												"nodeType": "YulIdentifier",
												"src": "8693:6:7"
											},
											"nativeSrc": "8693:113:7",
											"nodeType": "YulFunctionCall",
											"src": "8693:113:7"
										},
										"nativeSrc": "8690:139:7",
										"nodeType": "YulIf",
										"src": "8690:139:7"
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nativeSrc": "8426:410:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "8457:1:7",
									"nodeType": "YulTypedName",
									"src": "8457:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "8460:1:7",
									"nodeType": "YulTypedName",
									"src": "8460:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nativeSrc": "8466:7:7",
									"nodeType": "YulTypedName",
									"src": "8466:7:7",
									"type": ""
								}
							],
							"src": "8426:410:7"
						},
						{
							"body": {
								"nativeSrc": "8870:152:7",
								"nodeType": "YulBlock",
								"src": "8870:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "8887:1:7",
													"nodeType": "YulLiteral",
													"src": "8887:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "8890:77:7",
													"nodeType": "YulLiteral",
													"src": "8890:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8880:6:7",
												"nodeType": "YulIdentifier",
												"src": "8880:6:7"
											},
											"nativeSrc": "8880:88:7",
											"nodeType": "YulFunctionCall",
											"src": "8880:88:7"
										},
										"nativeSrc": "8880:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "8880:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "8984:1:7",
													"nodeType": "YulLiteral",
													"src": "8984:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "8987:4:7",
													"nodeType": "YulLiteral",
													"src": "8987:4:7",
													"type": "",
													"value": "0x12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8977:6:7",
												"nodeType": "YulIdentifier",
												"src": "8977:6:7"
											},
											"nativeSrc": "8977:15:7",
											"nodeType": "YulFunctionCall",
											"src": "8977:15:7"
										},
										"nativeSrc": "8977:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "8977:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "9008:1:7",
													"nodeType": "YulLiteral",
													"src": "9008:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "9011:4:7",
													"nodeType": "YulLiteral",
													"src": "9011:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "9001:6:7",
												"nodeType": "YulIdentifier",
												"src": "9001:6:7"
											},
											"nativeSrc": "9001:15:7",
											"nodeType": "YulFunctionCall",
											"src": "9001:15:7"
										},
										"nativeSrc": "9001:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "9001:15:7"
									}
								]
							},
							"name": "panic_error_0x12",
							"nativeSrc": "8842:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "8842:180:7"
						},
						{
							"body": {
								"nativeSrc": "9070:143:7",
								"nodeType": "YulBlock",
								"src": "9070:143:7",
								"statements": [
									{
										"nativeSrc": "9080:25:7",
										"nodeType": "YulAssignment",
										"src": "9080:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "9103:1:7",
													"nodeType": "YulIdentifier",
													"src": "9103:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "9085:17:7",
												"nodeType": "YulIdentifier",
												"src": "9085:17:7"
											},
											"nativeSrc": "9085:20:7",
											"nodeType": "YulFunctionCall",
											"src": "9085:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "9080:1:7",
												"nodeType": "YulIdentifier",
												"src": "9080:1:7"
											}
										]
									},
									{
										"nativeSrc": "9114:25:7",
										"nodeType": "YulAssignment",
										"src": "9114:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "9137:1:7",
													"nodeType": "YulIdentifier",
													"src": "9137:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "9119:17:7",
												"nodeType": "YulIdentifier",
												"src": "9119:17:7"
											},
											"nativeSrc": "9119:20:7",
											"nodeType": "YulFunctionCall",
											"src": "9119:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "9114:1:7",
												"nodeType": "YulIdentifier",
												"src": "9114:1:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "9161:22:7",
											"nodeType": "YulBlock",
											"src": "9161:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x12",
															"nativeSrc": "9163:16:7",
															"nodeType": "YulIdentifier",
															"src": "9163:16:7"
														},
														"nativeSrc": "9163:18:7",
														"nodeType": "YulFunctionCall",
														"src": "9163:18:7"
													},
													"nativeSrc": "9163:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "9163:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "9158:1:7",
													"nodeType": "YulIdentifier",
													"src": "9158:1:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "9151:6:7",
												"nodeType": "YulIdentifier",
												"src": "9151:6:7"
											},
											"nativeSrc": "9151:9:7",
											"nodeType": "YulFunctionCall",
											"src": "9151:9:7"
										},
										"nativeSrc": "9148:35:7",
										"nodeType": "YulIf",
										"src": "9148:35:7"
									},
									{
										"nativeSrc": "9193:14:7",
										"nodeType": "YulAssignment",
										"src": "9193:14:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "9202:1:7",
													"nodeType": "YulIdentifier",
													"src": "9202:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "9205:1:7",
													"nodeType": "YulIdentifier",
													"src": "9205:1:7"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "9198:3:7",
												"nodeType": "YulIdentifier",
												"src": "9198:3:7"
											},
											"nativeSrc": "9198:9:7",
											"nodeType": "YulFunctionCall",
											"src": "9198:9:7"
										},
										"variableNames": [
											{
												"name": "r",
												"nativeSrc": "9193:1:7",
												"nodeType": "YulIdentifier",
												"src": "9193:1:7"
											}
										]
									}
								]
							},
							"name": "checked_div_t_uint256",
							"nativeSrc": "9028:185:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "9059:1:7",
									"nodeType": "YulTypedName",
									"src": "9059:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "9062:1:7",
									"nodeType": "YulTypedName",
									"src": "9062:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "r",
									"nativeSrc": "9068:1:7",
									"nodeType": "YulTypedName",
									"src": "9068:1:7",
									"type": ""
								}
							],
							"src": "9028:185:7"
						},
						{
							"body": {
								"nativeSrc": "9315:73:7",
								"nodeType": "YulBlock",
								"src": "9315:73:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9332:3:7",
													"nodeType": "YulIdentifier",
													"src": "9332:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "9337:6:7",
													"nodeType": "YulIdentifier",
													"src": "9337:6:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9325:6:7",
												"nodeType": "YulIdentifier",
												"src": "9325:6:7"
											},
											"nativeSrc": "9325:19:7",
											"nodeType": "YulFunctionCall",
											"src": "9325:19:7"
										},
										"nativeSrc": "9325:19:7",
										"nodeType": "YulExpressionStatement",
										"src": "9325:19:7"
									},
									{
										"nativeSrc": "9353:29:7",
										"nodeType": "YulAssignment",
										"src": "9353:29:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9372:3:7",
													"nodeType": "YulIdentifier",
													"src": "9372:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9377:4:7",
													"nodeType": "YulLiteral",
													"src": "9377:4:7",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9368:3:7",
												"nodeType": "YulIdentifier",
												"src": "9368:3:7"
											},
											"nativeSrc": "9368:14:7",
											"nodeType": "YulFunctionCall",
											"src": "9368:14:7"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "9353:11:7",
												"nodeType": "YulIdentifier",
												"src": "9353:11:7"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "9219:169:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "9287:3:7",
									"nodeType": "YulTypedName",
									"src": "9287:3:7",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "9292:6:7",
									"nodeType": "YulTypedName",
									"src": "9292:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "9303:11:7",
									"nodeType": "YulTypedName",
									"src": "9303:11:7",
									"type": ""
								}
							],
							"src": "9219:169:7"
						},
						{
							"body": {
								"nativeSrc": "9500:66:7",
								"nodeType": "YulBlock",
								"src": "9500:66:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "9522:6:7",
															"nodeType": "YulIdentifier",
															"src": "9522:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9530:1:7",
															"nodeType": "YulLiteral",
															"src": "9530:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9518:3:7",
														"nodeType": "YulIdentifier",
														"src": "9518:3:7"
													},
													"nativeSrc": "9518:14:7",
													"nodeType": "YulFunctionCall",
													"src": "9518:14:7"
												},
												{
													"hexValue": "4164647265737320697320626c61636b6c6973746564",
													"kind": "string",
													"nativeSrc": "9534:24:7",
													"nodeType": "YulLiteral",
													"src": "9534:24:7",
													"type": "",
													"value": "Address is blacklisted"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9511:6:7",
												"nodeType": "YulIdentifier",
												"src": "9511:6:7"
											},
											"nativeSrc": "9511:48:7",
											"nodeType": "YulFunctionCall",
											"src": "9511:48:7"
										},
										"nativeSrc": "9511:48:7",
										"nodeType": "YulExpressionStatement",
										"src": "9511:48:7"
									}
								]
							},
							"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
							"nativeSrc": "9394:172:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "9492:6:7",
									"nodeType": "YulTypedName",
									"src": "9492:6:7",
									"type": ""
								}
							],
							"src": "9394:172:7"
						},
						{
							"body": {
								"nativeSrc": "9718:220:7",
								"nodeType": "YulBlock",
								"src": "9718:220:7",
								"statements": [
									{
										"nativeSrc": "9728:74:7",
										"nodeType": "YulAssignment",
										"src": "9728:74:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9794:3:7",
													"nodeType": "YulIdentifier",
													"src": "9794:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9799:2:7",
													"nodeType": "YulLiteral",
													"src": "9799:2:7",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9735:58:7",
												"nodeType": "YulIdentifier",
												"src": "9735:58:7"
											},
											"nativeSrc": "9735:67:7",
											"nodeType": "YulFunctionCall",
											"src": "9735:67:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "9728:3:7",
												"nodeType": "YulIdentifier",
												"src": "9728:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9900:3:7",
													"nodeType": "YulIdentifier",
													"src": "9900:3:7"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
												"nativeSrc": "9811:88:7",
												"nodeType": "YulIdentifier",
												"src": "9811:88:7"
											},
											"nativeSrc": "9811:93:7",
											"nodeType": "YulFunctionCall",
											"src": "9811:93:7"
										},
										"nativeSrc": "9811:93:7",
										"nodeType": "YulExpressionStatement",
										"src": "9811:93:7"
									},
									{
										"nativeSrc": "9913:19:7",
										"nodeType": "YulAssignment",
										"src": "9913:19:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9924:3:7",
													"nodeType": "YulIdentifier",
													"src": "9924:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9929:2:7",
													"nodeType": "YulLiteral",
													"src": "9929:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9920:3:7",
												"nodeType": "YulIdentifier",
												"src": "9920:3:7"
											},
											"nativeSrc": "9920:12:7",
											"nodeType": "YulFunctionCall",
											"src": "9920:12:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "9913:3:7",
												"nodeType": "YulIdentifier",
												"src": "9913:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "9572:366:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "9706:3:7",
									"nodeType": "YulTypedName",
									"src": "9706:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "9714:3:7",
									"nodeType": "YulTypedName",
									"src": "9714:3:7",
									"type": ""
								}
							],
							"src": "9572:366:7"
						},
						{
							"body": {
								"nativeSrc": "10115:248:7",
								"nodeType": "YulBlock",
								"src": "10115:248:7",
								"statements": [
									{
										"nativeSrc": "10125:26:7",
										"nodeType": "YulAssignment",
										"src": "10125:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "10137:9:7",
													"nodeType": "YulIdentifier",
													"src": "10137:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "10148:2:7",
													"nodeType": "YulLiteral",
													"src": "10148:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10133:3:7",
												"nodeType": "YulIdentifier",
												"src": "10133:3:7"
											},
											"nativeSrc": "10133:18:7",
											"nodeType": "YulFunctionCall",
											"src": "10133:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10125:4:7",
												"nodeType": "YulIdentifier",
												"src": "10125:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "10172:9:7",
															"nodeType": "YulIdentifier",
															"src": "10172:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "10183:1:7",
															"nodeType": "YulLiteral",
															"src": "10183:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10168:3:7",
														"nodeType": "YulIdentifier",
														"src": "10168:3:7"
													},
													"nativeSrc": "10168:17:7",
													"nodeType": "YulFunctionCall",
													"src": "10168:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "10191:4:7",
															"nodeType": "YulIdentifier",
															"src": "10191:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "10197:9:7",
															"nodeType": "YulIdentifier",
															"src": "10197:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "10187:3:7",
														"nodeType": "YulIdentifier",
														"src": "10187:3:7"
													},
													"nativeSrc": "10187:20:7",
													"nodeType": "YulFunctionCall",
													"src": "10187:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10161:6:7",
												"nodeType": "YulIdentifier",
												"src": "10161:6:7"
											},
											"nativeSrc": "10161:47:7",
											"nodeType": "YulFunctionCall",
											"src": "10161:47:7"
										},
										"nativeSrc": "10161:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "10161:47:7"
									},
									{
										"nativeSrc": "10217:139:7",
										"nodeType": "YulAssignment",
										"src": "10217:139:7",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "10351:4:7",
													"nodeType": "YulIdentifier",
													"src": "10351:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10225:124:7",
												"nodeType": "YulIdentifier",
												"src": "10225:124:7"
											},
											"nativeSrc": "10225:131:7",
											"nodeType": "YulFunctionCall",
											"src": "10225:131:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10217:4:7",
												"nodeType": "YulIdentifier",
												"src": "10217:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "9944:419:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "10095:9:7",
									"nodeType": "YulTypedName",
									"src": "10095:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "10110:4:7",
									"nodeType": "YulTypedName",
									"src": "10110:4:7",
									"type": ""
								}
							],
							"src": "9944:419:7"
						},
						{
							"body": {
								"nativeSrc": "10475:70:7",
								"nodeType": "YulBlock",
								"src": "10475:70:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10497:6:7",
															"nodeType": "YulIdentifier",
															"src": "10497:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "10505:1:7",
															"nodeType": "YulLiteral",
															"src": "10505:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10493:3:7",
														"nodeType": "YulIdentifier",
														"src": "10493:3:7"
													},
													"nativeSrc": "10493:14:7",
													"nodeType": "YulFunctionCall",
													"src": "10493:14:7"
												},
												{
													"hexValue": "54726164696e67206973206e6f7420656e61626c656420796574",
													"kind": "string",
													"nativeSrc": "10509:28:7",
													"nodeType": "YulLiteral",
													"src": "10509:28:7",
													"type": "",
													"value": "Trading is not enabled yet"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10486:6:7",
												"nodeType": "YulIdentifier",
												"src": "10486:6:7"
											},
											"nativeSrc": "10486:52:7",
											"nodeType": "YulFunctionCall",
											"src": "10486:52:7"
										},
										"nativeSrc": "10486:52:7",
										"nodeType": "YulExpressionStatement",
										"src": "10486:52:7"
									}
								]
							},
							"name": "store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33",
							"nativeSrc": "10369:176:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "10467:6:7",
									"nodeType": "YulTypedName",
									"src": "10467:6:7",
									"type": ""
								}
							],
							"src": "10369:176:7"
						},
						{
							"body": {
								"nativeSrc": "10697:220:7",
								"nodeType": "YulBlock",
								"src": "10697:220:7",
								"statements": [
									{
										"nativeSrc": "10707:74:7",
										"nodeType": "YulAssignment",
										"src": "10707:74:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10773:3:7",
													"nodeType": "YulIdentifier",
													"src": "10773:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "10778:2:7",
													"nodeType": "YulLiteral",
													"src": "10778:2:7",
													"type": "",
													"value": "26"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10714:58:7",
												"nodeType": "YulIdentifier",
												"src": "10714:58:7"
											},
											"nativeSrc": "10714:67:7",
											"nodeType": "YulFunctionCall",
											"src": "10714:67:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "10707:3:7",
												"nodeType": "YulIdentifier",
												"src": "10707:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10879:3:7",
													"nodeType": "YulIdentifier",
													"src": "10879:3:7"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33",
												"nativeSrc": "10790:88:7",
												"nodeType": "YulIdentifier",
												"src": "10790:88:7"
											},
											"nativeSrc": "10790:93:7",
											"nodeType": "YulFunctionCall",
											"src": "10790:93:7"
										},
										"nativeSrc": "10790:93:7",
										"nodeType": "YulExpressionStatement",
										"src": "10790:93:7"
									},
									{
										"nativeSrc": "10892:19:7",
										"nodeType": "YulAssignment",
										"src": "10892:19:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10903:3:7",
													"nodeType": "YulIdentifier",
													"src": "10903:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "10908:2:7",
													"nodeType": "YulLiteral",
													"src": "10908:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10899:3:7",
												"nodeType": "YulIdentifier",
												"src": "10899:3:7"
											},
											"nativeSrc": "10899:12:7",
											"nodeType": "YulFunctionCall",
											"src": "10899:12:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "10892:3:7",
												"nodeType": "YulIdentifier",
												"src": "10892:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "10551:366:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "10685:3:7",
									"nodeType": "YulTypedName",
									"src": "10685:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "10693:3:7",
									"nodeType": "YulTypedName",
									"src": "10693:3:7",
									"type": ""
								}
							],
							"src": "10551:366:7"
						},
						{
							"body": {
								"nativeSrc": "11094:248:7",
								"nodeType": "YulBlock",
								"src": "11094:248:7",
								"statements": [
									{
										"nativeSrc": "11104:26:7",
										"nodeType": "YulAssignment",
										"src": "11104:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "11116:9:7",
													"nodeType": "YulIdentifier",
													"src": "11116:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "11127:2:7",
													"nodeType": "YulLiteral",
													"src": "11127:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11112:3:7",
												"nodeType": "YulIdentifier",
												"src": "11112:3:7"
											},
											"nativeSrc": "11112:18:7",
											"nodeType": "YulFunctionCall",
											"src": "11112:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11104:4:7",
												"nodeType": "YulIdentifier",
												"src": "11104:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "11151:9:7",
															"nodeType": "YulIdentifier",
															"src": "11151:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "11162:1:7",
															"nodeType": "YulLiteral",
															"src": "11162:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11147:3:7",
														"nodeType": "YulIdentifier",
														"src": "11147:3:7"
													},
													"nativeSrc": "11147:17:7",
													"nodeType": "YulFunctionCall",
													"src": "11147:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "11170:4:7",
															"nodeType": "YulIdentifier",
															"src": "11170:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "11176:9:7",
															"nodeType": "YulIdentifier",
															"src": "11176:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "11166:3:7",
														"nodeType": "YulIdentifier",
														"src": "11166:3:7"
													},
													"nativeSrc": "11166:20:7",
													"nodeType": "YulFunctionCall",
													"src": "11166:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11140:6:7",
												"nodeType": "YulIdentifier",
												"src": "11140:6:7"
											},
											"nativeSrc": "11140:47:7",
											"nodeType": "YulFunctionCall",
											"src": "11140:47:7"
										},
										"nativeSrc": "11140:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "11140:47:7"
									},
									{
										"nativeSrc": "11196:139:7",
										"nodeType": "YulAssignment",
										"src": "11196:139:7",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "11330:4:7",
													"nodeType": "YulIdentifier",
													"src": "11330:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11204:124:7",
												"nodeType": "YulIdentifier",
												"src": "11204:124:7"
											},
											"nativeSrc": "11204:131:7",
											"nodeType": "YulFunctionCall",
											"src": "11204:131:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11196:4:7",
												"nodeType": "YulIdentifier",
												"src": "11196:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "10923:419:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "11074:9:7",
									"nodeType": "YulTypedName",
									"src": "11074:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "11089:4:7",
									"nodeType": "YulTypedName",
									"src": "11089:4:7",
									"type": ""
								}
							],
							"src": "10923:419:7"
						},
						{
							"body": {
								"nativeSrc": "11454:114:7",
								"nodeType": "YulBlock",
								"src": "11454:114:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "11476:6:7",
															"nodeType": "YulIdentifier",
															"src": "11476:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "11484:1:7",
															"nodeType": "YulLiteral",
															"src": "11484:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11472:3:7",
														"nodeType": "YulIdentifier",
														"src": "11472:3:7"
													},
													"nativeSrc": "11472:14:7",
													"nodeType": "YulFunctionCall",
													"src": "11472:14:7"
												},
												{
													"hexValue": "5472616e7366657220616d6f756e742065786365656473206d6178206c696d69",
													"kind": "string",
													"nativeSrc": "11488:34:7",
													"nodeType": "YulLiteral",
													"src": "11488:34:7",
													"type": "",
													"value": "Transfer amount exceeds max limi"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11465:6:7",
												"nodeType": "YulIdentifier",
												"src": "11465:6:7"
											},
											"nativeSrc": "11465:58:7",
											"nodeType": "YulFunctionCall",
											"src": "11465:58:7"
										},
										"nativeSrc": "11465:58:7",
										"nodeType": "YulExpressionStatement",
										"src": "11465:58:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "11544:6:7",
															"nodeType": "YulIdentifier",
															"src": "11544:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "11552:2:7",
															"nodeType": "YulLiteral",
															"src": "11552:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11540:3:7",
														"nodeType": "YulIdentifier",
														"src": "11540:3:7"
													},
													"nativeSrc": "11540:15:7",
													"nodeType": "YulFunctionCall",
													"src": "11540:15:7"
												},
												{
													"hexValue": "74",
													"kind": "string",
													"nativeSrc": "11557:3:7",
													"nodeType": "YulLiteral",
													"src": "11557:3:7",
													"type": "",
													"value": "t"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11533:6:7",
												"nodeType": "YulIdentifier",
												"src": "11533:6:7"
											},
											"nativeSrc": "11533:28:7",
											"nodeType": "YulFunctionCall",
											"src": "11533:28:7"
										},
										"nativeSrc": "11533:28:7",
										"nodeType": "YulExpressionStatement",
										"src": "11533:28:7"
									}
								]
							},
							"name": "store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264",
							"nativeSrc": "11348:220:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "11446:6:7",
									"nodeType": "YulTypedName",
									"src": "11446:6:7",
									"type": ""
								}
							],
							"src": "11348:220:7"
						},
						{
							"body": {
								"nativeSrc": "11720:220:7",
								"nodeType": "YulBlock",
								"src": "11720:220:7",
								"statements": [
									{
										"nativeSrc": "11730:74:7",
										"nodeType": "YulAssignment",
										"src": "11730:74:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11796:3:7",
													"nodeType": "YulIdentifier",
													"src": "11796:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "11801:2:7",
													"nodeType": "YulLiteral",
													"src": "11801:2:7",
													"type": "",
													"value": "33"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11737:58:7",
												"nodeType": "YulIdentifier",
												"src": "11737:58:7"
											},
											"nativeSrc": "11737:67:7",
											"nodeType": "YulFunctionCall",
											"src": "11737:67:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "11730:3:7",
												"nodeType": "YulIdentifier",
												"src": "11730:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11902:3:7",
													"nodeType": "YulIdentifier",
													"src": "11902:3:7"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264",
												"nativeSrc": "11813:88:7",
												"nodeType": "YulIdentifier",
												"src": "11813:88:7"
											},
											"nativeSrc": "11813:93:7",
											"nodeType": "YulFunctionCall",
											"src": "11813:93:7"
										},
										"nativeSrc": "11813:93:7",
										"nodeType": "YulExpressionStatement",
										"src": "11813:93:7"
									},
									{
										"nativeSrc": "11915:19:7",
										"nodeType": "YulAssignment",
										"src": "11915:19:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11926:3:7",
													"nodeType": "YulIdentifier",
													"src": "11926:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "11931:2:7",
													"nodeType": "YulLiteral",
													"src": "11931:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11922:3:7",
												"nodeType": "YulIdentifier",
												"src": "11922:3:7"
											},
											"nativeSrc": "11922:12:7",
											"nodeType": "YulFunctionCall",
											"src": "11922:12:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "11915:3:7",
												"nodeType": "YulIdentifier",
												"src": "11915:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "11574:366:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "11708:3:7",
									"nodeType": "YulTypedName",
									"src": "11708:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "11716:3:7",
									"nodeType": "YulTypedName",
									"src": "11716:3:7",
									"type": ""
								}
							],
							"src": "11574:366:7"
						},
						{
							"body": {
								"nativeSrc": "12117:248:7",
								"nodeType": "YulBlock",
								"src": "12117:248:7",
								"statements": [
									{
										"nativeSrc": "12127:26:7",
										"nodeType": "YulAssignment",
										"src": "12127:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "12139:9:7",
													"nodeType": "YulIdentifier",
													"src": "12139:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "12150:2:7",
													"nodeType": "YulLiteral",
													"src": "12150:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12135:3:7",
												"nodeType": "YulIdentifier",
												"src": "12135:3:7"
											},
											"nativeSrc": "12135:18:7",
											"nodeType": "YulFunctionCall",
											"src": "12135:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12127:4:7",
												"nodeType": "YulIdentifier",
												"src": "12127:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "12174:9:7",
															"nodeType": "YulIdentifier",
															"src": "12174:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "12185:1:7",
															"nodeType": "YulLiteral",
															"src": "12185:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "12170:3:7",
														"nodeType": "YulIdentifier",
														"src": "12170:3:7"
													},
													"nativeSrc": "12170:17:7",
													"nodeType": "YulFunctionCall",
													"src": "12170:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "12193:4:7",
															"nodeType": "YulIdentifier",
															"src": "12193:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "12199:9:7",
															"nodeType": "YulIdentifier",
															"src": "12199:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "12189:3:7",
														"nodeType": "YulIdentifier",
														"src": "12189:3:7"
													},
													"nativeSrc": "12189:20:7",
													"nodeType": "YulFunctionCall",
													"src": "12189:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12163:6:7",
												"nodeType": "YulIdentifier",
												"src": "12163:6:7"
											},
											"nativeSrc": "12163:47:7",
											"nodeType": "YulFunctionCall",
											"src": "12163:47:7"
										},
										"nativeSrc": "12163:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "12163:47:7"
									},
									{
										"nativeSrc": "12219:139:7",
										"nodeType": "YulAssignment",
										"src": "12219:139:7",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "12353:4:7",
													"nodeType": "YulIdentifier",
													"src": "12353:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12227:124:7",
												"nodeType": "YulIdentifier",
												"src": "12227:124:7"
											},
											"nativeSrc": "12227:131:7",
											"nodeType": "YulFunctionCall",
											"src": "12227:131:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "12219:4:7",
												"nodeType": "YulIdentifier",
												"src": "12219:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "11946:419:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "12097:9:7",
									"nodeType": "YulTypedName",
									"src": "12097:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "12112:4:7",
									"nodeType": "YulTypedName",
									"src": "12112:4:7",
									"type": ""
								}
							],
							"src": "11946:419:7"
						},
						{
							"body": {
								"nativeSrc": "12416:149:7",
								"nodeType": "YulBlock",
								"src": "12416:149:7",
								"statements": [
									{
										"nativeSrc": "12426:25:7",
										"nodeType": "YulAssignment",
										"src": "12426:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12449:1:7",
													"nodeType": "YulIdentifier",
													"src": "12449:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12431:17:7",
												"nodeType": "YulIdentifier",
												"src": "12431:17:7"
											},
											"nativeSrc": "12431:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12431:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "12426:1:7",
												"nodeType": "YulIdentifier",
												"src": "12426:1:7"
											}
										]
									},
									{
										"nativeSrc": "12460:25:7",
										"nodeType": "YulAssignment",
										"src": "12460:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12483:1:7",
													"nodeType": "YulIdentifier",
													"src": "12483:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12465:17:7",
												"nodeType": "YulIdentifier",
												"src": "12465:17:7"
											},
											"nativeSrc": "12465:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12465:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "12460:1:7",
												"nodeType": "YulIdentifier",
												"src": "12460:1:7"
											}
										]
									},
									{
										"nativeSrc": "12494:17:7",
										"nodeType": "YulAssignment",
										"src": "12494:17:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12506:1:7",
													"nodeType": "YulIdentifier",
													"src": "12506:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "12509:1:7",
													"nodeType": "YulIdentifier",
													"src": "12509:1:7"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "12502:3:7",
												"nodeType": "YulIdentifier",
												"src": "12502:3:7"
											},
											"nativeSrc": "12502:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12502:9:7"
										},
										"variableNames": [
											{
												"name": "diff",
												"nativeSrc": "12494:4:7",
												"nodeType": "YulIdentifier",
												"src": "12494:4:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "12536:22:7",
											"nodeType": "YulBlock",
											"src": "12536:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "12538:16:7",
															"nodeType": "YulIdentifier",
															"src": "12538:16:7"
														},
														"nativeSrc": "12538:18:7",
														"nodeType": "YulFunctionCall",
														"src": "12538:18:7"
													},
													"nativeSrc": "12538:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "12538:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nativeSrc": "12527:4:7",
													"nodeType": "YulIdentifier",
													"src": "12527:4:7"
												},
												{
													"name": "x",
													"nativeSrc": "12533:1:7",
													"nodeType": "YulIdentifier",
													"src": "12533:1:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "12524:2:7",
												"nodeType": "YulIdentifier",
												"src": "12524:2:7"
											},
											"nativeSrc": "12524:11:7",
											"nodeType": "YulFunctionCall",
											"src": "12524:11:7"
										},
										"nativeSrc": "12521:37:7",
										"nodeType": "YulIf",
										"src": "12521:37:7"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nativeSrc": "12371:194:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "12402:1:7",
									"nodeType": "YulTypedName",
									"src": "12402:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "12405:1:7",
									"nodeType": "YulTypedName",
									"src": "12405:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nativeSrc": "12411:4:7",
									"nodeType": "YulTypedName",
									"src": "12411:4:7",
									"type": ""
								}
							],
							"src": "12371:194:7"
						},
						{
							"body": {
								"nativeSrc": "12615:147:7",
								"nodeType": "YulBlock",
								"src": "12615:147:7",
								"statements": [
									{
										"nativeSrc": "12625:25:7",
										"nodeType": "YulAssignment",
										"src": "12625:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12648:1:7",
													"nodeType": "YulIdentifier",
													"src": "12648:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12630:17:7",
												"nodeType": "YulIdentifier",
												"src": "12630:17:7"
											},
											"nativeSrc": "12630:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12630:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "12625:1:7",
												"nodeType": "YulIdentifier",
												"src": "12625:1:7"
											}
										]
									},
									{
										"nativeSrc": "12659:25:7",
										"nodeType": "YulAssignment",
										"src": "12659:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12682:1:7",
													"nodeType": "YulIdentifier",
													"src": "12682:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12664:17:7",
												"nodeType": "YulIdentifier",
												"src": "12664:17:7"
											},
											"nativeSrc": "12664:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12664:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "12659:1:7",
												"nodeType": "YulIdentifier",
												"src": "12659:1:7"
											}
										]
									},
									{
										"nativeSrc": "12693:16:7",
										"nodeType": "YulAssignment",
										"src": "12693:16:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12704:1:7",
													"nodeType": "YulIdentifier",
													"src": "12704:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "12707:1:7",
													"nodeType": "YulIdentifier",
													"src": "12707:1:7"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12700:3:7",
												"nodeType": "YulIdentifier",
												"src": "12700:3:7"
											},
											"nativeSrc": "12700:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12700:9:7"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "12693:3:7",
												"nodeType": "YulIdentifier",
												"src": "12693:3:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "12733:22:7",
											"nodeType": "YulBlock",
											"src": "12733:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "12735:16:7",
															"nodeType": "YulIdentifier",
															"src": "12735:16:7"
														},
														"nativeSrc": "12735:18:7",
														"nodeType": "YulFunctionCall",
														"src": "12735:18:7"
													},
													"nativeSrc": "12735:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "12735:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12725:1:7",
													"nodeType": "YulIdentifier",
													"src": "12725:1:7"
												},
												{
													"name": "sum",
													"nativeSrc": "12728:3:7",
													"nodeType": "YulIdentifier",
													"src": "12728:3:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "12722:2:7",
												"nodeType": "YulIdentifier",
												"src": "12722:2:7"
											},
											"nativeSrc": "12722:10:7",
											"nodeType": "YulFunctionCall",
											"src": "12722:10:7"
										},
										"nativeSrc": "12719:36:7",
										"nodeType": "YulIf",
										"src": "12719:36:7"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "12571:191:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "12602:1:7",
									"nodeType": "YulTypedName",
									"src": "12602:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "12605:1:7",
									"nodeType": "YulTypedName",
									"src": "12605:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "12611:3:7",
									"nodeType": "YulTypedName",
									"src": "12611:3:7",
									"type": ""
								}
							],
							"src": "12571:191:7"
						},
						{
							"body": {
								"nativeSrc": "12833:53:7",
								"nodeType": "YulBlock",
								"src": "12833:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "12850:3:7",
													"nodeType": "YulIdentifier",
													"src": "12850:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "12873:5:7",
															"nodeType": "YulIdentifier",
															"src": "12873:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "12855:17:7",
														"nodeType": "YulIdentifier",
														"src": "12855:17:7"
													},
													"nativeSrc": "12855:24:7",
													"nodeType": "YulFunctionCall",
													"src": "12855:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12843:6:7",
												"nodeType": "YulIdentifier",
												"src": "12843:6:7"
											},
											"nativeSrc": "12843:37:7",
											"nodeType": "YulFunctionCall",
											"src": "12843:37:7"
										},
										"nativeSrc": "12843:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "12843:37:7"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "12768:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "12821:5:7",
									"nodeType": "YulTypedName",
									"src": "12821:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "12828:3:7",
									"nodeType": "YulTypedName",
									"src": "12828:3:7",
									"type": ""
								}
							],
							"src": "12768:118:7"
						},
						{
							"body": {
								"nativeSrc": "13046:288:7",
								"nodeType": "YulBlock",
								"src": "13046:288:7",
								"statements": [
									{
										"nativeSrc": "13056:26:7",
										"nodeType": "YulAssignment",
										"src": "13056:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "13068:9:7",
													"nodeType": "YulIdentifier",
													"src": "13068:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "13079:2:7",
													"nodeType": "YulLiteral",
													"src": "13079:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13064:3:7",
												"nodeType": "YulIdentifier",
												"src": "13064:3:7"
											},
											"nativeSrc": "13064:18:7",
											"nodeType": "YulFunctionCall",
											"src": "13064:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13056:4:7",
												"nodeType": "YulIdentifier",
												"src": "13056:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "13136:6:7",
													"nodeType": "YulIdentifier",
													"src": "13136:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13149:9:7",
															"nodeType": "YulIdentifier",
															"src": "13149:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "13160:1:7",
															"nodeType": "YulLiteral",
															"src": "13160:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13145:3:7",
														"nodeType": "YulIdentifier",
														"src": "13145:3:7"
													},
													"nativeSrc": "13145:17:7",
													"nodeType": "YulFunctionCall",
													"src": "13145:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "13092:43:7",
												"nodeType": "YulIdentifier",
												"src": "13092:43:7"
											},
											"nativeSrc": "13092:71:7",
											"nodeType": "YulFunctionCall",
											"src": "13092:71:7"
										},
										"nativeSrc": "13092:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "13092:71:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "13217:6:7",
													"nodeType": "YulIdentifier",
													"src": "13217:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13230:9:7",
															"nodeType": "YulIdentifier",
															"src": "13230:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "13241:2:7",
															"nodeType": "YulLiteral",
															"src": "13241:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13226:3:7",
														"nodeType": "YulIdentifier",
														"src": "13226:3:7"
													},
													"nativeSrc": "13226:18:7",
													"nodeType": "YulFunctionCall",
													"src": "13226:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13173:43:7",
												"nodeType": "YulIdentifier",
												"src": "13173:43:7"
											},
											"nativeSrc": "13173:72:7",
											"nodeType": "YulFunctionCall",
											"src": "13173:72:7"
										},
										"nativeSrc": "13173:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "13173:72:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "13299:6:7",
													"nodeType": "YulIdentifier",
													"src": "13299:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13312:9:7",
															"nodeType": "YulIdentifier",
															"src": "13312:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "13323:2:7",
															"nodeType": "YulLiteral",
															"src": "13323:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13308:3:7",
														"nodeType": "YulIdentifier",
														"src": "13308:3:7"
													},
													"nativeSrc": "13308:18:7",
													"nodeType": "YulFunctionCall",
													"src": "13308:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13255:43:7",
												"nodeType": "YulIdentifier",
												"src": "13255:43:7"
											},
											"nativeSrc": "13255:72:7",
											"nodeType": "YulFunctionCall",
											"src": "13255:72:7"
										},
										"nativeSrc": "13255:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "13255:72:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "12892:442:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "13002:9:7",
									"nodeType": "YulTypedName",
									"src": "13002:9:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "13014:6:7",
									"nodeType": "YulTypedName",
									"src": "13014:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "13022:6:7",
									"nodeType": "YulTypedName",
									"src": "13022:6:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "13030:6:7",
									"nodeType": "YulTypedName",
									"src": "13030:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "13041:4:7",
									"nodeType": "YulTypedName",
									"src": "13041:4:7",
									"type": ""
								}
							],
							"src": "12892:442:7"
						},
						{
							"body": {
								"nativeSrc": "13438:124:7",
								"nodeType": "YulBlock",
								"src": "13438:124:7",
								"statements": [
									{
										"nativeSrc": "13448:26:7",
										"nodeType": "YulAssignment",
										"src": "13448:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "13460:9:7",
													"nodeType": "YulIdentifier",
													"src": "13460:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "13471:2:7",
													"nodeType": "YulLiteral",
													"src": "13471:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "13456:3:7",
												"nodeType": "YulIdentifier",
												"src": "13456:3:7"
											},
											"nativeSrc": "13456:18:7",
											"nodeType": "YulFunctionCall",
											"src": "13456:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "13448:4:7",
												"nodeType": "YulIdentifier",
												"src": "13448:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "13528:6:7",
													"nodeType": "YulIdentifier",
													"src": "13528:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "13541:9:7",
															"nodeType": "YulIdentifier",
															"src": "13541:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "13552:1:7",
															"nodeType": "YulLiteral",
															"src": "13552:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "13537:3:7",
														"nodeType": "YulIdentifier",
														"src": "13537:3:7"
													},
													"nativeSrc": "13537:17:7",
													"nodeType": "YulFunctionCall",
													"src": "13537:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "13484:43:7",
												"nodeType": "YulIdentifier",
												"src": "13484:43:7"
											},
											"nativeSrc": "13484:71:7",
											"nodeType": "YulFunctionCall",
											"src": "13484:71:7"
										},
										"nativeSrc": "13484:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "13484:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "13340:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "13410:9:7",
									"nodeType": "YulTypedName",
									"src": "13410:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "13422:6:7",
									"nodeType": "YulTypedName",
									"src": "13422:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "13433:4:7",
									"nodeType": "YulTypedName",
									"src": "13433:4:7",
									"type": ""
								}
							],
							"src": "13340:222:7"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trading is not enabled yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount exceeds max limi\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
				"id": 7,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "6080604052600260085560016009556001600a556005600b555f600d5f6101000a81548160ff02191690831515021790555034801561003c575f5ffd5b50336040518060400160405280600581526020017f5a696767690000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f5a4947474900000000000000000000000000000000000000000000000000000081525081600390816100b99190610b87565b5080600490816100c99190610b87565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101339190610c95565b60405180910390fd5b61014b8161023660201b60201c565b505f61015b6102f960201b60201c565b600a6101679190610e16565b620f42406101759190610e60565b9050610187338261030160201b60201c565b6064816101949190610ece565b600c8190555033600d60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505061112f565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610371575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103689190610c95565b60405180910390fd5b6103825f838361038660201b60201c565b5050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610424575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90610f58565b60405180910390fd5b600d5f9054906101000a900460ff16806104c3575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f990610fc0565b60405180910390fd5b600c5481111580610559575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f9061104e565b60405180910390fd5b5f6064600854836105a99190610e60565b6105b39190610ece565b90505f6064600954846105c69190610e60565b6105d09190610ece565b90505f6064600a54856105e39190610e60565b6105ed9190610ece565b90505f6064600b54866106009190610e60565b61060a9190610ece565b90505f818385878961061c919061106c565b610626919061106c565b610630919061106c565b61063a919061106c565b90505f8511156106555761065488866106ac60201b60201c565b5b5f8311156106915761069088600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561073160201b60201c565b5b6106a288888361073160201b60201c565b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107139190610c95565b60405180910390fd5b61072d825f8361038660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610781578060025f828254610775919061109f565b9250508190555061084f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561080a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610801939291906110e1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610896578060025f82825403925050819055506108e0565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161093d9190611116565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806109c557607f821691505b6020821081036109d8576109d7610981565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610a3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826109ff565b610a4486836109ff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610a88610a83610a7e84610a5c565b610a65565b610a5c565b9050919050565b5f819050919050565b610aa183610a6e565b610ab5610aad82610a8f565b848454610a0b565b825550505050565b5f5f905090565b610acc610abd565b610ad7818484610a98565b505050565b5b81811015610afa57610aef5f82610ac4565b600181019050610add565b5050565b601f821115610b3f57610b10816109de565b610b19846109f0565b81016020851015610b28578190505b610b3c610b34856109f0565b830182610adc565b50505b505050565b5f82821c905092915050565b5f610b5f5f1984600802610b44565b1980831691505092915050565b5f610b778383610b50565b9150826002028217905092915050565b610b908261094a565b67ffffffffffffffff811115610ba957610ba8610954565b5b610bb382546109ae565b610bbe828285610afe565b5f60209050601f831160018114610bef575f8415610bdd578287015190505b610be78582610b6c565b865550610c4e565b601f198416610bfd866109de565b5f5b82811015610c2457848901518255600182019150602085019450602081019050610bff565b86831015610c415784890151610c3d601f891682610b50565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c7f82610c56565b9050919050565b610c8f81610c75565b82525050565b5f602082019050610ca85f830184610c86565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610d3057808604811115610d0c57610d0b610cae565b5b6001851615610d1b5780820291505b8081029050610d2985610cdb565b9450610cf0565b94509492505050565b5f82610d485760019050610e03565b81610d55575f9050610e03565b8160018114610d6b5760028114610d7557610da4565b6001915050610e03565b60ff841115610d8757610d86610cae565b5b8360020a915084821115610d9e57610d9d610cae565b5b50610e03565b5060208310610133831016604e8410600b8410161715610dd95782820a905083811115610dd457610dd3610cae565b5b610e03565b610de68484846001610ce7565b92509050818404811115610dfd57610dfc610cae565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610e2082610a5c565b9150610e2b83610e0a565b9250610e587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610d39565b905092915050565b5f610e6a82610a5c565b9150610e7583610a5c565b9250828202610e8381610a5c565b91508282048414831517610e9a57610e99610cae565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ed882610a5c565b9150610ee383610a5c565b925082610ef357610ef2610ea1565b5b828204905092915050565b5f82825260208201905092915050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f610f42601683610efe565b9150610f4d82610f0e565b602082019050919050565b5f6020820190508181035f830152610f6f81610f36565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564207965740000000000005f82015250565b5f610faa601a83610efe565b9150610fb582610f76565b602082019050919050565b5f6020820190508181035f830152610fd781610f9e565b9050919050565b7f5472616e7366657220616d6f756e742065786365656473206d6178206c696d695f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f611038602183610efe565b915061104382610fde565b604082019050919050565b5f6020820190508181035f8301526110658161102c565b9050919050565b5f61107682610a5c565b915061108183610a5c565b925082820390508181111561109957611098610cae565b5b92915050565b5f6110a982610a5c565b91506110b483610a5c565b92508282019050808211156110cc576110cb610cae565b5b92915050565b6110db81610a5c565b82525050565b5f6060820190506110f45f830186610c86565b61110160208301856110d2565b61110e60408301846110d2565b949350505050565b5f6020820190506111295f8301846110d2565b92915050565b611af28061113c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610171575f3560e01c80638a8c523c116100dc57806398118cb411610095578063dd62ed3e1161006f578063dd62ed3e14610403578063ec28438a14610433578063f2fde38b1461044f578063fce589d81461046b57610171565b806398118cb414610399578063a9059cbb146103b7578063c0246668146103e757610171565b80638a8c523c146102f95780638b424267146103035780638c0b5e22146103215780638da5cb5b1461033f5780638ea5220f1461035d57806395d89b411461037b57610171565b8063313ce5671161012e578063313ce567146102495780634ada218b146102675780636827e764146102855780636fcba377146102a357806370a08231146102bf578063715018a6146102ef57610171565b806306fdde0314610175578063095ea7b314610193578063153b0d1e146101c357806318160ddd146101df5780631f53ac02146101fd57806323b872dd14610219575b5f5ffd5b61017d610489565b60405161018a9190611445565b60405180910390f35b6101ad60048036038101906101a891906114f6565b610519565b6040516101ba919061154e565b60405180910390f35b6101dd60048036038101906101d89190611591565b61053b565b005b6101e761059b565b6040516101f491906115de565b60405180910390f35b610217600480360381019061021291906115f7565b6105a4565b005b610233600480360381019061022e9190611622565b6105f0565b604051610240919061154e565b60405180910390f35b61025161061e565b60405161025e919061168d565b60405180910390f35b61026f610626565b60405161027c919061154e565b60405180910390f35b61028d610638565b60405161029a91906115de565b60405180910390f35b6102bd60048036038101906102b891906116a6565b61063e565b005b6102d960048036038101906102d491906115f7565b610668565b6040516102e691906115de565b60405180910390f35b6102f76106ad565b005b6103016106c0565b005b61030b6106e4565b60405161031891906115de565b60405180910390f35b6103296106ea565b60405161033691906115de565b60405180910390f35b6103476106f0565b6040516103549190611719565b60405180910390f35b610365610718565b6040516103729190611719565b60405180910390f35b61038361073e565b6040516103909190611445565b60405180910390f35b6103a16107ce565b6040516103ae91906115de565b60405180910390f35b6103d160048036038101906103cc91906114f6565b6107d4565b6040516103de919061154e565b60405180910390f35b61040160048036038101906103fc9190611591565b6107f6565b005b61041d60048036038101906104189190611732565b610856565b60405161042a91906115de565b60405180910390f35b61044d60048036038101906104489190611770565b6108d8565b005b610469600480360381019061046491906115f7565b6108ea565b005b61047361096e565b60405161048091906115de565b60405180910390f35b606060038054610498906117c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906117c8565b801561050f5780601f106104e65761010080835404028352916020019161050f565b820191905f5260205f20905b8154815290600101906020018083116104f257829003601f168201915b5050505050905090565b5f5f610523610974565b905061053081858561097b565b600191505092915050565b61054361098d565b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f600254905090565b6105ac61098d565b80600d60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5f6105fa610974565b9050610607858285610a14565b610612858585610aa7565b60019150509392505050565b5f6012905090565b600d5f9054906101000a900460ff1681565b600a5481565b61064661098d565b836008819055508260098190555081600a8190555080600b8190555050505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106b561098d565b6106be5f610b97565b565b6106c861098d565b6001600d5f6101000a81548160ff021916908315150217905550565b60095481565b600c5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461074d906117c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610779906117c8565b80156107c45780601f1061079b576101008083540402835291602001916107c4565b820191905f5260205f20905b8154815290600101906020018083116107a757829003601f168201915b5050505050905090565b600b5481565b5f5f6107de610974565b90506107eb818585610aa7565b600191505092915050565b6107fe61098d565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108e061098d565b80600c8190555050565b6108f261098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610962575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109599190611719565b60405180910390fd5b61096b81610b97565b50565b60085481565b5f33905090565b6109888383836001610c5a565b505050565b610995610974565b73ffffffffffffffffffffffffffffffffffffffff166109b36106f0565b73ffffffffffffffffffffffffffffffffffffffff1614610a12576109d6610974565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a099190611719565b60405180910390fd5b565b5f610a1f8484610856565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aa15781811015610a92578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a89939291906117f8565b60405180910390fd5b610aa084848484035f610c5a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0e9190611719565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b7e9190611719565b60405180910390fd5b610b92838383610e29565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cca575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cc19190611719565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d319190611719565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e23578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e1a91906115de565b60405180910390a35b50505050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610ec7575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90611877565b60405180910390fd5b600d5f9054906101000a900460ff1680610f66575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c906118df565b60405180910390fd5b600c5481111580610ffc575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61103b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110329061196d565b60405180910390fd5b5f60646008548361104c91906119b8565b6110569190611a26565b90505f60646009548461106991906119b8565b6110739190611a26565b90505f6064600a548561108691906119b8565b6110909190611a26565b90505f6064600b54866110a391906119b8565b6110ad9190611a26565b90505f81838587896110bf9190611a56565b6110c99190611a56565b6110d39190611a56565b6110dd9190611a56565b90505f8511156110f2576110f1888661113d565b5b5f8311156111285761112788600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856111bc565b5b6111338888836111bc565b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111a49190611719565b60405180910390fd5b6111b8825f83610e29565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361120c578060025f8282546112009190611a89565b925050819055506112da565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611295578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128c939291906117f8565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611321578060025f828254039250508190555061136b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c891906115de565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611417826113d5565b61142181856113df565b93506114318185602086016113ef565b61143a816113fd565b840191505092915050565b5f6020820190508181035f83015261145d818461140d565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61149282611469565b9050919050565b6114a281611488565b81146114ac575f5ffd5b50565b5f813590506114bd81611499565b92915050565b5f819050919050565b6114d5816114c3565b81146114df575f5ffd5b50565b5f813590506114f0816114cc565b92915050565b5f5f6040838503121561150c5761150b611465565b5b5f611519858286016114af565b925050602061152a858286016114e2565b9150509250929050565b5f8115159050919050565b61154881611534565b82525050565b5f6020820190506115615f83018461153f565b92915050565b61157081611534565b811461157a575f5ffd5b50565b5f8135905061158b81611567565b92915050565b5f5f604083850312156115a7576115a6611465565b5b5f6115b4858286016114af565b92505060206115c58582860161157d565b9150509250929050565b6115d8816114c3565b82525050565b5f6020820190506115f15f8301846115cf565b92915050565b5f6020828403121561160c5761160b611465565b5b5f611619848285016114af565b91505092915050565b5f5f5f6060848603121561163957611638611465565b5b5f611646868287016114af565b9350506020611657868287016114af565b9250506040611668868287016114e2565b9150509250925092565b5f60ff82169050919050565b61168781611672565b82525050565b5f6020820190506116a05f83018461167e565b92915050565b5f5f5f5f608085870312156116be576116bd611465565b5b5f6116cb878288016114e2565b94505060206116dc878288016114e2565b93505060406116ed878288016114e2565b92505060606116fe878288016114e2565b91505092959194509250565b61171381611488565b82525050565b5f60208201905061172c5f83018461170a565b92915050565b5f5f6040838503121561174857611747611465565b5b5f611755858286016114af565b9250506020611766858286016114af565b9150509250929050565b5f6020828403121561178557611784611465565b5b5f611792848285016114e2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117df57607f821691505b6020821081036117f2576117f161179b565b5b50919050565b5f60608201905061180b5f83018661170a565b61181860208301856115cf565b61182560408301846115cf565b949350505050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f6118616016836113df565b915061186c8261182d565b602082019050919050565b5f6020820190508181035f83015261188e81611855565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564207965740000000000005f82015250565b5f6118c9601a836113df565b91506118d482611895565b602082019050919050565b5f6020820190508181035f8301526118f6816118bd565b9050919050565b7f5472616e7366657220616d6f756e742065786365656473206d6178206c696d695f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119576021836113df565b9150611962826118fd565b604082019050919050565b5f6020820190508181035f8301526119848161194b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119c2826114c3565b91506119cd836114c3565b92508282026119db816114c3565b915082820484148315176119f2576119f161198b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a30826114c3565b9150611a3b836114c3565b925082611a4b57611a4a6119f9565b5b828204905092915050565b5f611a60826114c3565b9150611a6b836114c3565b9250828203905081811115611a8357611a8261198b565b5b92915050565b5f611a93826114c3565b9150611a9e836114c3565b9250828201905080821115611ab657611ab561198b565b5b9291505056fea2646970667358221220428ea7b1b63950a0af2da46aa2aedd0b45103a17d7a263ca42c181104577a16164736f6c634300081d0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x8 SSTORE PUSH1 0x1 PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH1 0x5 PUSH1 0xB SSTORE PUSH0 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x3C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A69676769000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5A49474749000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xB87 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14B DUP2 PUSH2 0x236 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH2 0x15B PUSH2 0x2F9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE16 JUMP JUMPDEST PUSH3 0xF4240 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST SWAP1 POP PUSH2 0x187 CALLER DUP3 PUSH2 0x301 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x64 DUP2 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0xECE JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP PUSH2 0x112F JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x371 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 PUSH0 DUP4 DUP4 PUSH2 0x386 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x463 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45A SWAP1 PUSH2 0xF58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x4C3 JUMPI POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F9 SWAP1 PUSH2 0xFC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP2 GT ISZERO DUP1 PUSH2 0x559 JUMPI POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x104E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0xECE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x5D0 SWAP2 SWAP1 PUSH2 0xECE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP6 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0xECE JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xB SLOAD DUP7 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x60A SWAP2 SWAP1 PUSH2 0xECE JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 DUP8 DUP10 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x626 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x630 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 GT ISZERO PUSH2 0x655 JUMPI PUSH2 0x654 DUP9 DUP7 PUSH2 0x6AC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x691 JUMPI PUSH2 0x690 DUP9 PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x731 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST PUSH2 0x6A2 DUP9 DUP9 DUP4 PUSH2 0x731 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x71C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x713 SWAP2 SWAP1 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x72D DUP3 PUSH0 DUP4 PUSH2 0x386 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x781 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x109F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x84F JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x80A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x801 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x10E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x896 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x8E0 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x1116 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x9C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x9D8 JUMPI PUSH2 0x9D7 PUSH2 0x981 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0xA3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x9FF JUMP JUMPDEST PUSH2 0xA44 DUP7 DUP4 PUSH2 0x9FF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA88 PUSH2 0xA83 PUSH2 0xA7E DUP5 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0xA65 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAA1 DUP4 PUSH2 0xA6E JUMP JUMPDEST PUSH2 0xAB5 PUSH2 0xAAD DUP3 PUSH2 0xA8F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xA0B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xACC PUSH2 0xABD JUMP JUMPDEST PUSH2 0xAD7 DUP2 DUP5 DUP5 PUSH2 0xA98 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAFA JUMPI PUSH2 0xAEF PUSH0 DUP3 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xADD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB3F JUMPI PUSH2 0xB10 DUP2 PUSH2 0x9DE JUMP JUMPDEST PUSH2 0xB19 DUP5 PUSH2 0x9F0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB28 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0xB3C PUSH2 0xB34 DUP6 PUSH2 0x9F0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0xADC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB5F PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0xB44 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB77 DUP4 DUP4 PUSH2 0xB50 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB90 DUP3 PUSH2 0x94A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBA9 JUMPI PUSH2 0xBA8 PUSH2 0x954 JUMP JUMPDEST JUMPDEST PUSH2 0xBB3 DUP3 SLOAD PUSH2 0x9AE JUMP JUMPDEST PUSH2 0xBBE DUP3 DUP3 DUP6 PUSH2 0xAFE JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBEF JUMPI PUSH0 DUP5 ISZERO PUSH2 0xBDD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0xBE7 DUP6 DUP3 PUSH2 0xB6C JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0xBFD DUP7 PUSH2 0x9DE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC24 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xBFF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xC41 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xC3D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0xB50 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC7F DUP3 PUSH2 0xC56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC8F DUP2 PUSH2 0xC75 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCA8 PUSH0 DUP4 ADD DUP5 PUSH2 0xC86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xD30 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xD0C JUMPI PUSH2 0xD0B PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xD1B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xD29 DUP6 PUSH2 0xCDB JUMP JUMPDEST SWAP5 POP PUSH2 0xCF0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xD48 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xE03 JUMP JUMPDEST DUP2 PUSH2 0xD55 JUMPI PUSH0 SWAP1 POP PUSH2 0xE03 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xD6B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xD75 JUMPI PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xE03 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xD87 JUMPI PUSH2 0xD86 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xD9E JUMPI PUSH2 0xD9D PUSH2 0xCAE JUMP JUMPDEST JUMPDEST POP PUSH2 0xE03 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xDD9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xDD4 JUMPI PUSH2 0xDD3 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST PUSH2 0xE03 JUMP JUMPDEST PUSH2 0xDE6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xDFD JUMPI PUSH2 0xDFC PUSH2 0xCAE JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE20 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0xE2B DUP4 PUSH2 0xE0A JUMP JUMPDEST SWAP3 POP PUSH2 0xE58 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xD39 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE6A DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0xE75 DUP4 PUSH2 0xA5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xE83 DUP2 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xED8 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0xEE3 DUP4 PUSH2 0xA5C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xEF3 JUMPI PUSH2 0xEF2 PUSH2 0xEA1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF42 PUSH1 0x16 DUP4 PUSH2 0xEFE JUMP JUMPDEST SWAP2 POP PUSH2 0xF4D DUP3 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF6F DUP2 PUSH2 0xF36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206973206E6F7420656E61626C656420796574000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFAA PUSH1 0x1A DUP4 PUSH2 0xEFE JUMP JUMPDEST SWAP2 POP PUSH2 0xFB5 DUP3 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFD7 DUP2 PUSH2 0xF9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E742065786365656473206D6178206C696D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1038 PUSH1 0x21 DUP4 PUSH2 0xEFE JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 DUP3 PUSH2 0xFDE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1065 DUP2 PUSH2 0x102C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1076 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1081 DUP4 PUSH2 0xA5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1099 JUMPI PUSH2 0x1098 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10A9 DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP2 POP PUSH2 0x10B4 DUP4 PUSH2 0xA5C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10CC JUMPI PUSH2 0x10CB PUSH2 0xCAE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DB DUP2 PUSH2 0xA5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x10F4 PUSH0 DUP4 ADD DUP7 PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1101 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x110E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1129 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AF2 DUP1 PUSH2 0x113C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A8C523C GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x98118CB4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xFCE589D8 EQ PUSH2 0x46B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xC0246668 EQ PUSH2 0x3E7 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8B424267 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x37B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6827E764 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EF JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x1F53AC02 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x219 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C4 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x523 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x530 DUP2 DUP6 DUP6 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x543 PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5AC PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5FA PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x607 DUP6 DUP3 DUP6 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x612 DUP6 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x646 PUSH2 0x98D JUMP JUMPDEST DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x6BE PUSH0 PUSH2 0xB97 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C8 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x74D SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x779 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DE PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EB DUP2 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FE PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96B DUP2 PUSH2 0xB97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x988 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC5A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x995 PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B3 PUSH2 0x6F0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA12 JUMPI PUSH2 0x9D6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA1F DUP5 DUP5 PUSH2 0x856 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA92 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH2 0xE29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE23 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEC7 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xF66 JUMPI POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP2 GT ISZERO DUP1 PUSH2 0xFFC JUMPI POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x103B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP6 PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xB SLOAD DUP7 PUSH2 0x10A3 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 DUP8 DUP10 PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F1 DUP9 DUP7 PUSH2 0x113D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 DUP9 PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x11BC JUMP JUMPDEST JUMPDEST PUSH2 0x1133 DUP9 DUP9 DUP4 PUSH2 0x11BC JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A4 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B8 DUP3 PUSH0 DUP4 PUSH2 0xE29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12DA JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1295 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1321 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x136B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1417 DUP3 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x1421 DUP2 DUP6 PUSH2 0x13DF JUMP JUMPDEST SWAP4 POP PUSH2 0x1431 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13EF JUMP JUMPDEST PUSH2 0x143A DUP2 PUSH2 0x13FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 DUP5 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1492 DUP3 PUSH2 0x1469 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP2 EQ PUSH2 0x14AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BD DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D5 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x14DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F0 DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150C JUMPI PUSH2 0x150B PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1519 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152A DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1548 DUP2 PUSH2 0x1534 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1561 PUSH0 DUP4 ADD DUP5 PUSH2 0x153F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1570 DUP2 PUSH2 0x1534 JUMP JUMPDEST DUP2 EQ PUSH2 0x157A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158B DUP2 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B4 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C5 DUP6 DUP3 DUP7 ADD PUSH2 0x157D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D8 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1619 DUP5 DUP3 DUP6 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1639 JUMPI PUSH2 0x1638 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1646 DUP7 DUP3 DUP8 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1657 DUP7 DUP3 DUP8 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1668 DUP7 DUP3 DUP8 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1687 DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x167E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16DC DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16ED DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x16FE DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1713 DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172C PUSH0 DUP4 ADD DUP5 PUSH2 0x170A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1755 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1766 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1792 DUP5 DUP3 DUP6 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17F2 JUMPI PUSH2 0x17F1 PUSH2 0x179B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x180B PUSH0 DUP4 ADD DUP7 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1818 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1825 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1861 PUSH1 0x16 DUP4 PUSH2 0x13DF JUMP JUMPDEST SWAP2 POP PUSH2 0x186C DUP3 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188E DUP2 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206973206E6F7420656E61626C656420796574000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C9 PUSH1 0x1A DUP4 PUSH2 0x13DF JUMP JUMPDEST SWAP2 POP PUSH2 0x18D4 DUP3 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F6 DUP2 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E742065786365656473206D6178206C696D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1957 PUSH1 0x21 DUP4 PUSH2 0x13DF JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP3 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1984 DUP2 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19C2 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CD DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19DB DUP2 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19F2 JUMPI PUSH2 0x19F1 PUSH2 0x198B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A30 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3B DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A4B JUMPI PUSH2 0x1A4A PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A60 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6B DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A83 JUMPI PUSH2 0x1A82 PUSH2 0x198B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A93 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9E DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AB6 JUMPI PUSH2 0x1AB5 PUSH2 0x198B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP DUP15 0xA7 0xB1 0xB6 CODECOPY POP LOG0 0xAF 0x2D LOG4 PUSH11 0xA2AEDD0B45103A17D7A263 0xCA TIMESTAMP 0xC1 DUP2 LT GASLIMIT PUSH24 0xA16164736F6C634300081D00330000000000000000000000 ",
		"sourceMap": "174:2598:6:-:0;;;357:1;332:26;;407:1;380:28;;456:1;432:25;;508:1;478:31;;621:5;592:34;;;;;;;;;;;;;;;;;;;;672:313;;;;;;;;;;718:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;741:19:6::2;781:10;:8;;;:10;;:::i;:::-;775:2;:16;;;;:::i;:::-;763:9;:28;;;;:::i;:::-;741:50;;802:30;808:10;820:11;802:5;;;:30;;:::i;:::-;871:3;857:11;:17;;;;:::i;:::-;843:11;:31;;;;919:10;907:9;;:22;;;;;;;;;;;;;;;;;;973:4;940:18;:30;959:10;940:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;730:255;174:2598:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;1837:932:6:-;1934:13;:19;1948:4;1934:19;;;;;;;;;;;;;;;;;;;;;;;;;1933:20;:42;;;;;1958:13;:17;1972:2;1958:17;;;;;;;;;;;;;;;;;;;;;;;;;1957:18;1933:42;1925:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2021:14;;;;;;;;;;;:42;;;;2039:18;:24;2058:4;2039:24;;;;;;;;;;;;;;;;;;;;;;;;;2021:42;2013:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2123:11;;2113:6;:21;;:49;;;;2138:18;:24;2157:4;2138:24;;;;;;;;;;;;;;;;;;;;;;;;;2113:49;2105:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2213:18;2255:3;2244:7;;2235:6;:16;;;;:::i;:::-;2234:24;;;;:::i;:::-;2213:45;;2269:20;2315:3;2302:9;;2293:6;:18;;;;:::i;:::-;2292:26;;;;:::i;:::-;2269:49;;2329:17;2369:3;2359:6;;2350;:15;;;;:::i;:::-;2349:23;;;;:::i;:::-;2329:43;;2383:23;2435:3;2419:12;;2410:6;:21;;;;:::i;:::-;2409:29;;;;:::i;:::-;2383:55;;2449:18;2519:15;2507:9;2492:12;2479:10;2470:6;:19;;;;:::i;:::-;:34;;;;:::i;:::-;:46;;;;:::i;:::-;:64;;;;:::i;:::-;2449:85;;2564:1;2551:10;:14;2547:70;;;2582:23;2588:4;2594:10;2582:5;;;:23;;:::i;:::-;2547:70;2643:1;2631:9;:13;2627:87;;;2661:41;2675:4;2681:9;;;;;;;;;;;2692;2661:13;;;:41;;:::i;:::-;2627:87;2726:35;2740:4;2746:2;2750:10;2726:13;;;:35;;:::i;:::-;1914:855;;;;;1837:932;;;:::o;7984:206:2:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;;;:35;;:::i;:::-;7984:206;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:180::-;8890:77;8887:1;8880:88;8987:4;8984:1;8977:15;9011:4;9008:1;9001:15;9028:185;9068:1;9085:20;9103:1;9085:20;:::i;:::-;9080:25;;9119:20;9137:1;9119:20;:::i;:::-;9114:25;;9158:1;9148:35;;9163:18;;:::i;:::-;9148:35;9205:1;9202;9198:9;9193:14;;9028:185;;;;:::o;9219:169::-;9303:11;9337:6;9332:3;9325:19;9377:4;9372:3;9368:14;9353:29;;9219:169;;;;:::o;9394:172::-;9534:24;9530:1;9522:6;9518:14;9511:48;9394:172;:::o;9572:366::-;9714:3;9735:67;9799:2;9794:3;9735:67;:::i;:::-;9728:74;;9811:93;9900:3;9811:93;:::i;:::-;9929:2;9924:3;9920:12;9913:19;;9572:366;;;:::o;9944:419::-;10110:4;10148:2;10137:9;10133:18;10125:26;;10197:9;10191:4;10187:20;10183:1;10172:9;10168:17;10161:47;10225:131;10351:4;10225:131;:::i;:::-;10217:139;;9944:419;;;:::o;10369:176::-;10509:28;10505:1;10497:6;10493:14;10486:52;10369:176;:::o;10551:366::-;10693:3;10714:67;10778:2;10773:3;10714:67;:::i;:::-;10707:74;;10790:93;10879:3;10790:93;:::i;:::-;10908:2;10903:3;10899:12;10892:19;;10551:366;;;:::o;10923:419::-;11089:4;11127:2;11116:9;11112:18;11104:26;;11176:9;11170:4;11166:20;11162:1;11151:9;11147:17;11140:47;11204:131;11330:4;11204:131;:::i;:::-;11196:139;;10923:419;;;:::o;11348:220::-;11488:34;11484:1;11476:6;11472:14;11465:58;11557:3;11552:2;11544:6;11540:15;11533:28;11348:220;:::o;11574:366::-;11716:3;11737:67;11801:2;11796:3;11737:67;:::i;:::-;11730:74;;11813:93;11902:3;11813:93;:::i;:::-;11931:2;11926:3;11922:12;11915:19;;11574:366;;;:::o;11946:419::-;12112:4;12150:2;12139:9;12135:18;12127:26;;12199:9;12193:4;12189:20;12185:1;12174:9;12170:17;12163:47;12227:131;12353:4;12227:131;:::i;:::-;12219:139;;11946:419;;;:::o;12371:194::-;12411:4;12431:20;12449:1;12431:20;:::i;:::-;12426:25;;12465:20;12483:1;12465:20;:::i;:::-;12460:25;;12509:1;12506;12502:9;12494:17;;12533:1;12527:4;12524:11;12521:37;;;12538:18;;:::i;:::-;12521:37;12371:194;;;;:::o;12571:191::-;12611:3;12630:20;12648:1;12630:20;:::i;:::-;12625:25;;12664:20;12682:1;12664:20;:::i;:::-;12659:25;;12707:1;12704;12700:9;12693:16;;12728:3;12725:1;12722:10;12719:36;;;12735:18;;:::i;:::-;12719:36;12571:191;;;;:::o;12768:118::-;12855:24;12873:5;12855:24;:::i;:::-;12850:3;12843:37;12768:118;;:::o;12892:442::-;13041:4;13079:2;13068:9;13064:18;13056:26;;13092:71;13160:1;13149:9;13145:17;13136:6;13092:71;:::i;:::-;13173:72;13241:2;13230:9;13226:18;13217:6;13173:72;:::i;:::-;13255;13323:2;13312:9;13308:18;13299:6;13255:72;:::i;:::-;12892:442;;;;;;:::o;13340:222::-;13433:4;13471:2;13460:9;13456:18;13448:26;;13484:71;13552:1;13541:9;13537:17;13528:6;13484:71;:::i;:::-;13340:222;;;;:::o;174:2598:6:-;;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "allowance",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "needed",
					"type": "uint256"
				}
			],
			"name": "ERC20InsufficientAllowance",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "balance",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "needed",
					"type": "uint256"
				}
			],
			"name": "ERC20InsufficientBalance",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "approver",
					"type": "address"
				}
			],
			"name": "ERC20InvalidApprover",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "receiver",
					"type": "address"
				}
			],
			"name": "ERC20InvalidReceiver",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "sender",
					"type": "address"
				}
			],
			"name": "ERC20InvalidSender",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "ERC20InvalidSpender",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "OwnableInvalidOwner",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "OwnableUnauthorizedAccount",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "burnFee",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "devFee",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "devWallet",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "enableTrading",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				},
				{
					"internalType": "bool",
					"name": "status",
					"type": "bool"
				}
			],
			"name": "excludeFromFees",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "liquidityFee",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "maxTxAmount",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "renounceOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "rewardFee",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				},
				{
					"internalType": "bool",
					"name": "status",
					"type": "bool"
				}
			],
			"name": "setBlacklist",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_devWallet",
					"type": "address"
				}
			],
			"name": "setDevWallet",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_burnFee",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_rewardFee",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_devFee",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "_liquidityFee",
					"type": "uint256"
				}
			],
			"name": "setFees",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_maxTxAmount",
					"type": "uint256"
				}
			],
			"name": "setMaxTxAmount",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "tradingEnabled",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "value",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 307,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "_balances",
				"offset": 0,
				"slot": "0",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 313,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "_allowances",
				"offset": 0,
				"slot": "1",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			},
			{
				"astId": 315,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "_totalSupply",
				"offset": 0,
				"slot": "2",
				"type": "t_uint256"
			},
			{
				"astId": 317,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "_name",
				"offset": 0,
				"slot": "3",
				"type": "t_string_storage"
			},
			{
				"astId": 319,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "_symbol",
				"offset": 0,
				"slot": "4",
				"type": "t_string_storage"
			},
			{
				"astId": 8,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "_owner",
				"offset": 0,
				"slot": "5",
				"type": "t_address"
			},
			{
				"astId": 945,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "isBlacklisted",
				"offset": 0,
				"slot": "6",
				"type": "t_mapping(t_address,t_bool)"
			},
			{
				"astId": 949,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "isExcludedFromFees",
				"offset": 0,
				"slot": "7",
				"type": "t_mapping(t_address,t_bool)"
			},
			{
				"astId": 952,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "burnFee",
				"offset": 0,
				"slot": "8",
				"type": "t_uint256"
			},
			{
				"astId": 955,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "rewardFee",
				"offset": 0,
				"slot": "9",
				"type": "t_uint256"
			},
			{
				"astId": 958,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "devFee",
				"offset": 0,
				"slot": "10",
				"type": "t_uint256"
			},
			{
				"astId": 961,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "liquidityFee",
				"offset": 0,
				"slot": "11",
				"type": "t_uint256"
			},
			{
				"astId": 963,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "maxTxAmount",
				"offset": 0,
				"slot": "12",
				"type": "t_uint256"
			},
			{
				"astId": 966,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "tradingEnabled",
				"offset": 0,
				"slot": "13",
				"type": "t_bool"
			},
			{
				"astId": 968,
				"contract": "ZiggiToken.sol:ZiggiToken",
				"label": "devWallet",
				"offset": 1,
				"slot": "13",
				"type": "t_address"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_mapping(t_address,t_bool)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => bool)",
				"numberOfBytes": "32",
				"value": "t_bool"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			}
		}
	},
	"web3Deploy": "var ziggitokenContract = new web3.eth.Contract([{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"excludeFromFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"}],\"name\":\"setDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_burnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_devFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidityFee\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxTxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxTxAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]);\nvar ziggitoken = ziggitokenContract.deploy({\n     data: '0x6080604052600260085560016009556001600a556005600b555f600d5f6101000a81548160ff02191690831515021790555034801561003c575f5ffd5b50336040518060400160405280600581526020017f5a696767690000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f5a4947474900000000000000000000000000000000000000000000000000000081525081600390816100b99190610b87565b5080600490816100c99190610b87565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101339190610c95565b60405180910390fd5b61014b8161023660201b60201c565b505f61015b6102f960201b60201c565b600a6101679190610e16565b620f42406101759190610e60565b9050610187338261030160201b60201c565b6064816101949190610ece565b600c8190555033600d60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505061112f565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610371575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016103689190610c95565b60405180910390fd5b6103825f838361038660201b60201c565b5050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610424575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b610463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045a90610f58565b60405180910390fd5b600d5f9054906101000a900460ff16806104c3575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f990610fc0565b60405180910390fd5b600c5481111580610559575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f9061104e565b60405180910390fd5b5f6064600854836105a99190610e60565b6105b39190610ece565b90505f6064600954846105c69190610e60565b6105d09190610ece565b90505f6064600a54856105e39190610e60565b6105ed9190610ece565b90505f6064600b54866106009190610e60565b61060a9190610ece565b90505f818385878961061c919061106c565b610626919061106c565b610630919061106c565b61063a919061106c565b90505f8511156106555761065488866106ac60201b60201c565b5b5f8311156106915761069088600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168561073160201b60201c565b5b6106a288888361073160201b60201c565b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071c575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107139190610c95565b60405180910390fd5b61072d825f8361038660201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610781578060025f828254610775919061109f565b9250508190555061084f565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561080a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610801939291906110e1565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610896578060025f82825403925050819055506108e0565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161093d9190611116565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806109c557607f821691505b6020821081036109d8576109d7610981565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610a3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826109ff565b610a4486836109ff565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f610a88610a83610a7e84610a5c565b610a65565b610a5c565b9050919050565b5f819050919050565b610aa183610a6e565b610ab5610aad82610a8f565b848454610a0b565b825550505050565b5f5f905090565b610acc610abd565b610ad7818484610a98565b505050565b5b81811015610afa57610aef5f82610ac4565b600181019050610add565b5050565b601f821115610b3f57610b10816109de565b610b19846109f0565b81016020851015610b28578190505b610b3c610b34856109f0565b830182610adc565b50505b505050565b5f82821c905092915050565b5f610b5f5f1984600802610b44565b1980831691505092915050565b5f610b778383610b50565b9150826002028217905092915050565b610b908261094a565b67ffffffffffffffff811115610ba957610ba8610954565b5b610bb382546109ae565b610bbe828285610afe565b5f60209050601f831160018114610bef575f8415610bdd578287015190505b610be78582610b6c565b865550610c4e565b601f198416610bfd866109de565b5f5b82811015610c2457848901518255600182019150602085019450602081019050610bff565b86831015610c415784890151610c3d601f891682610b50565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c7f82610c56565b9050919050565b610c8f81610c75565b82525050565b5f602082019050610ca85f830184610c86565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610d3057808604811115610d0c57610d0b610cae565b5b6001851615610d1b5780820291505b8081029050610d2985610cdb565b9450610cf0565b94509492505050565b5f82610d485760019050610e03565b81610d55575f9050610e03565b8160018114610d6b5760028114610d7557610da4565b6001915050610e03565b60ff841115610d8757610d86610cae565b5b8360020a915084821115610d9e57610d9d610cae565b5b50610e03565b5060208310610133831016604e8410600b8410161715610dd95782820a905083811115610dd457610dd3610cae565b5b610e03565b610de68484846001610ce7565b92509050818404811115610dfd57610dfc610cae565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610e2082610a5c565b9150610e2b83610e0a565b9250610e587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610d39565b905092915050565b5f610e6a82610a5c565b9150610e7583610a5c565b9250828202610e8381610a5c565b91508282048414831517610e9a57610e99610cae565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610ed882610a5c565b9150610ee383610a5c565b925082610ef357610ef2610ea1565b5b828204905092915050565b5f82825260208201905092915050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f610f42601683610efe565b9150610f4d82610f0e565b602082019050919050565b5f6020820190508181035f830152610f6f81610f36565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564207965740000000000005f82015250565b5f610faa601a83610efe565b9150610fb582610f76565b602082019050919050565b5f6020820190508181035f830152610fd781610f9e565b9050919050565b7f5472616e7366657220616d6f756e742065786365656473206d6178206c696d695f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f611038602183610efe565b915061104382610fde565b604082019050919050565b5f6020820190508181035f8301526110658161102c565b9050919050565b5f61107682610a5c565b915061108183610a5c565b925082820390508181111561109957611098610cae565b5b92915050565b5f6110a982610a5c565b91506110b483610a5c565b92508282019050808211156110cc576110cb610cae565b5b92915050565b6110db81610a5c565b82525050565b5f6060820190506110f45f830186610c86565b61110160208301856110d2565b61110e60408301846110d2565b949350505050565b5f6020820190506111295f8301846110d2565b92915050565b611af28061113c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610171575f3560e01c80638a8c523c116100dc57806398118cb411610095578063dd62ed3e1161006f578063dd62ed3e14610403578063ec28438a14610433578063f2fde38b1461044f578063fce589d81461046b57610171565b806398118cb414610399578063a9059cbb146103b7578063c0246668146103e757610171565b80638a8c523c146102f95780638b424267146103035780638c0b5e22146103215780638da5cb5b1461033f5780638ea5220f1461035d57806395d89b411461037b57610171565b8063313ce5671161012e578063313ce567146102495780634ada218b146102675780636827e764146102855780636fcba377146102a357806370a08231146102bf578063715018a6146102ef57610171565b806306fdde0314610175578063095ea7b314610193578063153b0d1e146101c357806318160ddd146101df5780631f53ac02146101fd57806323b872dd14610219575b5f5ffd5b61017d610489565b60405161018a9190611445565b60405180910390f35b6101ad60048036038101906101a891906114f6565b610519565b6040516101ba919061154e565b60405180910390f35b6101dd60048036038101906101d89190611591565b61053b565b005b6101e761059b565b6040516101f491906115de565b60405180910390f35b610217600480360381019061021291906115f7565b6105a4565b005b610233600480360381019061022e9190611622565b6105f0565b604051610240919061154e565b60405180910390f35b61025161061e565b60405161025e919061168d565b60405180910390f35b61026f610626565b60405161027c919061154e565b60405180910390f35b61028d610638565b60405161029a91906115de565b60405180910390f35b6102bd60048036038101906102b891906116a6565b61063e565b005b6102d960048036038101906102d491906115f7565b610668565b6040516102e691906115de565b60405180910390f35b6102f76106ad565b005b6103016106c0565b005b61030b6106e4565b60405161031891906115de565b60405180910390f35b6103296106ea565b60405161033691906115de565b60405180910390f35b6103476106f0565b6040516103549190611719565b60405180910390f35b610365610718565b6040516103729190611719565b60405180910390f35b61038361073e565b6040516103909190611445565b60405180910390f35b6103a16107ce565b6040516103ae91906115de565b60405180910390f35b6103d160048036038101906103cc91906114f6565b6107d4565b6040516103de919061154e565b60405180910390f35b61040160048036038101906103fc9190611591565b6107f6565b005b61041d60048036038101906104189190611732565b610856565b60405161042a91906115de565b60405180910390f35b61044d60048036038101906104489190611770565b6108d8565b005b610469600480360381019061046491906115f7565b6108ea565b005b61047361096e565b60405161048091906115de565b60405180910390f35b606060038054610498906117c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906117c8565b801561050f5780601f106104e65761010080835404028352916020019161050f565b820191905f5260205f20905b8154815290600101906020018083116104f257829003601f168201915b5050505050905090565b5f5f610523610974565b905061053081858561097b565b600191505092915050565b61054361098d565b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f600254905090565b6105ac61098d565b80600d60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5f6105fa610974565b9050610607858285610a14565b610612858585610aa7565b60019150509392505050565b5f6012905090565b600d5f9054906101000a900460ff1681565b600a5481565b61064661098d565b836008819055508260098190555081600a8190555080600b8190555050505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106b561098d565b6106be5f610b97565b565b6106c861098d565b6001600d5f6101000a81548160ff021916908315150217905550565b60095481565b600c5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461074d906117c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610779906117c8565b80156107c45780601f1061079b576101008083540402835291602001916107c4565b820191905f5260205f20905b8154815290600101906020018083116107a757829003601f168201915b5050505050905090565b600b5481565b5f5f6107de610974565b90506107eb818585610aa7565b600191505092915050565b6107fe61098d565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108e061098d565b80600c8190555050565b6108f261098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610962575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109599190611719565b60405180910390fd5b61096b81610b97565b50565b60085481565b5f33905090565b6109888383836001610c5a565b505050565b610995610974565b73ffffffffffffffffffffffffffffffffffffffff166109b36106f0565b73ffffffffffffffffffffffffffffffffffffffff1614610a12576109d6610974565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a099190611719565b60405180910390fd5b565b5f610a1f8484610856565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aa15781811015610a92578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a89939291906117f8565b60405180910390fd5b610aa084848484035f610c5a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0e9190611719565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b7e9190611719565b60405180910390fd5b610b92838383610e29565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cca575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cc19190611719565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d319190611719565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e23578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e1a91906115de565b60405180910390a35b50505050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610ec7575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90611877565b60405180910390fd5b600d5f9054906101000a900460ff1680610f66575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c906118df565b60405180910390fd5b600c5481111580610ffc575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61103b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110329061196d565b60405180910390fd5b5f60646008548361104c91906119b8565b6110569190611a26565b90505f60646009548461106991906119b8565b6110739190611a26565b90505f6064600a548561108691906119b8565b6110909190611a26565b90505f6064600b54866110a391906119b8565b6110ad9190611a26565b90505f81838587896110bf9190611a56565b6110c99190611a56565b6110d39190611a56565b6110dd9190611a56565b90505f8511156110f2576110f1888661113d565b5b5f8311156111285761112788600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856111bc565b5b6111338888836111bc565b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111a49190611719565b60405180910390fd5b6111b8825f83610e29565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361120c578060025f8282546112009190611a89565b925050819055506112da565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611295578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128c939291906117f8565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611321578060025f828254039250508190555061136b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c891906115de565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611417826113d5565b61142181856113df565b93506114318185602086016113ef565b61143a816113fd565b840191505092915050565b5f6020820190508181035f83015261145d818461140d565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61149282611469565b9050919050565b6114a281611488565b81146114ac575f5ffd5b50565b5f813590506114bd81611499565b92915050565b5f819050919050565b6114d5816114c3565b81146114df575f5ffd5b50565b5f813590506114f0816114cc565b92915050565b5f5f6040838503121561150c5761150b611465565b5b5f611519858286016114af565b925050602061152a858286016114e2565b9150509250929050565b5f8115159050919050565b61154881611534565b82525050565b5f6020820190506115615f83018461153f565b92915050565b61157081611534565b811461157a575f5ffd5b50565b5f8135905061158b81611567565b92915050565b5f5f604083850312156115a7576115a6611465565b5b5f6115b4858286016114af565b92505060206115c58582860161157d565b9150509250929050565b6115d8816114c3565b82525050565b5f6020820190506115f15f8301846115cf565b92915050565b5f6020828403121561160c5761160b611465565b5b5f611619848285016114af565b91505092915050565b5f5f5f6060848603121561163957611638611465565b5b5f611646868287016114af565b9350506020611657868287016114af565b9250506040611668868287016114e2565b9150509250925092565b5f60ff82169050919050565b61168781611672565b82525050565b5f6020820190506116a05f83018461167e565b92915050565b5f5f5f5f608085870312156116be576116bd611465565b5b5f6116cb878288016114e2565b94505060206116dc878288016114e2565b93505060406116ed878288016114e2565b92505060606116fe878288016114e2565b91505092959194509250565b61171381611488565b82525050565b5f60208201905061172c5f83018461170a565b92915050565b5f5f6040838503121561174857611747611465565b5b5f611755858286016114af565b9250506020611766858286016114af565b9150509250929050565b5f6020828403121561178557611784611465565b5b5f611792848285016114e2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117df57607f821691505b6020821081036117f2576117f161179b565b5b50919050565b5f60608201905061180b5f83018661170a565b61181860208301856115cf565b61182560408301846115cf565b949350505050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f6118616016836113df565b915061186c8261182d565b602082019050919050565b5f6020820190508181035f83015261188e81611855565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564207965740000000000005f82015250565b5f6118c9601a836113df565b91506118d482611895565b602082019050919050565b5f6020820190508181035f8301526118f6816118bd565b9050919050565b7f5472616e7366657220616d6f756e742065786365656473206d6178206c696d695f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119576021836113df565b9150611962826118fd565b604082019050919050565b5f6020820190508181035f8301526119848161194b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119c2826114c3565b91506119cd836114c3565b92508282026119db816114c3565b915082820484148315176119f2576119f161198b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a30826114c3565b9150611a3b836114c3565b925082611a4b57611a4a6119f9565b5b828204905092915050565b5f611a60826114c3565b9150611a6b836114c3565b9250828203905081811115611a8357611a8261198b565b5b92915050565b5f611a93826114c3565b9150611a9e836114c3565b9250828201905080821115611ab657611ab561198b565b5b9291505056fea2646970667358221220428ea7b1b63950a0af2da46aa2aedd0b45103a17d7a263ca42c181104577a16164736f6c634300081d0033', \n     arguments: [\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"fce589d8": "burnFee()",
		"313ce567": "decimals()",
		"6827e764": "devFee()",
		"8ea5220f": "devWallet()",
		"8a8c523c": "enableTrading()",
		"c0246668": "excludeFromFees(address,bool)",
		"98118cb4": "liquidityFee()",
		"8c0b5e22": "maxTxAmount()",
		"06fdde03": "name()",
		"8da5cb5b": "owner()",
		"715018a6": "renounceOwnership()",
		"8b424267": "rewardFee()",
		"153b0d1e": "setBlacklist(address,bool)",
		"1f53ac02": "setDevWallet(address)",
		"6fcba377": "setFees(uint256,uint256,uint256,uint256)",
		"ec28438a": "setMaxTxAmount(uint256)",
		"95d89b41": "symbol()",
		"18160ddd": "totalSupply()",
		"4ada218b": "tradingEnabled()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"f2fde38b": "transferOwnership(address)"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "1379600",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "infinite",
			"balanceOf(address)": "2939",
			"burnFee()": "2535",
			"decimals()": "361",
			"devFee()": "2492",
			"devWallet()": "2670",
			"enableTrading()": "infinite",
			"excludeFromFees(address,bool)": "infinite",
			"liquidityFee()": "2470",
			"maxTxAmount()": "2492",
			"name()": "infinite",
			"owner()": "2604",
			"renounceOwnership()": "infinite",
			"rewardFee()": "2470",
			"setBlacklist(address,bool)": "infinite",
			"setDevWallet(address)": "infinite",
			"setFees(uint256,uint256,uint256,uint256)": "infinite",
			"setMaxTxAmount(uint256)": "infinite",
			"symbol()": "infinite",
			"totalSupply()": "2522",
			"tradingEnabled()": "2511",
			"transfer(address,uint256)": "infinite",
			"transferFrom(address,address,uint256)": "infinite",
			"transferOwnership(address)": "infinite"
		},
		"Internal": {
			"_update(address,address,uint256)": "infinite"
		}
	},
	"devdoc": {
		"errors": {
			"ERC20InsufficientAllowance(address,uint256,uint256)": [
				{
					"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
					"params": {
						"allowance": "Amount of tokens a `spender` is allowed to operate with.",
						"needed": "Minimum amount required to perform a transfer.",
						"spender": "Address that may be allowed to operate on tokens without being their owner."
					}
				}
			],
			"ERC20InsufficientBalance(address,uint256,uint256)": [
				{
					"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
					"params": {
						"balance": "Current balance for the interacting account.",
						"needed": "Minimum amount required to perform a transfer.",
						"sender": "Address whose tokens are being transferred."
					}
				}
			],
			"ERC20InvalidApprover(address)": [
				{
					"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
					"params": {
						"approver": "Address initiating an approval operation."
					}
				}
			],
			"ERC20InvalidReceiver(address)": [
				{
					"details": "Indicates a failure with the token `receiver`. Used in transfers.",
					"params": {
						"receiver": "Address to which tokens are being transferred."
					}
				}
			],
			"ERC20InvalidSender(address)": [
				{
					"details": "Indicates a failure with the token `sender`. Used in transfers.",
					"params": {
						"sender": "Address whose tokens are being transferred."
					}
				}
			],
			"ERC20InvalidSpender(address)": [
				{
					"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
					"params": {
						"spender": "Address that may be allowed to operate on tokens without being their owner."
					}
				}
			],
			"OwnableInvalidOwner(address)": [
				{
					"details": "The owner is not a valid owner account. (eg. `address(0)`)"
				}
			],
			"OwnableUnauthorizedAccount(address)": [
				{
					"details": "The caller account is not authorized to perform an operation."
				}
			]
		},
		"events": {
			"Approval(address,address,uint256)": {
				"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
			},
			"Transfer(address,address,uint256)": {
				"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
			}
		},
		"kind": "dev",
		"methods": {
			"allowance(address,address)": {
				"details": "See {IERC20-allowance}."
			},
			"approve(address,uint256)": {
				"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
			},
			"balanceOf(address)": {
				"details": "See {IERC20-balanceOf}."
			},
			"decimals()": {
				"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
			},
			"name()": {
				"details": "Returns the name of the token."
			},
			"owner()": {
				"details": "Returns the address of the current owner."
			},
			"renounceOwnership()": {
				"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
			},
			"symbol()": {
				"details": "Returns the symbol of the token, usually a shorter version of the name."
			},
			"totalSupply()": {
				"details": "See {IERC20-totalSupply}."
			},
			"transfer(address,uint256)": {
				"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
			},
			"transferFrom(address,address,uint256)": {
				"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
			},
			"transferOwnership(address)": {
				"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@_approve_690": {
				"entryPoint": 2427,
				"id": 690,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_approve_750": {
				"entryPoint": 3162,
				"id": 750,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@_burn_672": {
				"entryPoint": 4413,
				"id": 672,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@_checkOwner_84": {
				"entryPoint": 2445,
				"id": 84,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_msgSender_915": {
				"entryPoint": 2420,
				"id": 915,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_spendAllowance_798": {
				"entryPoint": 2580,
				"id": 798,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_transferOwnership_146": {
				"entryPoint": 2967,
				"id": 146,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_transfer_529": {
				"entryPoint": 2727,
				"id": 529,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_update_1232": {
				"entryPoint": 3625,
				"id": 1232,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@_update_606": {
				"entryPoint": 4540,
				"id": 606,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@allowance_426": {
				"entryPoint": 2134,
				"id": 426,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@approve_450": {
				"entryPoint": 1305,
				"id": 450,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOf_385": {
				"entryPoint": 1640,
				"id": 385,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@burnFee_952": {
				"entryPoint": 2414,
				"id": 952,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@decimals_363": {
				"entryPoint": 1566,
				"id": 363,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@devFee_958": {
				"entryPoint": 1592,
				"id": 958,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@devWallet_968": {
				"entryPoint": 1816,
				"id": 968,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@enableTrading_1023": {
				"entryPoint": 1728,
				"id": 1023,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@excludeFromFees_1055": {
				"entryPoint": 2038,
				"id": 1055,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@liquidityFee_961": {
				"entryPoint": 1998,
				"id": 961,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@maxTxAmount_963": {
				"entryPoint": 1770,
				"id": 963,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@name_345": {
				"entryPoint": 1161,
				"id": 345,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@owner_67": {
				"entryPoint": 1776,
				"id": 67,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@renounceOwnership_98": {
				"entryPoint": 1709,
				"id": 98,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@rewardFee_955": {
				"entryPoint": 1764,
				"id": 955,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@setBlacklist_1039": {
				"entryPoint": 1339,
				"id": 1039,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@setDevWallet_1109": {
				"entryPoint": 1444,
				"id": 1109,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@setFees_1085": {
				"entryPoint": 1598,
				"id": 1085,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@setMaxTxAmount_1097": {
				"entryPoint": 2264,
				"id": 1097,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@symbol_354": {
				"entryPoint": 1854,
				"id": 354,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@totalSupply_372": {
				"entryPoint": 1435,
				"id": 372,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@tradingEnabled_966": {
				"entryPoint": 1574,
				"id": 966,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@transferFrom_482": {
				"entryPoint": 1520,
				"id": 482,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferOwnership_126": {
				"entryPoint": 2282,
				"id": 126,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@transfer_409": {
				"entryPoint": 2004,
				"id": 409,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_address": {
				"entryPoint": 5295,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_bool": {
				"entryPoint": 5501,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_t_uint256": {
				"entryPoint": 5346,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 5623,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 5938,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 5666,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_bool": {
				"entryPoint": 5521,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 5366,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 6000,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256": {
				"entryPoint": 5798,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 4
			},
			"abi_encode_t_address_to_t_address_fromStack": {
				"entryPoint": 5898,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_bool_to_t_bool_fromStack": {
				"entryPoint": 5439,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 5133,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6475,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6333,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack": {
				"entryPoint": 6229,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_t_uint256_to_t_uint256_fromStack": {
				"entryPoint": 5583,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_t_uint8_to_t_uint8_fromStack": {
				"entryPoint": 5758,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": 5913,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 6136,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": 5454,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 5189,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6509,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6367,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 6263,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": 5598,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": 5773,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"allocate_unbounded": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"array_length_t_string_memory_ptr": {
				"entryPoint": 5077,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
				"entryPoint": 5087,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 6793,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_div_t_uint256": {
				"entryPoint": 6694,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 6584,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 6742,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"cleanup_t_address": {
				"entryPoint": 5256,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_bool": {
				"entryPoint": 5428,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint160": {
				"entryPoint": 5225,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint256": {
				"entryPoint": 5315,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"cleanup_t_uint8": {
				"entryPoint": 5746,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"copy_memory_to_memory_with_cleanup": {
				"entryPoint": 5103,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"extract_byte_array_length": {
				"entryPoint": 6088,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 6539,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x12": {
				"entryPoint": 6649,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x22": {
				"entryPoint": 6043,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
				"entryPoint": 5221,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"round_up_to_mul_of_32": {
				"entryPoint": 5117,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264": {
				"entryPoint": 6397,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33": {
				"entryPoint": 6293,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53": {
				"entryPoint": 6189,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_address": {
				"entryPoint": 5273,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_bool": {
				"entryPoint": 5479,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"validator_revert_t_uint256": {
				"entryPoint": 5324,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nativeSrc": "0:13064:7",
					"nodeType": "YulBlock",
					"src": "0:13064:7",
					"statements": [
						{
							"body": {
								"nativeSrc": "66:40:7",
								"nodeType": "YulBlock",
								"src": "66:40:7",
								"statements": [
									{
										"nativeSrc": "77:22:7",
										"nodeType": "YulAssignment",
										"src": "77:22:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "93:5:7",
													"nodeType": "YulIdentifier",
													"src": "93:5:7"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "87:5:7",
												"nodeType": "YulIdentifier",
												"src": "87:5:7"
											},
											"nativeSrc": "87:12:7",
											"nodeType": "YulFunctionCall",
											"src": "87:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "77:6:7",
												"nodeType": "YulIdentifier",
												"src": "77:6:7"
											}
										]
									}
								]
							},
							"name": "array_length_t_string_memory_ptr",
							"nativeSrc": "7:99:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "49:5:7",
									"nodeType": "YulTypedName",
									"src": "49:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "59:6:7",
									"nodeType": "YulTypedName",
									"src": "59:6:7",
									"type": ""
								}
							],
							"src": "7:99:7"
						},
						{
							"body": {
								"nativeSrc": "208:73:7",
								"nodeType": "YulBlock",
								"src": "208:73:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "225:3:7",
													"nodeType": "YulIdentifier",
													"src": "225:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "230:6:7",
													"nodeType": "YulIdentifier",
													"src": "230:6:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "218:6:7",
												"nodeType": "YulIdentifier",
												"src": "218:6:7"
											},
											"nativeSrc": "218:19:7",
											"nodeType": "YulFunctionCall",
											"src": "218:19:7"
										},
										"nativeSrc": "218:19:7",
										"nodeType": "YulExpressionStatement",
										"src": "218:19:7"
									},
									{
										"nativeSrc": "246:29:7",
										"nodeType": "YulAssignment",
										"src": "246:29:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "265:3:7",
													"nodeType": "YulIdentifier",
													"src": "265:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "270:4:7",
													"nodeType": "YulLiteral",
													"src": "270:4:7",
													"type": "",
													"value": "0x20"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "261:3:7",
												"nodeType": "YulIdentifier",
												"src": "261:3:7"
											},
											"nativeSrc": "261:14:7",
											"nodeType": "YulFunctionCall",
											"src": "261:14:7"
										},
										"variableNames": [
											{
												"name": "updated_pos",
												"nativeSrc": "246:11:7",
												"nodeType": "YulIdentifier",
												"src": "246:11:7"
											}
										]
									}
								]
							},
							"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
							"nativeSrc": "112:169:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "180:3:7",
									"nodeType": "YulTypedName",
									"src": "180:3:7",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "185:6:7",
									"nodeType": "YulTypedName",
									"src": "185:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "updated_pos",
									"nativeSrc": "196:11:7",
									"nodeType": "YulTypedName",
									"src": "196:11:7",
									"type": ""
								}
							],
							"src": "112:169:7"
						},
						{
							"body": {
								"nativeSrc": "349:77:7",
								"nodeType": "YulBlock",
								"src": "349:77:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "dst",
													"nativeSrc": "366:3:7",
													"nodeType": "YulIdentifier",
													"src": "366:3:7"
												},
												{
													"name": "src",
													"nativeSrc": "371:3:7",
													"nodeType": "YulIdentifier",
													"src": "371:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "376:6:7",
													"nodeType": "YulIdentifier",
													"src": "376:6:7"
												}
											],
											"functionName": {
												"name": "mcopy",
												"nativeSrc": "360:5:7",
												"nodeType": "YulIdentifier",
												"src": "360:5:7"
											},
											"nativeSrc": "360:23:7",
											"nodeType": "YulFunctionCall",
											"src": "360:23:7"
										},
										"nativeSrc": "360:23:7",
										"nodeType": "YulExpressionStatement",
										"src": "360:23:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dst",
															"nativeSrc": "403:3:7",
															"nodeType": "YulIdentifier",
															"src": "403:3:7"
														},
														{
															"name": "length",
															"nativeSrc": "408:6:7",
															"nodeType": "YulIdentifier",
															"src": "408:6:7"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "399:3:7",
														"nodeType": "YulIdentifier",
														"src": "399:3:7"
													},
													"nativeSrc": "399:16:7",
													"nodeType": "YulFunctionCall",
													"src": "399:16:7"
												},
												{
													"kind": "number",
													"nativeSrc": "417:1:7",
													"nodeType": "YulLiteral",
													"src": "417:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "392:6:7",
												"nodeType": "YulIdentifier",
												"src": "392:6:7"
											},
											"nativeSrc": "392:27:7",
											"nodeType": "YulFunctionCall",
											"src": "392:27:7"
										},
										"nativeSrc": "392:27:7",
										"nodeType": "YulExpressionStatement",
										"src": "392:27:7"
									}
								]
							},
							"name": "copy_memory_to_memory_with_cleanup",
							"nativeSrc": "287:139:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "src",
									"nativeSrc": "331:3:7",
									"nodeType": "YulTypedName",
									"src": "331:3:7",
									"type": ""
								},
								{
									"name": "dst",
									"nativeSrc": "336:3:7",
									"nodeType": "YulTypedName",
									"src": "336:3:7",
									"type": ""
								},
								{
									"name": "length",
									"nativeSrc": "341:6:7",
									"nodeType": "YulTypedName",
									"src": "341:6:7",
									"type": ""
								}
							],
							"src": "287:139:7"
						},
						{
							"body": {
								"nativeSrc": "480:54:7",
								"nodeType": "YulBlock",
								"src": "480:54:7",
								"statements": [
									{
										"nativeSrc": "490:38:7",
										"nodeType": "YulAssignment",
										"src": "490:38:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "508:5:7",
															"nodeType": "YulIdentifier",
															"src": "508:5:7"
														},
														{
															"kind": "number",
															"nativeSrc": "515:2:7",
															"nodeType": "YulLiteral",
															"src": "515:2:7",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "504:3:7",
														"nodeType": "YulIdentifier",
														"src": "504:3:7"
													},
													"nativeSrc": "504:14:7",
													"nodeType": "YulFunctionCall",
													"src": "504:14:7"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nativeSrc": "524:2:7",
															"nodeType": "YulLiteral",
															"src": "524:2:7",
															"type": "",
															"value": "31"
														}
													],
													"functionName": {
														"name": "not",
														"nativeSrc": "520:3:7",
														"nodeType": "YulIdentifier",
														"src": "520:3:7"
													},
													"nativeSrc": "520:7:7",
													"nodeType": "YulFunctionCall",
													"src": "520:7:7"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "500:3:7",
												"nodeType": "YulIdentifier",
												"src": "500:3:7"
											},
											"nativeSrc": "500:28:7",
											"nodeType": "YulFunctionCall",
											"src": "500:28:7"
										},
										"variableNames": [
											{
												"name": "result",
												"nativeSrc": "490:6:7",
												"nodeType": "YulIdentifier",
												"src": "490:6:7"
											}
										]
									}
								]
							},
							"name": "round_up_to_mul_of_32",
							"nativeSrc": "432:102:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "463:5:7",
									"nodeType": "YulTypedName",
									"src": "463:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "result",
									"nativeSrc": "473:6:7",
									"nodeType": "YulTypedName",
									"src": "473:6:7",
									"type": ""
								}
							],
							"src": "432:102:7"
						},
						{
							"body": {
								"nativeSrc": "632:285:7",
								"nodeType": "YulBlock",
								"src": "632:285:7",
								"statements": [
									{
										"nativeSrc": "642:53:7",
										"nodeType": "YulVariableDeclaration",
										"src": "642:53:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "689:5:7",
													"nodeType": "YulIdentifier",
													"src": "689:5:7"
												}
											],
											"functionName": {
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "656:32:7",
												"nodeType": "YulIdentifier",
												"src": "656:32:7"
											},
											"nativeSrc": "656:39:7",
											"nodeType": "YulFunctionCall",
											"src": "656:39:7"
										},
										"variables": [
											{
												"name": "length",
												"nativeSrc": "646:6:7",
												"nodeType": "YulTypedName",
												"src": "646:6:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "704:78:7",
										"nodeType": "YulAssignment",
										"src": "704:78:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "770:3:7",
													"nodeType": "YulIdentifier",
													"src": "770:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "775:6:7",
													"nodeType": "YulIdentifier",
													"src": "775:6:7"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "711:58:7",
												"nodeType": "YulIdentifier",
												"src": "711:58:7"
											},
											"nativeSrc": "711:71:7",
											"nodeType": "YulFunctionCall",
											"src": "711:71:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "704:3:7",
												"nodeType": "YulIdentifier",
												"src": "704:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "830:5:7",
															"nodeType": "YulIdentifier",
															"src": "830:5:7"
														},
														{
															"kind": "number",
															"nativeSrc": "837:4:7",
															"nodeType": "YulLiteral",
															"src": "837:4:7",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "826:3:7",
														"nodeType": "YulIdentifier",
														"src": "826:3:7"
													},
													"nativeSrc": "826:16:7",
													"nodeType": "YulFunctionCall",
													"src": "826:16:7"
												},
												{
													"name": "pos",
													"nativeSrc": "844:3:7",
													"nodeType": "YulIdentifier",
													"src": "844:3:7"
												},
												{
													"name": "length",
													"nativeSrc": "849:6:7",
													"nodeType": "YulIdentifier",
													"src": "849:6:7"
												}
											],
											"functionName": {
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "791:34:7",
												"nodeType": "YulIdentifier",
												"src": "791:34:7"
											},
											"nativeSrc": "791:65:7",
											"nodeType": "YulFunctionCall",
											"src": "791:65:7"
										},
										"nativeSrc": "791:65:7",
										"nodeType": "YulExpressionStatement",
										"src": "791:65:7"
									},
									{
										"nativeSrc": "865:46:7",
										"nodeType": "YulAssignment",
										"src": "865:46:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "876:3:7",
													"nodeType": "YulIdentifier",
													"src": "876:3:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "903:6:7",
															"nodeType": "YulIdentifier",
															"src": "903:6:7"
														}
													],
													"functionName": {
														"name": "round_up_to_mul_of_32",
														"nativeSrc": "881:21:7",
														"nodeType": "YulIdentifier",
														"src": "881:21:7"
													},
													"nativeSrc": "881:29:7",
													"nodeType": "YulFunctionCall",
													"src": "881:29:7"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "872:3:7",
												"nodeType": "YulIdentifier",
												"src": "872:3:7"
											},
											"nativeSrc": "872:39:7",
											"nodeType": "YulFunctionCall",
											"src": "872:39:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "865:3:7",
												"nodeType": "YulIdentifier",
												"src": "865:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "540:377:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "613:5:7",
									"nodeType": "YulTypedName",
									"src": "613:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "620:3:7",
									"nodeType": "YulTypedName",
									"src": "620:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "628:3:7",
									"nodeType": "YulTypedName",
									"src": "628:3:7",
									"type": ""
								}
							],
							"src": "540:377:7"
						},
						{
							"body": {
								"nativeSrc": "1041:195:7",
								"nodeType": "YulBlock",
								"src": "1041:195:7",
								"statements": [
									{
										"nativeSrc": "1051:26:7",
										"nodeType": "YulAssignment",
										"src": "1051:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "1063:9:7",
													"nodeType": "YulIdentifier",
													"src": "1063:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1074:2:7",
													"nodeType": "YulLiteral",
													"src": "1074:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "1059:3:7",
												"nodeType": "YulIdentifier",
												"src": "1059:3:7"
											},
											"nativeSrc": "1059:18:7",
											"nodeType": "YulFunctionCall",
											"src": "1059:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1051:4:7",
												"nodeType": "YulIdentifier",
												"src": "1051:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "1098:9:7",
															"nodeType": "YulIdentifier",
															"src": "1098:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "1109:1:7",
															"nodeType": "YulLiteral",
															"src": "1109:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "1094:3:7",
														"nodeType": "YulIdentifier",
														"src": "1094:3:7"
													},
													"nativeSrc": "1094:17:7",
													"nodeType": "YulFunctionCall",
													"src": "1094:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "1117:4:7",
															"nodeType": "YulIdentifier",
															"src": "1117:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "1123:9:7",
															"nodeType": "YulIdentifier",
															"src": "1123:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "1113:3:7",
														"nodeType": "YulIdentifier",
														"src": "1113:3:7"
													},
													"nativeSrc": "1113:20:7",
													"nodeType": "YulFunctionCall",
													"src": "1113:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "1087:6:7",
												"nodeType": "YulIdentifier",
												"src": "1087:6:7"
											},
											"nativeSrc": "1087:47:7",
											"nodeType": "YulFunctionCall",
											"src": "1087:47:7"
										},
										"nativeSrc": "1087:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "1087:47:7"
									},
									{
										"nativeSrc": "1143:86:7",
										"nodeType": "YulAssignment",
										"src": "1143:86:7",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "1215:6:7",
													"nodeType": "YulIdentifier",
													"src": "1215:6:7"
												},
												{
													"name": "tail",
													"nativeSrc": "1224:4:7",
													"nodeType": "YulIdentifier",
													"src": "1224:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1151:63:7",
												"nodeType": "YulIdentifier",
												"src": "1151:63:7"
											},
											"nativeSrc": "1151:78:7",
											"nodeType": "YulFunctionCall",
											"src": "1151:78:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "1143:4:7",
												"nodeType": "YulIdentifier",
												"src": "1143:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "923:313:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "1013:9:7",
									"nodeType": "YulTypedName",
									"src": "1013:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "1025:6:7",
									"nodeType": "YulTypedName",
									"src": "1025:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "1036:4:7",
									"nodeType": "YulTypedName",
									"src": "1036:4:7",
									"type": ""
								}
							],
							"src": "923:313:7"
						},
						{
							"body": {
								"nativeSrc": "1282:35:7",
								"nodeType": "YulBlock",
								"src": "1282:35:7",
								"statements": [
									{
										"nativeSrc": "1292:19:7",
										"nodeType": "YulAssignment",
										"src": "1292:19:7",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1308:2:7",
													"nodeType": "YulLiteral",
													"src": "1308:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nativeSrc": "1302:5:7",
												"nodeType": "YulIdentifier",
												"src": "1302:5:7"
											},
											"nativeSrc": "1302:9:7",
											"nodeType": "YulFunctionCall",
											"src": "1302:9:7"
										},
										"variableNames": [
											{
												"name": "memPtr",
												"nativeSrc": "1292:6:7",
												"nodeType": "YulIdentifier",
												"src": "1292:6:7"
											}
										]
									}
								]
							},
							"name": "allocate_unbounded",
							"nativeSrc": "1242:75:7",
							"nodeType": "YulFunctionDefinition",
							"returnVariables": [
								{
									"name": "memPtr",
									"nativeSrc": "1275:6:7",
									"nodeType": "YulTypedName",
									"src": "1275:6:7",
									"type": ""
								}
							],
							"src": "1242:75:7"
						},
						{
							"body": {
								"nativeSrc": "1412:28:7",
								"nodeType": "YulBlock",
								"src": "1412:28:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1429:1:7",
													"nodeType": "YulLiteral",
													"src": "1429:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1432:1:7",
													"nodeType": "YulLiteral",
													"src": "1432:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1422:6:7",
												"nodeType": "YulIdentifier",
												"src": "1422:6:7"
											},
											"nativeSrc": "1422:12:7",
											"nodeType": "YulFunctionCall",
											"src": "1422:12:7"
										},
										"nativeSrc": "1422:12:7",
										"nodeType": "YulExpressionStatement",
										"src": "1422:12:7"
									}
								]
							},
							"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
							"nativeSrc": "1323:117:7",
							"nodeType": "YulFunctionDefinition",
							"src": "1323:117:7"
						},
						{
							"body": {
								"nativeSrc": "1535:28:7",
								"nodeType": "YulBlock",
								"src": "1535:28:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "1552:1:7",
													"nodeType": "YulLiteral",
													"src": "1552:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "1555:1:7",
													"nodeType": "YulLiteral",
													"src": "1555:1:7",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "1545:6:7",
												"nodeType": "YulIdentifier",
												"src": "1545:6:7"
											},
											"nativeSrc": "1545:12:7",
											"nodeType": "YulFunctionCall",
											"src": "1545:12:7"
										},
										"nativeSrc": "1545:12:7",
										"nodeType": "YulExpressionStatement",
										"src": "1545:12:7"
									}
								]
							},
							"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
							"nativeSrc": "1446:117:7",
							"nodeType": "YulFunctionDefinition",
							"src": "1446:117:7"
						},
						{
							"body": {
								"nativeSrc": "1614:81:7",
								"nodeType": "YulBlock",
								"src": "1614:81:7",
								"statements": [
									{
										"nativeSrc": "1624:65:7",
										"nodeType": "YulAssignment",
										"src": "1624:65:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1639:5:7",
													"nodeType": "YulIdentifier",
													"src": "1639:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "1646:42:7",
													"nodeType": "YulLiteral",
													"src": "1646:42:7",
													"type": "",
													"value": "0xffffffffffffffffffffffffffffffffffffffff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "1635:3:7",
												"nodeType": "YulIdentifier",
												"src": "1635:3:7"
											},
											"nativeSrc": "1635:54:7",
											"nodeType": "YulFunctionCall",
											"src": "1635:54:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1624:7:7",
												"nodeType": "YulIdentifier",
												"src": "1624:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint160",
							"nativeSrc": "1569:126:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1596:5:7",
									"nodeType": "YulTypedName",
									"src": "1596:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1606:7:7",
									"nodeType": "YulTypedName",
									"src": "1606:7:7",
									"type": ""
								}
							],
							"src": "1569:126:7"
						},
						{
							"body": {
								"nativeSrc": "1746:51:7",
								"nodeType": "YulBlock",
								"src": "1746:51:7",
								"statements": [
									{
										"nativeSrc": "1756:35:7",
										"nodeType": "YulAssignment",
										"src": "1756:35:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "1785:5:7",
													"nodeType": "YulIdentifier",
													"src": "1785:5:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint160",
												"nativeSrc": "1767:17:7",
												"nodeType": "YulIdentifier",
												"src": "1767:17:7"
											},
											"nativeSrc": "1767:24:7",
											"nodeType": "YulFunctionCall",
											"src": "1767:24:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "1756:7:7",
												"nodeType": "YulIdentifier",
												"src": "1756:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_address",
							"nativeSrc": "1701:96:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1728:5:7",
									"nodeType": "YulTypedName",
									"src": "1728:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "1738:7:7",
									"nodeType": "YulTypedName",
									"src": "1738:7:7",
									"type": ""
								}
							],
							"src": "1701:96:7"
						},
						{
							"body": {
								"nativeSrc": "1846:79:7",
								"nodeType": "YulBlock",
								"src": "1846:79:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "1903:16:7",
											"nodeType": "YulBlock",
											"src": "1903:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "1912:1:7",
																"nodeType": "YulLiteral",
																"src": "1912:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "1915:1:7",
																"nodeType": "YulLiteral",
																"src": "1915:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "1905:6:7",
															"nodeType": "YulIdentifier",
															"src": "1905:6:7"
														},
														"nativeSrc": "1905:12:7",
														"nodeType": "YulFunctionCall",
														"src": "1905:12:7"
													},
													"nativeSrc": "1905:12:7",
													"nodeType": "YulExpressionStatement",
													"src": "1905:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "1869:5:7",
															"nodeType": "YulIdentifier",
															"src": "1869:5:7"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "1894:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1894:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_address",
																"nativeSrc": "1876:17:7",
																"nodeType": "YulIdentifier",
																"src": "1876:17:7"
															},
															"nativeSrc": "1876:24:7",
															"nodeType": "YulFunctionCall",
															"src": "1876:24:7"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "1866:2:7",
														"nodeType": "YulIdentifier",
														"src": "1866:2:7"
													},
													"nativeSrc": "1866:35:7",
													"nodeType": "YulFunctionCall",
													"src": "1866:35:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "1859:6:7",
												"nodeType": "YulIdentifier",
												"src": "1859:6:7"
											},
											"nativeSrc": "1859:43:7",
											"nodeType": "YulFunctionCall",
											"src": "1859:43:7"
										},
										"nativeSrc": "1856:63:7",
										"nodeType": "YulIf",
										"src": "1856:63:7"
									}
								]
							},
							"name": "validator_revert_t_address",
							"nativeSrc": "1803:122:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "1839:5:7",
									"nodeType": "YulTypedName",
									"src": "1839:5:7",
									"type": ""
								}
							],
							"src": "1803:122:7"
						},
						{
							"body": {
								"nativeSrc": "1983:87:7",
								"nodeType": "YulBlock",
								"src": "1983:87:7",
								"statements": [
									{
										"nativeSrc": "1993:29:7",
										"nodeType": "YulAssignment",
										"src": "1993:29:7",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2015:6:7",
													"nodeType": "YulIdentifier",
													"src": "2015:6:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2002:12:7",
												"nodeType": "YulIdentifier",
												"src": "2002:12:7"
											},
											"nativeSrc": "2002:20:7",
											"nodeType": "YulFunctionCall",
											"src": "2002:20:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "1993:5:7",
												"nodeType": "YulIdentifier",
												"src": "1993:5:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2058:5:7",
													"nodeType": "YulIdentifier",
													"src": "2058:5:7"
												}
											],
											"functionName": {
												"name": "validator_revert_t_address",
												"nativeSrc": "2031:26:7",
												"nodeType": "YulIdentifier",
												"src": "2031:26:7"
											},
											"nativeSrc": "2031:33:7",
											"nodeType": "YulFunctionCall",
											"src": "2031:33:7"
										},
										"nativeSrc": "2031:33:7",
										"nodeType": "YulExpressionStatement",
										"src": "2031:33:7"
									}
								]
							},
							"name": "abi_decode_t_address",
							"nativeSrc": "1931:139:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "1961:6:7",
									"nodeType": "YulTypedName",
									"src": "1961:6:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "1969:3:7",
									"nodeType": "YulTypedName",
									"src": "1969:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "1977:5:7",
									"nodeType": "YulTypedName",
									"src": "1977:5:7",
									"type": ""
								}
							],
							"src": "1931:139:7"
						},
						{
							"body": {
								"nativeSrc": "2121:32:7",
								"nodeType": "YulBlock",
								"src": "2121:32:7",
								"statements": [
									{
										"nativeSrc": "2131:16:7",
										"nodeType": "YulAssignment",
										"src": "2131:16:7",
										"value": {
											"name": "value",
											"nativeSrc": "2142:5:7",
											"nodeType": "YulIdentifier",
											"src": "2142:5:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "2131:7:7",
												"nodeType": "YulIdentifier",
												"src": "2131:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint256",
							"nativeSrc": "2076:77:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2103:5:7",
									"nodeType": "YulTypedName",
									"src": "2103:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "2113:7:7",
									"nodeType": "YulTypedName",
									"src": "2113:7:7",
									"type": ""
								}
							],
							"src": "2076:77:7"
						},
						{
							"body": {
								"nativeSrc": "2202:79:7",
								"nodeType": "YulBlock",
								"src": "2202:79:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2259:16:7",
											"nodeType": "YulBlock",
											"src": "2259:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "2268:1:7",
																"nodeType": "YulLiteral",
																"src": "2268:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "2271:1:7",
																"nodeType": "YulLiteral",
																"src": "2271:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "2261:6:7",
															"nodeType": "YulIdentifier",
															"src": "2261:6:7"
														},
														"nativeSrc": "2261:12:7",
														"nodeType": "YulFunctionCall",
														"src": "2261:12:7"
													},
													"nativeSrc": "2261:12:7",
													"nodeType": "YulExpressionStatement",
													"src": "2261:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2225:5:7",
															"nodeType": "YulIdentifier",
															"src": "2225:5:7"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "2250:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2250:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_uint256",
																"nativeSrc": "2232:17:7",
																"nodeType": "YulIdentifier",
																"src": "2232:17:7"
															},
															"nativeSrc": "2232:24:7",
															"nodeType": "YulFunctionCall",
															"src": "2232:24:7"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "2222:2:7",
														"nodeType": "YulIdentifier",
														"src": "2222:2:7"
													},
													"nativeSrc": "2222:35:7",
													"nodeType": "YulFunctionCall",
													"src": "2222:35:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2215:6:7",
												"nodeType": "YulIdentifier",
												"src": "2215:6:7"
											},
											"nativeSrc": "2215:43:7",
											"nodeType": "YulFunctionCall",
											"src": "2215:43:7"
										},
										"nativeSrc": "2212:63:7",
										"nodeType": "YulIf",
										"src": "2212:63:7"
									}
								]
							},
							"name": "validator_revert_t_uint256",
							"nativeSrc": "2159:122:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2195:5:7",
									"nodeType": "YulTypedName",
									"src": "2195:5:7",
									"type": ""
								}
							],
							"src": "2159:122:7"
						},
						{
							"body": {
								"nativeSrc": "2339:87:7",
								"nodeType": "YulBlock",
								"src": "2339:87:7",
								"statements": [
									{
										"nativeSrc": "2349:29:7",
										"nodeType": "YulAssignment",
										"src": "2349:29:7",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "2371:6:7",
													"nodeType": "YulIdentifier",
													"src": "2371:6:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "2358:12:7",
												"nodeType": "YulIdentifier",
												"src": "2358:12:7"
											},
											"nativeSrc": "2358:20:7",
											"nodeType": "YulFunctionCall",
											"src": "2358:20:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "2349:5:7",
												"nodeType": "YulIdentifier",
												"src": "2349:5:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "2414:5:7",
													"nodeType": "YulIdentifier",
													"src": "2414:5:7"
												}
											],
											"functionName": {
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2387:26:7",
												"nodeType": "YulIdentifier",
												"src": "2387:26:7"
											},
											"nativeSrc": "2387:33:7",
											"nodeType": "YulFunctionCall",
											"src": "2387:33:7"
										},
										"nativeSrc": "2387:33:7",
										"nodeType": "YulExpressionStatement",
										"src": "2387:33:7"
									}
								]
							},
							"name": "abi_decode_t_uint256",
							"nativeSrc": "2287:139:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "2317:6:7",
									"nodeType": "YulTypedName",
									"src": "2317:6:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "2325:3:7",
									"nodeType": "YulTypedName",
									"src": "2325:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "2333:5:7",
									"nodeType": "YulTypedName",
									"src": "2333:5:7",
									"type": ""
								}
							],
							"src": "2287:139:7"
						},
						{
							"body": {
								"nativeSrc": "2515:391:7",
								"nodeType": "YulBlock",
								"src": "2515:391:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "2561:83:7",
											"nodeType": "YulBlock",
											"src": "2561:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "2563:77:7",
															"nodeType": "YulIdentifier",
															"src": "2563:77:7"
														},
														"nativeSrc": "2563:79:7",
														"nodeType": "YulFunctionCall",
														"src": "2563:79:7"
													},
													"nativeSrc": "2563:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "2563:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "2536:7:7",
															"nodeType": "YulIdentifier",
															"src": "2536:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "2545:9:7",
															"nodeType": "YulIdentifier",
															"src": "2545:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "2532:3:7",
														"nodeType": "YulIdentifier",
														"src": "2532:3:7"
													},
													"nativeSrc": "2532:23:7",
													"nodeType": "YulFunctionCall",
													"src": "2532:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "2557:2:7",
													"nodeType": "YulLiteral",
													"src": "2557:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "2528:3:7",
												"nodeType": "YulIdentifier",
												"src": "2528:3:7"
											},
											"nativeSrc": "2528:32:7",
											"nodeType": "YulFunctionCall",
											"src": "2528:32:7"
										},
										"nativeSrc": "2525:119:7",
										"nodeType": "YulIf",
										"src": "2525:119:7"
									},
									{
										"nativeSrc": "2654:117:7",
										"nodeType": "YulBlock",
										"src": "2654:117:7",
										"statements": [
											{
												"nativeSrc": "2669:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "2669:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "2683:1:7",
													"nodeType": "YulLiteral",
													"src": "2683:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2673:6:7",
														"nodeType": "YulTypedName",
														"src": "2673:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2698:63:7",
												"nodeType": "YulAssignment",
												"src": "2698:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2733:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2733:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2744:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2744:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2729:3:7",
																"nodeType": "YulIdentifier",
																"src": "2729:3:7"
															},
															"nativeSrc": "2729:22:7",
															"nodeType": "YulFunctionCall",
															"src": "2729:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2753:7:7",
															"nodeType": "YulIdentifier",
															"src": "2753:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "2708:20:7",
														"nodeType": "YulIdentifier",
														"src": "2708:20:7"
													},
													"nativeSrc": "2708:53:7",
													"nodeType": "YulFunctionCall",
													"src": "2708:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "2698:6:7",
														"nodeType": "YulIdentifier",
														"src": "2698:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "2781:118:7",
										"nodeType": "YulBlock",
										"src": "2781:118:7",
										"statements": [
											{
												"nativeSrc": "2796:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "2796:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "2810:2:7",
													"nodeType": "YulLiteral",
													"src": "2810:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "2800:6:7",
														"nodeType": "YulTypedName",
														"src": "2800:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "2826:63:7",
												"nodeType": "YulAssignment",
												"src": "2826:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "2861:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2861:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "2872:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2872:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "2857:3:7",
																"nodeType": "YulIdentifier",
																"src": "2857:3:7"
															},
															"nativeSrc": "2857:22:7",
															"nodeType": "YulFunctionCall",
															"src": "2857:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "2881:7:7",
															"nodeType": "YulIdentifier",
															"src": "2881:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "2836:20:7",
														"nodeType": "YulIdentifier",
														"src": "2836:20:7"
													},
													"nativeSrc": "2836:53:7",
													"nodeType": "YulFunctionCall",
													"src": "2836:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "2826:6:7",
														"nodeType": "YulIdentifier",
														"src": "2826:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nativeSrc": "2432:474:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "2477:9:7",
									"nodeType": "YulTypedName",
									"src": "2477:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "2488:7:7",
									"nodeType": "YulTypedName",
									"src": "2488:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "2500:6:7",
									"nodeType": "YulTypedName",
									"src": "2500:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "2508:6:7",
									"nodeType": "YulTypedName",
									"src": "2508:6:7",
									"type": ""
								}
							],
							"src": "2432:474:7"
						},
						{
							"body": {
								"nativeSrc": "2954:48:7",
								"nodeType": "YulBlock",
								"src": "2954:48:7",
								"statements": [
									{
										"nativeSrc": "2964:32:7",
										"nodeType": "YulAssignment",
										"src": "2964:32:7",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "2989:5:7",
															"nodeType": "YulIdentifier",
															"src": "2989:5:7"
														}
													],
													"functionName": {
														"name": "iszero",
														"nativeSrc": "2982:6:7",
														"nodeType": "YulIdentifier",
														"src": "2982:6:7"
													},
													"nativeSrc": "2982:13:7",
													"nodeType": "YulFunctionCall",
													"src": "2982:13:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "2975:6:7",
												"nodeType": "YulIdentifier",
												"src": "2975:6:7"
											},
											"nativeSrc": "2975:21:7",
											"nodeType": "YulFunctionCall",
											"src": "2975:21:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "2964:7:7",
												"nodeType": "YulIdentifier",
												"src": "2964:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_bool",
							"nativeSrc": "2912:90:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "2936:5:7",
									"nodeType": "YulTypedName",
									"src": "2936:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "2946:7:7",
									"nodeType": "YulTypedName",
									"src": "2946:7:7",
									"type": ""
								}
							],
							"src": "2912:90:7"
						},
						{
							"body": {
								"nativeSrc": "3067:50:7",
								"nodeType": "YulBlock",
								"src": "3067:50:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "3084:3:7",
													"nodeType": "YulIdentifier",
													"src": "3084:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "3104:5:7",
															"nodeType": "YulIdentifier",
															"src": "3104:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_bool",
														"nativeSrc": "3089:14:7",
														"nodeType": "YulIdentifier",
														"src": "3089:14:7"
													},
													"nativeSrc": "3089:21:7",
													"nodeType": "YulFunctionCall",
													"src": "3089:21:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "3077:6:7",
												"nodeType": "YulIdentifier",
												"src": "3077:6:7"
											},
											"nativeSrc": "3077:34:7",
											"nodeType": "YulFunctionCall",
											"src": "3077:34:7"
										},
										"nativeSrc": "3077:34:7",
										"nodeType": "YulExpressionStatement",
										"src": "3077:34:7"
									}
								]
							},
							"name": "abi_encode_t_bool_to_t_bool_fromStack",
							"nativeSrc": "3008:109:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "3055:5:7",
									"nodeType": "YulTypedName",
									"src": "3055:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "3062:3:7",
									"nodeType": "YulTypedName",
									"src": "3062:3:7",
									"type": ""
								}
							],
							"src": "3008:109:7"
						},
						{
							"body": {
								"nativeSrc": "3215:118:7",
								"nodeType": "YulBlock",
								"src": "3215:118:7",
								"statements": [
									{
										"nativeSrc": "3225:26:7",
										"nodeType": "YulAssignment",
										"src": "3225:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "3237:9:7",
													"nodeType": "YulIdentifier",
													"src": "3237:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "3248:2:7",
													"nodeType": "YulLiteral",
													"src": "3248:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "3233:3:7",
												"nodeType": "YulIdentifier",
												"src": "3233:3:7"
											},
											"nativeSrc": "3233:18:7",
											"nodeType": "YulFunctionCall",
											"src": "3233:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "3225:4:7",
												"nodeType": "YulIdentifier",
												"src": "3225:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "3299:6:7",
													"nodeType": "YulIdentifier",
													"src": "3299:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "3312:9:7",
															"nodeType": "YulIdentifier",
															"src": "3312:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "3323:1:7",
															"nodeType": "YulLiteral",
															"src": "3323:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "3308:3:7",
														"nodeType": "YulIdentifier",
														"src": "3308:3:7"
													},
													"nativeSrc": "3308:17:7",
													"nodeType": "YulFunctionCall",
													"src": "3308:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3261:37:7",
												"nodeType": "YulIdentifier",
												"src": "3261:37:7"
											},
											"nativeSrc": "3261:65:7",
											"nodeType": "YulFunctionCall",
											"src": "3261:65:7"
										},
										"nativeSrc": "3261:65:7",
										"nodeType": "YulExpressionStatement",
										"src": "3261:65:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nativeSrc": "3123:210:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3187:9:7",
									"nodeType": "YulTypedName",
									"src": "3187:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "3199:6:7",
									"nodeType": "YulTypedName",
									"src": "3199:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "3210:4:7",
									"nodeType": "YulTypedName",
									"src": "3210:4:7",
									"type": ""
								}
							],
							"src": "3123:210:7"
						},
						{
							"body": {
								"nativeSrc": "3379:76:7",
								"nodeType": "YulBlock",
								"src": "3379:76:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "3433:16:7",
											"nodeType": "YulBlock",
											"src": "3433:16:7",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nativeSrc": "3442:1:7",
																"nodeType": "YulLiteral",
																"src": "3442:1:7",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nativeSrc": "3445:1:7",
																"nodeType": "YulLiteral",
																"src": "3445:1:7",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nativeSrc": "3435:6:7",
															"nodeType": "YulIdentifier",
															"src": "3435:6:7"
														},
														"nativeSrc": "3435:12:7",
														"nodeType": "YulFunctionCall",
														"src": "3435:12:7"
													},
													"nativeSrc": "3435:12:7",
													"nodeType": "YulExpressionStatement",
													"src": "3435:12:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "3402:5:7",
															"nodeType": "YulIdentifier",
															"src": "3402:5:7"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nativeSrc": "3424:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3424:5:7"
																}
															],
															"functionName": {
																"name": "cleanup_t_bool",
																"nativeSrc": "3409:14:7",
																"nodeType": "YulIdentifier",
																"src": "3409:14:7"
															},
															"nativeSrc": "3409:21:7",
															"nodeType": "YulFunctionCall",
															"src": "3409:21:7"
														}
													],
													"functionName": {
														"name": "eq",
														"nativeSrc": "3399:2:7",
														"nodeType": "YulIdentifier",
														"src": "3399:2:7"
													},
													"nativeSrc": "3399:32:7",
													"nodeType": "YulFunctionCall",
													"src": "3399:32:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "3392:6:7",
												"nodeType": "YulIdentifier",
												"src": "3392:6:7"
											},
											"nativeSrc": "3392:40:7",
											"nodeType": "YulFunctionCall",
											"src": "3392:40:7"
										},
										"nativeSrc": "3389:60:7",
										"nodeType": "YulIf",
										"src": "3389:60:7"
									}
								]
							},
							"name": "validator_revert_t_bool",
							"nativeSrc": "3339:116:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "3372:5:7",
									"nodeType": "YulTypedName",
									"src": "3372:5:7",
									"type": ""
								}
							],
							"src": "3339:116:7"
						},
						{
							"body": {
								"nativeSrc": "3510:84:7",
								"nodeType": "YulBlock",
								"src": "3510:84:7",
								"statements": [
									{
										"nativeSrc": "3520:29:7",
										"nodeType": "YulAssignment",
										"src": "3520:29:7",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nativeSrc": "3542:6:7",
													"nodeType": "YulIdentifier",
													"src": "3542:6:7"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nativeSrc": "3529:12:7",
												"nodeType": "YulIdentifier",
												"src": "3529:12:7"
											},
											"nativeSrc": "3529:20:7",
											"nodeType": "YulFunctionCall",
											"src": "3529:20:7"
										},
										"variableNames": [
											{
												"name": "value",
												"nativeSrc": "3520:5:7",
												"nodeType": "YulIdentifier",
												"src": "3520:5:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "3582:5:7",
													"nodeType": "YulIdentifier",
													"src": "3582:5:7"
												}
											],
											"functionName": {
												"name": "validator_revert_t_bool",
												"nativeSrc": "3558:23:7",
												"nodeType": "YulIdentifier",
												"src": "3558:23:7"
											},
											"nativeSrc": "3558:30:7",
											"nodeType": "YulFunctionCall",
											"src": "3558:30:7"
										},
										"nativeSrc": "3558:30:7",
										"nodeType": "YulExpressionStatement",
										"src": "3558:30:7"
									}
								]
							},
							"name": "abi_decode_t_bool",
							"nativeSrc": "3461:133:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nativeSrc": "3488:6:7",
									"nodeType": "YulTypedName",
									"src": "3488:6:7",
									"type": ""
								},
								{
									"name": "end",
									"nativeSrc": "3496:3:7",
									"nodeType": "YulTypedName",
									"src": "3496:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nativeSrc": "3504:5:7",
									"nodeType": "YulTypedName",
									"src": "3504:5:7",
									"type": ""
								}
							],
							"src": "3461:133:7"
						},
						{
							"body": {
								"nativeSrc": "3680:388:7",
								"nodeType": "YulBlock",
								"src": "3680:388:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "3726:83:7",
											"nodeType": "YulBlock",
											"src": "3726:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "3728:77:7",
															"nodeType": "YulIdentifier",
															"src": "3728:77:7"
														},
														"nativeSrc": "3728:79:7",
														"nodeType": "YulFunctionCall",
														"src": "3728:79:7"
													},
													"nativeSrc": "3728:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "3728:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "3701:7:7",
															"nodeType": "YulIdentifier",
															"src": "3701:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "3710:9:7",
															"nodeType": "YulIdentifier",
															"src": "3710:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "3697:3:7",
														"nodeType": "YulIdentifier",
														"src": "3697:3:7"
													},
													"nativeSrc": "3697:23:7",
													"nodeType": "YulFunctionCall",
													"src": "3697:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "3722:2:7",
													"nodeType": "YulLiteral",
													"src": "3722:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "3693:3:7",
												"nodeType": "YulIdentifier",
												"src": "3693:3:7"
											},
											"nativeSrc": "3693:32:7",
											"nodeType": "YulFunctionCall",
											"src": "3693:32:7"
										},
										"nativeSrc": "3690:119:7",
										"nodeType": "YulIf",
										"src": "3690:119:7"
									},
									{
										"nativeSrc": "3819:117:7",
										"nodeType": "YulBlock",
										"src": "3819:117:7",
										"statements": [
											{
												"nativeSrc": "3834:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "3834:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "3848:1:7",
													"nodeType": "YulLiteral",
													"src": "3848:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "3838:6:7",
														"nodeType": "YulTypedName",
														"src": "3838:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "3863:63:7",
												"nodeType": "YulAssignment",
												"src": "3863:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "3898:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3898:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "3909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "3894:3:7",
																"nodeType": "YulIdentifier",
																"src": "3894:3:7"
															},
															"nativeSrc": "3894:22:7",
															"nodeType": "YulFunctionCall",
															"src": "3894:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "3918:7:7",
															"nodeType": "YulIdentifier",
															"src": "3918:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "3873:20:7",
														"nodeType": "YulIdentifier",
														"src": "3873:20:7"
													},
													"nativeSrc": "3873:53:7",
													"nodeType": "YulFunctionCall",
													"src": "3873:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "3863:6:7",
														"nodeType": "YulIdentifier",
														"src": "3863:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "3946:115:7",
										"nodeType": "YulBlock",
										"src": "3946:115:7",
										"statements": [
											{
												"nativeSrc": "3961:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "3961:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "3975:2:7",
													"nodeType": "YulLiteral",
													"src": "3975:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "3965:6:7",
														"nodeType": "YulTypedName",
														"src": "3965:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "3991:60:7",
												"nodeType": "YulAssignment",
												"src": "3991:60:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4023:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4023:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4034:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4034:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4019:3:7",
																"nodeType": "YulIdentifier",
																"src": "4019:3:7"
															},
															"nativeSrc": "4019:22:7",
															"nodeType": "YulFunctionCall",
															"src": "4019:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4043:7:7",
															"nodeType": "YulIdentifier",
															"src": "4043:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_bool",
														"nativeSrc": "4001:17:7",
														"nodeType": "YulIdentifier",
														"src": "4001:17:7"
													},
													"nativeSrc": "4001:50:7",
													"nodeType": "YulFunctionCall",
													"src": "4001:50:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "3991:6:7",
														"nodeType": "YulIdentifier",
														"src": "3991:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_bool",
							"nativeSrc": "3600:468:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "3642:9:7",
									"nodeType": "YulTypedName",
									"src": "3642:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "3653:7:7",
									"nodeType": "YulTypedName",
									"src": "3653:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "3665:6:7",
									"nodeType": "YulTypedName",
									"src": "3665:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "3673:6:7",
									"nodeType": "YulTypedName",
									"src": "3673:6:7",
									"type": ""
								}
							],
							"src": "3600:468:7"
						},
						{
							"body": {
								"nativeSrc": "4139:53:7",
								"nodeType": "YulBlock",
								"src": "4139:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "4156:3:7",
													"nodeType": "YulIdentifier",
													"src": "4156:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "4179:5:7",
															"nodeType": "YulIdentifier",
															"src": "4179:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint256",
														"nativeSrc": "4161:17:7",
														"nodeType": "YulIdentifier",
														"src": "4161:17:7"
													},
													"nativeSrc": "4161:24:7",
													"nodeType": "YulFunctionCall",
													"src": "4161:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "4149:6:7",
												"nodeType": "YulIdentifier",
												"src": "4149:6:7"
											},
											"nativeSrc": "4149:37:7",
											"nodeType": "YulFunctionCall",
											"src": "4149:37:7"
										},
										"nativeSrc": "4149:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "4149:37:7"
									}
								]
							},
							"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
							"nativeSrc": "4074:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "4127:5:7",
									"nodeType": "YulTypedName",
									"src": "4127:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "4134:3:7",
									"nodeType": "YulTypedName",
									"src": "4134:3:7",
									"type": ""
								}
							],
							"src": "4074:118:7"
						},
						{
							"body": {
								"nativeSrc": "4296:124:7",
								"nodeType": "YulBlock",
								"src": "4296:124:7",
								"statements": [
									{
										"nativeSrc": "4306:26:7",
										"nodeType": "YulAssignment",
										"src": "4306:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "4318:9:7",
													"nodeType": "YulIdentifier",
													"src": "4318:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4329:2:7",
													"nodeType": "YulLiteral",
													"src": "4329:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "4314:3:7",
												"nodeType": "YulIdentifier",
												"src": "4314:3:7"
											},
											"nativeSrc": "4314:18:7",
											"nodeType": "YulFunctionCall",
											"src": "4314:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "4306:4:7",
												"nodeType": "YulIdentifier",
												"src": "4306:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "4386:6:7",
													"nodeType": "YulIdentifier",
													"src": "4386:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "4399:9:7",
															"nodeType": "YulIdentifier",
															"src": "4399:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "4410:1:7",
															"nodeType": "YulLiteral",
															"src": "4410:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "4395:3:7",
														"nodeType": "YulIdentifier",
														"src": "4395:3:7"
													},
													"nativeSrc": "4395:17:7",
													"nodeType": "YulFunctionCall",
													"src": "4395:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4342:43:7",
												"nodeType": "YulIdentifier",
												"src": "4342:43:7"
											},
											"nativeSrc": "4342:71:7",
											"nodeType": "YulFunctionCall",
											"src": "4342:71:7"
										},
										"nativeSrc": "4342:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "4342:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nativeSrc": "4198:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4268:9:7",
									"nodeType": "YulTypedName",
									"src": "4268:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "4280:6:7",
									"nodeType": "YulTypedName",
									"src": "4280:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "4291:4:7",
									"nodeType": "YulTypedName",
									"src": "4291:4:7",
									"type": ""
								}
							],
							"src": "4198:222:7"
						},
						{
							"body": {
								"nativeSrc": "4492:263:7",
								"nodeType": "YulBlock",
								"src": "4492:263:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "4538:83:7",
											"nodeType": "YulBlock",
											"src": "4538:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "4540:77:7",
															"nodeType": "YulIdentifier",
															"src": "4540:77:7"
														},
														"nativeSrc": "4540:79:7",
														"nodeType": "YulFunctionCall",
														"src": "4540:79:7"
													},
													"nativeSrc": "4540:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "4540:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "4513:7:7",
															"nodeType": "YulIdentifier",
															"src": "4513:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "4522:9:7",
															"nodeType": "YulIdentifier",
															"src": "4522:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4509:3:7",
														"nodeType": "YulIdentifier",
														"src": "4509:3:7"
													},
													"nativeSrc": "4509:23:7",
													"nodeType": "YulFunctionCall",
													"src": "4509:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4534:2:7",
													"nodeType": "YulLiteral",
													"src": "4534:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "4505:3:7",
												"nodeType": "YulIdentifier",
												"src": "4505:3:7"
											},
											"nativeSrc": "4505:32:7",
											"nodeType": "YulFunctionCall",
											"src": "4505:32:7"
										},
										"nativeSrc": "4502:119:7",
										"nodeType": "YulIf",
										"src": "4502:119:7"
									},
									{
										"nativeSrc": "4631:117:7",
										"nodeType": "YulBlock",
										"src": "4631:117:7",
										"statements": [
											{
												"nativeSrc": "4646:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "4646:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "4660:1:7",
													"nodeType": "YulLiteral",
													"src": "4660:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "4650:6:7",
														"nodeType": "YulTypedName",
														"src": "4650:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "4675:63:7",
												"nodeType": "YulAssignment",
												"src": "4675:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "4710:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4710:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "4721:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4721:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "4706:3:7",
																"nodeType": "YulIdentifier",
																"src": "4706:3:7"
															},
															"nativeSrc": "4706:22:7",
															"nodeType": "YulFunctionCall",
															"src": "4706:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "4730:7:7",
															"nodeType": "YulIdentifier",
															"src": "4730:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "4685:20:7",
														"nodeType": "YulIdentifier",
														"src": "4685:20:7"
													},
													"nativeSrc": "4685:53:7",
													"nodeType": "YulFunctionCall",
													"src": "4685:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "4675:6:7",
														"nodeType": "YulIdentifier",
														"src": "4675:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nativeSrc": "4426:329:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4462:9:7",
									"nodeType": "YulTypedName",
									"src": "4462:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "4473:7:7",
									"nodeType": "YulTypedName",
									"src": "4473:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "4485:6:7",
									"nodeType": "YulTypedName",
									"src": "4485:6:7",
									"type": ""
								}
							],
							"src": "4426:329:7"
						},
						{
							"body": {
								"nativeSrc": "4861:519:7",
								"nodeType": "YulBlock",
								"src": "4861:519:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "4907:83:7",
											"nodeType": "YulBlock",
											"src": "4907:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "4909:77:7",
															"nodeType": "YulIdentifier",
															"src": "4909:77:7"
														},
														"nativeSrc": "4909:79:7",
														"nodeType": "YulFunctionCall",
														"src": "4909:79:7"
													},
													"nativeSrc": "4909:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "4909:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "4882:7:7",
															"nodeType": "YulIdentifier",
															"src": "4882:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "4891:9:7",
															"nodeType": "YulIdentifier",
															"src": "4891:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "4878:3:7",
														"nodeType": "YulIdentifier",
														"src": "4878:3:7"
													},
													"nativeSrc": "4878:23:7",
													"nodeType": "YulFunctionCall",
													"src": "4878:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "4903:2:7",
													"nodeType": "YulLiteral",
													"src": "4903:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "4874:3:7",
												"nodeType": "YulIdentifier",
												"src": "4874:3:7"
											},
											"nativeSrc": "4874:32:7",
											"nodeType": "YulFunctionCall",
											"src": "4874:32:7"
										},
										"nativeSrc": "4871:119:7",
										"nodeType": "YulIf",
										"src": "4871:119:7"
									},
									{
										"nativeSrc": "5000:117:7",
										"nodeType": "YulBlock",
										"src": "5000:117:7",
										"statements": [
											{
												"nativeSrc": "5015:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "5015:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "5029:1:7",
													"nodeType": "YulLiteral",
													"src": "5029:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5019:6:7",
														"nodeType": "YulTypedName",
														"src": "5019:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "5044:63:7",
												"nodeType": "YulAssignment",
												"src": "5044:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5079:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5079:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5090:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5075:3:7",
																"nodeType": "YulIdentifier",
																"src": "5075:3:7"
															},
															"nativeSrc": "5075:22:7",
															"nodeType": "YulFunctionCall",
															"src": "5075:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5099:7:7",
															"nodeType": "YulIdentifier",
															"src": "5099:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "5054:20:7",
														"nodeType": "YulIdentifier",
														"src": "5054:20:7"
													},
													"nativeSrc": "5054:53:7",
													"nodeType": "YulFunctionCall",
													"src": "5054:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "5044:6:7",
														"nodeType": "YulIdentifier",
														"src": "5044:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "5127:118:7",
										"nodeType": "YulBlock",
										"src": "5127:118:7",
										"statements": [
											{
												"nativeSrc": "5142:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "5142:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "5156:2:7",
													"nodeType": "YulLiteral",
													"src": "5156:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5146:6:7",
														"nodeType": "YulTypedName",
														"src": "5146:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "5172:63:7",
												"nodeType": "YulAssignment",
												"src": "5172:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5207:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5207:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5218:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5203:3:7",
																"nodeType": "YulIdentifier",
																"src": "5203:3:7"
															},
															"nativeSrc": "5203:22:7",
															"nodeType": "YulFunctionCall",
															"src": "5203:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5227:7:7",
															"nodeType": "YulIdentifier",
															"src": "5227:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "5182:20:7",
														"nodeType": "YulIdentifier",
														"src": "5182:20:7"
													},
													"nativeSrc": "5182:53:7",
													"nodeType": "YulFunctionCall",
													"src": "5182:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "5172:6:7",
														"nodeType": "YulIdentifier",
														"src": "5172:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "5255:118:7",
										"nodeType": "YulBlock",
										"src": "5255:118:7",
										"statements": [
											{
												"nativeSrc": "5270:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "5270:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "5284:2:7",
													"nodeType": "YulLiteral",
													"src": "5284:2:7",
													"type": "",
													"value": "64"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "5274:6:7",
														"nodeType": "YulTypedName",
														"src": "5274:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "5300:63:7",
												"nodeType": "YulAssignment",
												"src": "5300:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "5335:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5335:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "5346:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "5331:3:7",
																"nodeType": "YulIdentifier",
																"src": "5331:3:7"
															},
															"nativeSrc": "5331:22:7",
															"nodeType": "YulFunctionCall",
															"src": "5331:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "5355:7:7",
															"nodeType": "YulIdentifier",
															"src": "5355:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "5310:20:7",
														"nodeType": "YulIdentifier",
														"src": "5310:20:7"
													},
													"nativeSrc": "5310:53:7",
													"nodeType": "YulFunctionCall",
													"src": "5310:53:7"
												},
												"variableNames": [
													{
														"name": "value2",
														"nativeSrc": "5300:6:7",
														"nodeType": "YulIdentifier",
														"src": "5300:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nativeSrc": "4761:619:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "4815:9:7",
									"nodeType": "YulTypedName",
									"src": "4815:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "4826:7:7",
									"nodeType": "YulTypedName",
									"src": "4826:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "4838:6:7",
									"nodeType": "YulTypedName",
									"src": "4838:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "4846:6:7",
									"nodeType": "YulTypedName",
									"src": "4846:6:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "4854:6:7",
									"nodeType": "YulTypedName",
									"src": "4854:6:7",
									"type": ""
								}
							],
							"src": "4761:619:7"
						},
						{
							"body": {
								"nativeSrc": "5429:43:7",
								"nodeType": "YulBlock",
								"src": "5429:43:7",
								"statements": [
									{
										"nativeSrc": "5439:27:7",
										"nodeType": "YulAssignment",
										"src": "5439:27:7",
										"value": {
											"arguments": [
												{
													"name": "value",
													"nativeSrc": "5454:5:7",
													"nodeType": "YulIdentifier",
													"src": "5454:5:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5461:4:7",
													"nodeType": "YulLiteral",
													"src": "5461:4:7",
													"type": "",
													"value": "0xff"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "5450:3:7",
												"nodeType": "YulIdentifier",
												"src": "5450:3:7"
											},
											"nativeSrc": "5450:16:7",
											"nodeType": "YulFunctionCall",
											"src": "5450:16:7"
										},
										"variableNames": [
											{
												"name": "cleaned",
												"nativeSrc": "5439:7:7",
												"nodeType": "YulIdentifier",
												"src": "5439:7:7"
											}
										]
									}
								]
							},
							"name": "cleanup_t_uint8",
							"nativeSrc": "5386:86:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5411:5:7",
									"nodeType": "YulTypedName",
									"src": "5411:5:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "cleaned",
									"nativeSrc": "5421:7:7",
									"nodeType": "YulTypedName",
									"src": "5421:7:7",
									"type": ""
								}
							],
							"src": "5386:86:7"
						},
						{
							"body": {
								"nativeSrc": "5539:51:7",
								"nodeType": "YulBlock",
								"src": "5539:51:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "5556:3:7",
													"nodeType": "YulIdentifier",
													"src": "5556:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "5577:5:7",
															"nodeType": "YulIdentifier",
															"src": "5577:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_uint8",
														"nativeSrc": "5561:15:7",
														"nodeType": "YulIdentifier",
														"src": "5561:15:7"
													},
													"nativeSrc": "5561:22:7",
													"nodeType": "YulFunctionCall",
													"src": "5561:22:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "5549:6:7",
												"nodeType": "YulIdentifier",
												"src": "5549:6:7"
											},
											"nativeSrc": "5549:35:7",
											"nodeType": "YulFunctionCall",
											"src": "5549:35:7"
										},
										"nativeSrc": "5549:35:7",
										"nodeType": "YulExpressionStatement",
										"src": "5549:35:7"
									}
								]
							},
							"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
							"nativeSrc": "5478:112:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "5527:5:7",
									"nodeType": "YulTypedName",
									"src": "5527:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "5534:3:7",
									"nodeType": "YulTypedName",
									"src": "5534:3:7",
									"type": ""
								}
							],
							"src": "5478:112:7"
						},
						{
							"body": {
								"nativeSrc": "5690:120:7",
								"nodeType": "YulBlock",
								"src": "5690:120:7",
								"statements": [
									{
										"nativeSrc": "5700:26:7",
										"nodeType": "YulAssignment",
										"src": "5700:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "5712:9:7",
													"nodeType": "YulIdentifier",
													"src": "5712:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5723:2:7",
													"nodeType": "YulLiteral",
													"src": "5723:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "5708:3:7",
												"nodeType": "YulIdentifier",
												"src": "5708:3:7"
											},
											"nativeSrc": "5708:18:7",
											"nodeType": "YulFunctionCall",
											"src": "5708:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "5700:4:7",
												"nodeType": "YulIdentifier",
												"src": "5700:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "5776:6:7",
													"nodeType": "YulIdentifier",
													"src": "5776:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "5789:9:7",
															"nodeType": "YulIdentifier",
															"src": "5789:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "5800:1:7",
															"nodeType": "YulLiteral",
															"src": "5800:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "5785:3:7",
														"nodeType": "YulIdentifier",
														"src": "5785:3:7"
													},
													"nativeSrc": "5785:17:7",
													"nodeType": "YulFunctionCall",
													"src": "5785:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5736:39:7",
												"nodeType": "YulIdentifier",
												"src": "5736:39:7"
											},
											"nativeSrc": "5736:67:7",
											"nodeType": "YulFunctionCall",
											"src": "5736:67:7"
										},
										"nativeSrc": "5736:67:7",
										"nodeType": "YulExpressionStatement",
										"src": "5736:67:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nativeSrc": "5596:214:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5662:9:7",
									"nodeType": "YulTypedName",
									"src": "5662:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "5674:6:7",
									"nodeType": "YulTypedName",
									"src": "5674:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "5685:4:7",
									"nodeType": "YulTypedName",
									"src": "5685:4:7",
									"type": ""
								}
							],
							"src": "5596:214:7"
						},
						{
							"body": {
								"nativeSrc": "5933:648:7",
								"nodeType": "YulBlock",
								"src": "5933:648:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "5980:83:7",
											"nodeType": "YulBlock",
											"src": "5980:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "5982:77:7",
															"nodeType": "YulIdentifier",
															"src": "5982:77:7"
														},
														"nativeSrc": "5982:79:7",
														"nodeType": "YulFunctionCall",
														"src": "5982:79:7"
													},
													"nativeSrc": "5982:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "5982:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "5954:7:7",
															"nodeType": "YulIdentifier",
															"src": "5954:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "5963:9:7",
															"nodeType": "YulIdentifier",
															"src": "5963:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "5950:3:7",
														"nodeType": "YulIdentifier",
														"src": "5950:3:7"
													},
													"nativeSrc": "5950:23:7",
													"nodeType": "YulFunctionCall",
													"src": "5950:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "5975:3:7",
													"nodeType": "YulLiteral",
													"src": "5975:3:7",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "5946:3:7",
												"nodeType": "YulIdentifier",
												"src": "5946:3:7"
											},
											"nativeSrc": "5946:33:7",
											"nodeType": "YulFunctionCall",
											"src": "5946:33:7"
										},
										"nativeSrc": "5943:120:7",
										"nodeType": "YulIf",
										"src": "5943:120:7"
									},
									{
										"nativeSrc": "6073:117:7",
										"nodeType": "YulBlock",
										"src": "6073:117:7",
										"statements": [
											{
												"nativeSrc": "6088:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "6088:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "6102:1:7",
													"nodeType": "YulLiteral",
													"src": "6102:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6092:6:7",
														"nodeType": "YulTypedName",
														"src": "6092:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6117:63:7",
												"nodeType": "YulAssignment",
												"src": "6117:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6152:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6152:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6163:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6163:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6148:3:7",
																"nodeType": "YulIdentifier",
																"src": "6148:3:7"
															},
															"nativeSrc": "6148:22:7",
															"nodeType": "YulFunctionCall",
															"src": "6148:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6172:7:7",
															"nodeType": "YulIdentifier",
															"src": "6172:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "6127:20:7",
														"nodeType": "YulIdentifier",
														"src": "6127:20:7"
													},
													"nativeSrc": "6127:53:7",
													"nodeType": "YulFunctionCall",
													"src": "6127:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "6117:6:7",
														"nodeType": "YulIdentifier",
														"src": "6117:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "6200:118:7",
										"nodeType": "YulBlock",
										"src": "6200:118:7",
										"statements": [
											{
												"nativeSrc": "6215:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "6215:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "6229:2:7",
													"nodeType": "YulLiteral",
													"src": "6229:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6219:6:7",
														"nodeType": "YulTypedName",
														"src": "6219:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6245:63:7",
												"nodeType": "YulAssignment",
												"src": "6245:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6280:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6280:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6291:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6276:3:7",
																"nodeType": "YulIdentifier",
																"src": "6276:3:7"
															},
															"nativeSrc": "6276:22:7",
															"nodeType": "YulFunctionCall",
															"src": "6276:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6300:7:7",
															"nodeType": "YulIdentifier",
															"src": "6300:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "6255:20:7",
														"nodeType": "YulIdentifier",
														"src": "6255:20:7"
													},
													"nativeSrc": "6255:53:7",
													"nodeType": "YulFunctionCall",
													"src": "6255:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "6245:6:7",
														"nodeType": "YulIdentifier",
														"src": "6245:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "6328:118:7",
										"nodeType": "YulBlock",
										"src": "6328:118:7",
										"statements": [
											{
												"nativeSrc": "6343:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "6343:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "6357:2:7",
													"nodeType": "YulLiteral",
													"src": "6357:2:7",
													"type": "",
													"value": "64"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6347:6:7",
														"nodeType": "YulTypedName",
														"src": "6347:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6373:63:7",
												"nodeType": "YulAssignment",
												"src": "6373:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6408:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6408:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6419:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6404:3:7",
																"nodeType": "YulIdentifier",
																"src": "6404:3:7"
															},
															"nativeSrc": "6404:22:7",
															"nodeType": "YulFunctionCall",
															"src": "6404:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6428:7:7",
															"nodeType": "YulIdentifier",
															"src": "6428:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "6383:20:7",
														"nodeType": "YulIdentifier",
														"src": "6383:20:7"
													},
													"nativeSrc": "6383:53:7",
													"nodeType": "YulFunctionCall",
													"src": "6383:53:7"
												},
												"variableNames": [
													{
														"name": "value2",
														"nativeSrc": "6373:6:7",
														"nodeType": "YulIdentifier",
														"src": "6373:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "6456:118:7",
										"nodeType": "YulBlock",
										"src": "6456:118:7",
										"statements": [
											{
												"nativeSrc": "6471:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "6471:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "6485:2:7",
													"nodeType": "YulLiteral",
													"src": "6485:2:7",
													"type": "",
													"value": "96"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "6475:6:7",
														"nodeType": "YulTypedName",
														"src": "6475:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "6501:63:7",
												"nodeType": "YulAssignment",
												"src": "6501:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "6536:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6536:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "6547:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "6532:3:7",
																"nodeType": "YulIdentifier",
																"src": "6532:3:7"
															},
															"nativeSrc": "6532:22:7",
															"nodeType": "YulFunctionCall",
															"src": "6532:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "6556:7:7",
															"nodeType": "YulIdentifier",
															"src": "6556:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "6511:20:7",
														"nodeType": "YulIdentifier",
														"src": "6511:20:7"
													},
													"nativeSrc": "6511:53:7",
													"nodeType": "YulFunctionCall",
													"src": "6511:53:7"
												},
												"variableNames": [
													{
														"name": "value3",
														"nativeSrc": "6501:6:7",
														"nodeType": "YulIdentifier",
														"src": "6501:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
							"nativeSrc": "5816:765:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "5879:9:7",
									"nodeType": "YulTypedName",
									"src": "5879:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "5890:7:7",
									"nodeType": "YulTypedName",
									"src": "5890:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "5902:6:7",
									"nodeType": "YulTypedName",
									"src": "5902:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "5910:6:7",
									"nodeType": "YulTypedName",
									"src": "5910:6:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "5918:6:7",
									"nodeType": "YulTypedName",
									"src": "5918:6:7",
									"type": ""
								},
								{
									"name": "value3",
									"nativeSrc": "5926:6:7",
									"nodeType": "YulTypedName",
									"src": "5926:6:7",
									"type": ""
								}
							],
							"src": "5816:765:7"
						},
						{
							"body": {
								"nativeSrc": "6652:53:7",
								"nodeType": "YulBlock",
								"src": "6652:53:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "6669:3:7",
													"nodeType": "YulIdentifier",
													"src": "6669:3:7"
												},
												{
													"arguments": [
														{
															"name": "value",
															"nativeSrc": "6692:5:7",
															"nodeType": "YulIdentifier",
															"src": "6692:5:7"
														}
													],
													"functionName": {
														"name": "cleanup_t_address",
														"nativeSrc": "6674:17:7",
														"nodeType": "YulIdentifier",
														"src": "6674:17:7"
													},
													"nativeSrc": "6674:24:7",
													"nodeType": "YulFunctionCall",
													"src": "6674:24:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "6662:6:7",
												"nodeType": "YulIdentifier",
												"src": "6662:6:7"
											},
											"nativeSrc": "6662:37:7",
											"nodeType": "YulFunctionCall",
											"src": "6662:37:7"
										},
										"nativeSrc": "6662:37:7",
										"nodeType": "YulExpressionStatement",
										"src": "6662:37:7"
									}
								]
							},
							"name": "abi_encode_t_address_to_t_address_fromStack",
							"nativeSrc": "6587:118:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nativeSrc": "6640:5:7",
									"nodeType": "YulTypedName",
									"src": "6640:5:7",
									"type": ""
								},
								{
									"name": "pos",
									"nativeSrc": "6647:3:7",
									"nodeType": "YulTypedName",
									"src": "6647:3:7",
									"type": ""
								}
							],
							"src": "6587:118:7"
						},
						{
							"body": {
								"nativeSrc": "6809:124:7",
								"nodeType": "YulBlock",
								"src": "6809:124:7",
								"statements": [
									{
										"nativeSrc": "6819:26:7",
										"nodeType": "YulAssignment",
										"src": "6819:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "6831:9:7",
													"nodeType": "YulIdentifier",
													"src": "6831:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "6842:2:7",
													"nodeType": "YulLiteral",
													"src": "6842:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "6827:3:7",
												"nodeType": "YulIdentifier",
												"src": "6827:3:7"
											},
											"nativeSrc": "6827:18:7",
											"nodeType": "YulFunctionCall",
											"src": "6827:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "6819:4:7",
												"nodeType": "YulIdentifier",
												"src": "6819:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "6899:6:7",
													"nodeType": "YulIdentifier",
													"src": "6899:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "6912:9:7",
															"nodeType": "YulIdentifier",
															"src": "6912:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "6923:1:7",
															"nodeType": "YulLiteral",
															"src": "6923:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "6908:3:7",
														"nodeType": "YulIdentifier",
														"src": "6908:3:7"
													},
													"nativeSrc": "6908:17:7",
													"nodeType": "YulFunctionCall",
													"src": "6908:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6855:43:7",
												"nodeType": "YulIdentifier",
												"src": "6855:43:7"
											},
											"nativeSrc": "6855:71:7",
											"nodeType": "YulFunctionCall",
											"src": "6855:71:7"
										},
										"nativeSrc": "6855:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "6855:71:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nativeSrc": "6711:222:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6781:9:7",
									"nodeType": "YulTypedName",
									"src": "6781:9:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "6793:6:7",
									"nodeType": "YulTypedName",
									"src": "6793:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "6804:4:7",
									"nodeType": "YulTypedName",
									"src": "6804:4:7",
									"type": ""
								}
							],
							"src": "6711:222:7"
						},
						{
							"body": {
								"nativeSrc": "7022:391:7",
								"nodeType": "YulBlock",
								"src": "7022:391:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "7068:83:7",
											"nodeType": "YulBlock",
											"src": "7068:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "7070:77:7",
															"nodeType": "YulIdentifier",
															"src": "7070:77:7"
														},
														"nativeSrc": "7070:79:7",
														"nodeType": "YulFunctionCall",
														"src": "7070:79:7"
													},
													"nativeSrc": "7070:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "7070:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "7043:7:7",
															"nodeType": "YulIdentifier",
															"src": "7043:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "7052:9:7",
															"nodeType": "YulIdentifier",
															"src": "7052:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7039:3:7",
														"nodeType": "YulIdentifier",
														"src": "7039:3:7"
													},
													"nativeSrc": "7039:23:7",
													"nodeType": "YulFunctionCall",
													"src": "7039:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "7064:2:7",
													"nodeType": "YulLiteral",
													"src": "7064:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "7035:3:7",
												"nodeType": "YulIdentifier",
												"src": "7035:3:7"
											},
											"nativeSrc": "7035:32:7",
											"nodeType": "YulFunctionCall",
											"src": "7035:32:7"
										},
										"nativeSrc": "7032:119:7",
										"nodeType": "YulIf",
										"src": "7032:119:7"
									},
									{
										"nativeSrc": "7161:117:7",
										"nodeType": "YulBlock",
										"src": "7161:117:7",
										"statements": [
											{
												"nativeSrc": "7176:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "7176:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7190:1:7",
													"nodeType": "YulLiteral",
													"src": "7190:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "7180:6:7",
														"nodeType": "YulTypedName",
														"src": "7180:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "7205:63:7",
												"nodeType": "YulAssignment",
												"src": "7205:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "7240:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7240:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "7251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7251:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "7236:3:7",
																"nodeType": "YulIdentifier",
																"src": "7236:3:7"
															},
															"nativeSrc": "7236:22:7",
															"nodeType": "YulFunctionCall",
															"src": "7236:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "7260:7:7",
															"nodeType": "YulIdentifier",
															"src": "7260:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "7215:20:7",
														"nodeType": "YulIdentifier",
														"src": "7215:20:7"
													},
													"nativeSrc": "7215:53:7",
													"nodeType": "YulFunctionCall",
													"src": "7215:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "7205:6:7",
														"nodeType": "YulIdentifier",
														"src": "7205:6:7"
													}
												]
											}
										]
									},
									{
										"nativeSrc": "7288:118:7",
										"nodeType": "YulBlock",
										"src": "7288:118:7",
										"statements": [
											{
												"nativeSrc": "7303:16:7",
												"nodeType": "YulVariableDeclaration",
												"src": "7303:16:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7317:2:7",
													"nodeType": "YulLiteral",
													"src": "7317:2:7",
													"type": "",
													"value": "32"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "7307:6:7",
														"nodeType": "YulTypedName",
														"src": "7307:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "7333:63:7",
												"nodeType": "YulAssignment",
												"src": "7333:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "7368:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7368:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "7379:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "7364:3:7",
																"nodeType": "YulIdentifier",
																"src": "7364:3:7"
															},
															"nativeSrc": "7364:22:7",
															"nodeType": "YulFunctionCall",
															"src": "7364:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "7388:7:7",
															"nodeType": "YulIdentifier",
															"src": "7388:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_address",
														"nativeSrc": "7343:20:7",
														"nodeType": "YulIdentifier",
														"src": "7343:20:7"
													},
													"nativeSrc": "7343:53:7",
													"nodeType": "YulFunctionCall",
													"src": "7343:53:7"
												},
												"variableNames": [
													{
														"name": "value1",
														"nativeSrc": "7333:6:7",
														"nodeType": "YulIdentifier",
														"src": "7333:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nativeSrc": "6939:474:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "6984:9:7",
									"nodeType": "YulTypedName",
									"src": "6984:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "6995:7:7",
									"nodeType": "YulTypedName",
									"src": "6995:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "7007:6:7",
									"nodeType": "YulTypedName",
									"src": "7007:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "7015:6:7",
									"nodeType": "YulTypedName",
									"src": "7015:6:7",
									"type": ""
								}
							],
							"src": "6939:474:7"
						},
						{
							"body": {
								"nativeSrc": "7485:263:7",
								"nodeType": "YulBlock",
								"src": "7485:263:7",
								"statements": [
									{
										"body": {
											"nativeSrc": "7531:83:7",
											"nodeType": "YulBlock",
											"src": "7531:83:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
															"nativeSrc": "7533:77:7",
															"nodeType": "YulIdentifier",
															"src": "7533:77:7"
														},
														"nativeSrc": "7533:79:7",
														"nodeType": "YulFunctionCall",
														"src": "7533:79:7"
													},
													"nativeSrc": "7533:79:7",
													"nodeType": "YulExpressionStatement",
													"src": "7533:79:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nativeSrc": "7506:7:7",
															"nodeType": "YulIdentifier",
															"src": "7506:7:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "7515:9:7",
															"nodeType": "YulIdentifier",
															"src": "7515:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "7502:3:7",
														"nodeType": "YulIdentifier",
														"src": "7502:3:7"
													},
													"nativeSrc": "7502:23:7",
													"nodeType": "YulFunctionCall",
													"src": "7502:23:7"
												},
												{
													"kind": "number",
													"nativeSrc": "7527:2:7",
													"nodeType": "YulLiteral",
													"src": "7527:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nativeSrc": "7498:3:7",
												"nodeType": "YulIdentifier",
												"src": "7498:3:7"
											},
											"nativeSrc": "7498:32:7",
											"nodeType": "YulFunctionCall",
											"src": "7498:32:7"
										},
										"nativeSrc": "7495:119:7",
										"nodeType": "YulIf",
										"src": "7495:119:7"
									},
									{
										"nativeSrc": "7624:117:7",
										"nodeType": "YulBlock",
										"src": "7624:117:7",
										"statements": [
											{
												"nativeSrc": "7639:15:7",
												"nodeType": "YulVariableDeclaration",
												"src": "7639:15:7",
												"value": {
													"kind": "number",
													"nativeSrc": "7653:1:7",
													"nodeType": "YulLiteral",
													"src": "7653:1:7",
													"type": "",
													"value": "0"
												},
												"variables": [
													{
														"name": "offset",
														"nativeSrc": "7643:6:7",
														"nodeType": "YulTypedName",
														"src": "7643:6:7",
														"type": ""
													}
												]
											},
											{
												"nativeSrc": "7668:63:7",
												"nodeType": "YulAssignment",
												"src": "7668:63:7",
												"value": {
													"arguments": [
														{
															"arguments": [
																{
																	"name": "headStart",
																	"nativeSrc": "7703:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "7703:9:7"
																},
																{
																	"name": "offset",
																	"nativeSrc": "7714:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7714:6:7"
																}
															],
															"functionName": {
																"name": "add",
																"nativeSrc": "7699:3:7",
																"nodeType": "YulIdentifier",
																"src": "7699:3:7"
															},
															"nativeSrc": "7699:22:7",
															"nodeType": "YulFunctionCall",
															"src": "7699:22:7"
														},
														{
															"name": "dataEnd",
															"nativeSrc": "7723:7:7",
															"nodeType": "YulIdentifier",
															"src": "7723:7:7"
														}
													],
													"functionName": {
														"name": "abi_decode_t_uint256",
														"nativeSrc": "7678:20:7",
														"nodeType": "YulIdentifier",
														"src": "7678:20:7"
													},
													"nativeSrc": "7678:53:7",
													"nodeType": "YulFunctionCall",
													"src": "7678:53:7"
												},
												"variableNames": [
													{
														"name": "value0",
														"nativeSrc": "7668:6:7",
														"nodeType": "YulIdentifier",
														"src": "7668:6:7"
													}
												]
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nativeSrc": "7419:329:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "7455:9:7",
									"nodeType": "YulTypedName",
									"src": "7455:9:7",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nativeSrc": "7466:7:7",
									"nodeType": "YulTypedName",
									"src": "7466:7:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nativeSrc": "7478:6:7",
									"nodeType": "YulTypedName",
									"src": "7478:6:7",
									"type": ""
								}
							],
							"src": "7419:329:7"
						},
						{
							"body": {
								"nativeSrc": "7782:152:7",
								"nodeType": "YulBlock",
								"src": "7782:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7799:1:7",
													"nodeType": "YulLiteral",
													"src": "7799:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "7802:77:7",
													"nodeType": "YulLiteral",
													"src": "7802:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7792:6:7",
												"nodeType": "YulIdentifier",
												"src": "7792:6:7"
											},
											"nativeSrc": "7792:88:7",
											"nodeType": "YulFunctionCall",
											"src": "7792:88:7"
										},
										"nativeSrc": "7792:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "7792:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7896:1:7",
													"nodeType": "YulLiteral",
													"src": "7896:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "7899:4:7",
													"nodeType": "YulLiteral",
													"src": "7899:4:7",
													"type": "",
													"value": "0x22"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "7889:6:7",
												"nodeType": "YulIdentifier",
												"src": "7889:6:7"
											},
											"nativeSrc": "7889:15:7",
											"nodeType": "YulFunctionCall",
											"src": "7889:15:7"
										},
										"nativeSrc": "7889:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "7889:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "7920:1:7",
													"nodeType": "YulLiteral",
													"src": "7920:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "7923:4:7",
													"nodeType": "YulLiteral",
													"src": "7923:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "7913:6:7",
												"nodeType": "YulIdentifier",
												"src": "7913:6:7"
											},
											"nativeSrc": "7913:15:7",
											"nodeType": "YulFunctionCall",
											"src": "7913:15:7"
										},
										"nativeSrc": "7913:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "7913:15:7"
									}
								]
							},
							"name": "panic_error_0x22",
							"nativeSrc": "7754:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "7754:180:7"
						},
						{
							"body": {
								"nativeSrc": "7991:269:7",
								"nodeType": "YulBlock",
								"src": "7991:269:7",
								"statements": [
									{
										"nativeSrc": "8001:22:7",
										"nodeType": "YulAssignment",
										"src": "8001:22:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "8015:4:7",
													"nodeType": "YulIdentifier",
													"src": "8015:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8021:1:7",
													"nodeType": "YulLiteral",
													"src": "8021:1:7",
													"type": "",
													"value": "2"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "8011:3:7",
												"nodeType": "YulIdentifier",
												"src": "8011:3:7"
											},
											"nativeSrc": "8011:12:7",
											"nodeType": "YulFunctionCall",
											"src": "8011:12:7"
										},
										"variableNames": [
											{
												"name": "length",
												"nativeSrc": "8001:6:7",
												"nodeType": "YulIdentifier",
												"src": "8001:6:7"
											}
										]
									},
									{
										"nativeSrc": "8032:38:7",
										"nodeType": "YulVariableDeclaration",
										"src": "8032:38:7",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nativeSrc": "8062:4:7",
													"nodeType": "YulIdentifier",
													"src": "8062:4:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8068:1:7",
													"nodeType": "YulLiteral",
													"src": "8068:1:7",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nativeSrc": "8058:3:7",
												"nodeType": "YulIdentifier",
												"src": "8058:3:7"
											},
											"nativeSrc": "8058:12:7",
											"nodeType": "YulFunctionCall",
											"src": "8058:12:7"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nativeSrc": "8036:18:7",
												"nodeType": "YulTypedName",
												"src": "8036:18:7",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nativeSrc": "8109:51:7",
											"nodeType": "YulBlock",
											"src": "8109:51:7",
											"statements": [
												{
													"nativeSrc": "8123:27:7",
													"nodeType": "YulAssignment",
													"src": "8123:27:7",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nativeSrc": "8137:6:7",
																"nodeType": "YulIdentifier",
																"src": "8137:6:7"
															},
															{
																"kind": "number",
																"nativeSrc": "8145:4:7",
																"nodeType": "YulLiteral",
																"src": "8145:4:7",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nativeSrc": "8133:3:7",
															"nodeType": "YulIdentifier",
															"src": "8133:3:7"
														},
														"nativeSrc": "8133:17:7",
														"nodeType": "YulFunctionCall",
														"src": "8133:17:7"
													},
													"variableNames": [
														{
															"name": "length",
															"nativeSrc": "8123:6:7",
															"nodeType": "YulIdentifier",
															"src": "8123:6:7"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "8089:18:7",
													"nodeType": "YulIdentifier",
													"src": "8089:18:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "8082:6:7",
												"nodeType": "YulIdentifier",
												"src": "8082:6:7"
											},
											"nativeSrc": "8082:26:7",
											"nodeType": "YulFunctionCall",
											"src": "8082:26:7"
										},
										"nativeSrc": "8079:81:7",
										"nodeType": "YulIf",
										"src": "8079:81:7"
									},
									{
										"body": {
											"nativeSrc": "8212:42:7",
											"nodeType": "YulBlock",
											"src": "8212:42:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x22",
															"nativeSrc": "8226:16:7",
															"nodeType": "YulIdentifier",
															"src": "8226:16:7"
														},
														"nativeSrc": "8226:18:7",
														"nodeType": "YulFunctionCall",
														"src": "8226:18:7"
													},
													"nativeSrc": "8226:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "8226:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nativeSrc": "8176:18:7",
													"nodeType": "YulIdentifier",
													"src": "8176:18:7"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nativeSrc": "8199:6:7",
															"nodeType": "YulIdentifier",
															"src": "8199:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "8207:2:7",
															"nodeType": "YulLiteral",
															"src": "8207:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nativeSrc": "8196:2:7",
														"nodeType": "YulIdentifier",
														"src": "8196:2:7"
													},
													"nativeSrc": "8196:14:7",
													"nodeType": "YulFunctionCall",
													"src": "8196:14:7"
												}
											],
											"functionName": {
												"name": "eq",
												"nativeSrc": "8173:2:7",
												"nodeType": "YulIdentifier",
												"src": "8173:2:7"
											},
											"nativeSrc": "8173:38:7",
											"nodeType": "YulFunctionCall",
											"src": "8173:38:7"
										},
										"nativeSrc": "8170:84:7",
										"nodeType": "YulIf",
										"src": "8170:84:7"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nativeSrc": "7940:320:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nativeSrc": "7975:4:7",
									"nodeType": "YulTypedName",
									"src": "7975:4:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nativeSrc": "7984:6:7",
									"nodeType": "YulTypedName",
									"src": "7984:6:7",
									"type": ""
								}
							],
							"src": "7940:320:7"
						},
						{
							"body": {
								"nativeSrc": "8420:288:7",
								"nodeType": "YulBlock",
								"src": "8420:288:7",
								"statements": [
									{
										"nativeSrc": "8430:26:7",
										"nodeType": "YulAssignment",
										"src": "8430:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "8442:9:7",
													"nodeType": "YulIdentifier",
													"src": "8442:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "8453:2:7",
													"nodeType": "YulLiteral",
													"src": "8453:2:7",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "8438:3:7",
												"nodeType": "YulIdentifier",
												"src": "8438:3:7"
											},
											"nativeSrc": "8438:18:7",
											"nodeType": "YulFunctionCall",
											"src": "8438:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "8430:4:7",
												"nodeType": "YulIdentifier",
												"src": "8430:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value0",
													"nativeSrc": "8510:6:7",
													"nodeType": "YulIdentifier",
													"src": "8510:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8523:9:7",
															"nodeType": "YulIdentifier",
															"src": "8523:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "8534:1:7",
															"nodeType": "YulLiteral",
															"src": "8534:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8519:3:7",
														"nodeType": "YulIdentifier",
														"src": "8519:3:7"
													},
													"nativeSrc": "8519:17:7",
													"nodeType": "YulFunctionCall",
													"src": "8519:17:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8466:43:7",
												"nodeType": "YulIdentifier",
												"src": "8466:43:7"
											},
											"nativeSrc": "8466:71:7",
											"nodeType": "YulFunctionCall",
											"src": "8466:71:7"
										},
										"nativeSrc": "8466:71:7",
										"nodeType": "YulExpressionStatement",
										"src": "8466:71:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value1",
													"nativeSrc": "8591:6:7",
													"nodeType": "YulIdentifier",
													"src": "8591:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8604:9:7",
															"nodeType": "YulIdentifier",
															"src": "8604:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "8615:2:7",
															"nodeType": "YulLiteral",
															"src": "8615:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8600:3:7",
														"nodeType": "YulIdentifier",
														"src": "8600:3:7"
													},
													"nativeSrc": "8600:18:7",
													"nodeType": "YulFunctionCall",
													"src": "8600:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8547:43:7",
												"nodeType": "YulIdentifier",
												"src": "8547:43:7"
											},
											"nativeSrc": "8547:72:7",
											"nodeType": "YulFunctionCall",
											"src": "8547:72:7"
										},
										"nativeSrc": "8547:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "8547:72:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value2",
													"nativeSrc": "8673:6:7",
													"nodeType": "YulIdentifier",
													"src": "8673:6:7"
												},
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "8686:9:7",
															"nodeType": "YulIdentifier",
															"src": "8686:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "8697:2:7",
															"nodeType": "YulLiteral",
															"src": "8697:2:7",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8682:3:7",
														"nodeType": "YulIdentifier",
														"src": "8682:3:7"
													},
													"nativeSrc": "8682:18:7",
													"nodeType": "YulFunctionCall",
													"src": "8682:18:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8629:43:7",
												"nodeType": "YulIdentifier",
												"src": "8629:43:7"
											},
											"nativeSrc": "8629:72:7",
											"nodeType": "YulFunctionCall",
											"src": "8629:72:7"
										},
										"nativeSrc": "8629:72:7",
										"nodeType": "YulExpressionStatement",
										"src": "8629:72:7"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nativeSrc": "8266:442:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "8376:9:7",
									"nodeType": "YulTypedName",
									"src": "8376:9:7",
									"type": ""
								},
								{
									"name": "value2",
									"nativeSrc": "8388:6:7",
									"nodeType": "YulTypedName",
									"src": "8388:6:7",
									"type": ""
								},
								{
									"name": "value1",
									"nativeSrc": "8396:6:7",
									"nodeType": "YulTypedName",
									"src": "8396:6:7",
									"type": ""
								},
								{
									"name": "value0",
									"nativeSrc": "8404:6:7",
									"nodeType": "YulTypedName",
									"src": "8404:6:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "8415:4:7",
									"nodeType": "YulTypedName",
									"src": "8415:4:7",
									"type": ""
								}
							],
							"src": "8266:442:7"
						},
						{
							"body": {
								"nativeSrc": "8820:66:7",
								"nodeType": "YulBlock",
								"src": "8820:66:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "8842:6:7",
															"nodeType": "YulIdentifier",
															"src": "8842:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "8850:1:7",
															"nodeType": "YulLiteral",
															"src": "8850:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "8838:3:7",
														"nodeType": "YulIdentifier",
														"src": "8838:3:7"
													},
													"nativeSrc": "8838:14:7",
													"nodeType": "YulFunctionCall",
													"src": "8838:14:7"
												},
												{
													"hexValue": "4164647265737320697320626c61636b6c6973746564",
													"kind": "string",
													"nativeSrc": "8854:24:7",
													"nodeType": "YulLiteral",
													"src": "8854:24:7",
													"type": "",
													"value": "Address is blacklisted"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "8831:6:7",
												"nodeType": "YulIdentifier",
												"src": "8831:6:7"
											},
											"nativeSrc": "8831:48:7",
											"nodeType": "YulFunctionCall",
											"src": "8831:48:7"
										},
										"nativeSrc": "8831:48:7",
										"nodeType": "YulExpressionStatement",
										"src": "8831:48:7"
									}
								]
							},
							"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
							"nativeSrc": "8714:172:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "8812:6:7",
									"nodeType": "YulTypedName",
									"src": "8812:6:7",
									"type": ""
								}
							],
							"src": "8714:172:7"
						},
						{
							"body": {
								"nativeSrc": "9038:220:7",
								"nodeType": "YulBlock",
								"src": "9038:220:7",
								"statements": [
									{
										"nativeSrc": "9048:74:7",
										"nodeType": "YulAssignment",
										"src": "9048:74:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9114:3:7",
													"nodeType": "YulIdentifier",
													"src": "9114:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9119:2:7",
													"nodeType": "YulLiteral",
													"src": "9119:2:7",
													"type": "",
													"value": "22"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9055:58:7",
												"nodeType": "YulIdentifier",
												"src": "9055:58:7"
											},
											"nativeSrc": "9055:67:7",
											"nodeType": "YulFunctionCall",
											"src": "9055:67:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "9048:3:7",
												"nodeType": "YulIdentifier",
												"src": "9048:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9220:3:7",
													"nodeType": "YulIdentifier",
													"src": "9220:3:7"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
												"nativeSrc": "9131:88:7",
												"nodeType": "YulIdentifier",
												"src": "9131:88:7"
											},
											"nativeSrc": "9131:93:7",
											"nodeType": "YulFunctionCall",
											"src": "9131:93:7"
										},
										"nativeSrc": "9131:93:7",
										"nodeType": "YulExpressionStatement",
										"src": "9131:93:7"
									},
									{
										"nativeSrc": "9233:19:7",
										"nodeType": "YulAssignment",
										"src": "9233:19:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "9244:3:7",
													"nodeType": "YulIdentifier",
													"src": "9244:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9249:2:7",
													"nodeType": "YulLiteral",
													"src": "9249:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9240:3:7",
												"nodeType": "YulIdentifier",
												"src": "9240:3:7"
											},
											"nativeSrc": "9240:12:7",
											"nodeType": "YulFunctionCall",
											"src": "9240:12:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "9233:3:7",
												"nodeType": "YulIdentifier",
												"src": "9233:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "8892:366:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "9026:3:7",
									"nodeType": "YulTypedName",
									"src": "9026:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "9034:3:7",
									"nodeType": "YulTypedName",
									"src": "9034:3:7",
									"type": ""
								}
							],
							"src": "8892:366:7"
						},
						{
							"body": {
								"nativeSrc": "9435:248:7",
								"nodeType": "YulBlock",
								"src": "9435:248:7",
								"statements": [
									{
										"nativeSrc": "9445:26:7",
										"nodeType": "YulAssignment",
										"src": "9445:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "9457:9:7",
													"nodeType": "YulIdentifier",
													"src": "9457:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "9468:2:7",
													"nodeType": "YulLiteral",
													"src": "9468:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "9453:3:7",
												"nodeType": "YulIdentifier",
												"src": "9453:3:7"
											},
											"nativeSrc": "9453:18:7",
											"nodeType": "YulFunctionCall",
											"src": "9453:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9445:4:7",
												"nodeType": "YulIdentifier",
												"src": "9445:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "9492:9:7",
															"nodeType": "YulIdentifier",
															"src": "9492:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9503:1:7",
															"nodeType": "YulLiteral",
															"src": "9503:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9488:3:7",
														"nodeType": "YulIdentifier",
														"src": "9488:3:7"
													},
													"nativeSrc": "9488:17:7",
													"nodeType": "YulFunctionCall",
													"src": "9488:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "9511:4:7",
															"nodeType": "YulIdentifier",
															"src": "9511:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "9517:9:7",
															"nodeType": "YulIdentifier",
															"src": "9517:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "9507:3:7",
														"nodeType": "YulIdentifier",
														"src": "9507:3:7"
													},
													"nativeSrc": "9507:20:7",
													"nodeType": "YulFunctionCall",
													"src": "9507:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9481:6:7",
												"nodeType": "YulIdentifier",
												"src": "9481:6:7"
											},
											"nativeSrc": "9481:47:7",
											"nodeType": "YulFunctionCall",
											"src": "9481:47:7"
										},
										"nativeSrc": "9481:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "9481:47:7"
									},
									{
										"nativeSrc": "9537:139:7",
										"nodeType": "YulAssignment",
										"src": "9537:139:7",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "9671:4:7",
													"nodeType": "YulIdentifier",
													"src": "9671:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9545:124:7",
												"nodeType": "YulIdentifier",
												"src": "9545:124:7"
											},
											"nativeSrc": "9545:131:7",
											"nodeType": "YulFunctionCall",
											"src": "9545:131:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "9537:4:7",
												"nodeType": "YulIdentifier",
												"src": "9537:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "9264:419:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "9415:9:7",
									"nodeType": "YulTypedName",
									"src": "9415:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "9430:4:7",
									"nodeType": "YulTypedName",
									"src": "9430:4:7",
									"type": ""
								}
							],
							"src": "9264:419:7"
						},
						{
							"body": {
								"nativeSrc": "9795:70:7",
								"nodeType": "YulBlock",
								"src": "9795:70:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "9817:6:7",
															"nodeType": "YulIdentifier",
															"src": "9817:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "9825:1:7",
															"nodeType": "YulLiteral",
															"src": "9825:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "9813:3:7",
														"nodeType": "YulIdentifier",
														"src": "9813:3:7"
													},
													"nativeSrc": "9813:14:7",
													"nodeType": "YulFunctionCall",
													"src": "9813:14:7"
												},
												{
													"hexValue": "54726164696e67206973206e6f7420656e61626c656420796574",
													"kind": "string",
													"nativeSrc": "9829:28:7",
													"nodeType": "YulLiteral",
													"src": "9829:28:7",
													"type": "",
													"value": "Trading is not enabled yet"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "9806:6:7",
												"nodeType": "YulIdentifier",
												"src": "9806:6:7"
											},
											"nativeSrc": "9806:52:7",
											"nodeType": "YulFunctionCall",
											"src": "9806:52:7"
										},
										"nativeSrc": "9806:52:7",
										"nodeType": "YulExpressionStatement",
										"src": "9806:52:7"
									}
								]
							},
							"name": "store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33",
							"nativeSrc": "9689:176:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "9787:6:7",
									"nodeType": "YulTypedName",
									"src": "9787:6:7",
									"type": ""
								}
							],
							"src": "9689:176:7"
						},
						{
							"body": {
								"nativeSrc": "10017:220:7",
								"nodeType": "YulBlock",
								"src": "10017:220:7",
								"statements": [
									{
										"nativeSrc": "10027:74:7",
										"nodeType": "YulAssignment",
										"src": "10027:74:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10093:3:7",
													"nodeType": "YulIdentifier",
													"src": "10093:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "10098:2:7",
													"nodeType": "YulLiteral",
													"src": "10098:2:7",
													"type": "",
													"value": "26"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10034:58:7",
												"nodeType": "YulIdentifier",
												"src": "10034:58:7"
											},
											"nativeSrc": "10034:67:7",
											"nodeType": "YulFunctionCall",
											"src": "10034:67:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "10027:3:7",
												"nodeType": "YulIdentifier",
												"src": "10027:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10199:3:7",
													"nodeType": "YulIdentifier",
													"src": "10199:3:7"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33",
												"nativeSrc": "10110:88:7",
												"nodeType": "YulIdentifier",
												"src": "10110:88:7"
											},
											"nativeSrc": "10110:93:7",
											"nodeType": "YulFunctionCall",
											"src": "10110:93:7"
										},
										"nativeSrc": "10110:93:7",
										"nodeType": "YulExpressionStatement",
										"src": "10110:93:7"
									},
									{
										"nativeSrc": "10212:19:7",
										"nodeType": "YulAssignment",
										"src": "10212:19:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "10223:3:7",
													"nodeType": "YulIdentifier",
													"src": "10223:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "10228:2:7",
													"nodeType": "YulLiteral",
													"src": "10228:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10219:3:7",
												"nodeType": "YulIdentifier",
												"src": "10219:3:7"
											},
											"nativeSrc": "10219:12:7",
											"nodeType": "YulFunctionCall",
											"src": "10219:12:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "10212:3:7",
												"nodeType": "YulIdentifier",
												"src": "10212:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "9871:366:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "10005:3:7",
									"nodeType": "YulTypedName",
									"src": "10005:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "10013:3:7",
									"nodeType": "YulTypedName",
									"src": "10013:3:7",
									"type": ""
								}
							],
							"src": "9871:366:7"
						},
						{
							"body": {
								"nativeSrc": "10414:248:7",
								"nodeType": "YulBlock",
								"src": "10414:248:7",
								"statements": [
									{
										"nativeSrc": "10424:26:7",
										"nodeType": "YulAssignment",
										"src": "10424:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "10436:9:7",
													"nodeType": "YulIdentifier",
													"src": "10436:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "10447:2:7",
													"nodeType": "YulLiteral",
													"src": "10447:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "10432:3:7",
												"nodeType": "YulIdentifier",
												"src": "10432:3:7"
											},
											"nativeSrc": "10432:18:7",
											"nodeType": "YulFunctionCall",
											"src": "10432:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10424:4:7",
												"nodeType": "YulIdentifier",
												"src": "10424:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "10471:9:7",
															"nodeType": "YulIdentifier",
															"src": "10471:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "10482:1:7",
															"nodeType": "YulLiteral",
															"src": "10482:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10467:3:7",
														"nodeType": "YulIdentifier",
														"src": "10467:3:7"
													},
													"nativeSrc": "10467:17:7",
													"nodeType": "YulFunctionCall",
													"src": "10467:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "10490:4:7",
															"nodeType": "YulIdentifier",
															"src": "10490:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "10496:9:7",
															"nodeType": "YulIdentifier",
															"src": "10496:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "10486:3:7",
														"nodeType": "YulIdentifier",
														"src": "10486:3:7"
													},
													"nativeSrc": "10486:20:7",
													"nodeType": "YulFunctionCall",
													"src": "10486:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10460:6:7",
												"nodeType": "YulIdentifier",
												"src": "10460:6:7"
											},
											"nativeSrc": "10460:47:7",
											"nodeType": "YulFunctionCall",
											"src": "10460:47:7"
										},
										"nativeSrc": "10460:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "10460:47:7"
									},
									{
										"nativeSrc": "10516:139:7",
										"nodeType": "YulAssignment",
										"src": "10516:139:7",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "10650:4:7",
													"nodeType": "YulIdentifier",
													"src": "10650:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10524:124:7",
												"nodeType": "YulIdentifier",
												"src": "10524:124:7"
											},
											"nativeSrc": "10524:131:7",
											"nodeType": "YulFunctionCall",
											"src": "10524:131:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "10516:4:7",
												"nodeType": "YulIdentifier",
												"src": "10516:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "10243:419:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "10394:9:7",
									"nodeType": "YulTypedName",
									"src": "10394:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "10409:4:7",
									"nodeType": "YulTypedName",
									"src": "10409:4:7",
									"type": ""
								}
							],
							"src": "10243:419:7"
						},
						{
							"body": {
								"nativeSrc": "10774:114:7",
								"nodeType": "YulBlock",
								"src": "10774:114:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10796:6:7",
															"nodeType": "YulIdentifier",
															"src": "10796:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "10804:1:7",
															"nodeType": "YulLiteral",
															"src": "10804:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10792:3:7",
														"nodeType": "YulIdentifier",
														"src": "10792:3:7"
													},
													"nativeSrc": "10792:14:7",
													"nodeType": "YulFunctionCall",
													"src": "10792:14:7"
												},
												{
													"hexValue": "5472616e7366657220616d6f756e742065786365656473206d6178206c696d69",
													"kind": "string",
													"nativeSrc": "10808:34:7",
													"nodeType": "YulLiteral",
													"src": "10808:34:7",
													"type": "",
													"value": "Transfer amount exceeds max limi"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10785:6:7",
												"nodeType": "YulIdentifier",
												"src": "10785:6:7"
											},
											"nativeSrc": "10785:58:7",
											"nodeType": "YulFunctionCall",
											"src": "10785:58:7"
										},
										"nativeSrc": "10785:58:7",
										"nodeType": "YulExpressionStatement",
										"src": "10785:58:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nativeSrc": "10864:6:7",
															"nodeType": "YulIdentifier",
															"src": "10864:6:7"
														},
														{
															"kind": "number",
															"nativeSrc": "10872:2:7",
															"nodeType": "YulLiteral",
															"src": "10872:2:7",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "10860:3:7",
														"nodeType": "YulIdentifier",
														"src": "10860:3:7"
													},
													"nativeSrc": "10860:15:7",
													"nodeType": "YulFunctionCall",
													"src": "10860:15:7"
												},
												{
													"hexValue": "74",
													"kind": "string",
													"nativeSrc": "10877:3:7",
													"nodeType": "YulLiteral",
													"src": "10877:3:7",
													"type": "",
													"value": "t"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "10853:6:7",
												"nodeType": "YulIdentifier",
												"src": "10853:6:7"
											},
											"nativeSrc": "10853:28:7",
											"nodeType": "YulFunctionCall",
											"src": "10853:28:7"
										},
										"nativeSrc": "10853:28:7",
										"nodeType": "YulExpressionStatement",
										"src": "10853:28:7"
									}
								]
							},
							"name": "store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264",
							"nativeSrc": "10668:220:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "memPtr",
									"nativeSrc": "10766:6:7",
									"nodeType": "YulTypedName",
									"src": "10766:6:7",
									"type": ""
								}
							],
							"src": "10668:220:7"
						},
						{
							"body": {
								"nativeSrc": "11040:220:7",
								"nodeType": "YulBlock",
								"src": "11040:220:7",
								"statements": [
									{
										"nativeSrc": "11050:74:7",
										"nodeType": "YulAssignment",
										"src": "11050:74:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11116:3:7",
													"nodeType": "YulIdentifier",
													"src": "11116:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "11121:2:7",
													"nodeType": "YulLiteral",
													"src": "11121:2:7",
													"type": "",
													"value": "33"
												}
											],
											"functionName": {
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11057:58:7",
												"nodeType": "YulIdentifier",
												"src": "11057:58:7"
											},
											"nativeSrc": "11057:67:7",
											"nodeType": "YulFunctionCall",
											"src": "11057:67:7"
										},
										"variableNames": [
											{
												"name": "pos",
												"nativeSrc": "11050:3:7",
												"nodeType": "YulIdentifier",
												"src": "11050:3:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11222:3:7",
													"nodeType": "YulIdentifier",
													"src": "11222:3:7"
												}
											],
											"functionName": {
												"name": "store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264",
												"nativeSrc": "11133:88:7",
												"nodeType": "YulIdentifier",
												"src": "11133:88:7"
											},
											"nativeSrc": "11133:93:7",
											"nodeType": "YulFunctionCall",
											"src": "11133:93:7"
										},
										"nativeSrc": "11133:93:7",
										"nodeType": "YulExpressionStatement",
										"src": "11133:93:7"
									},
									{
										"nativeSrc": "11235:19:7",
										"nodeType": "YulAssignment",
										"src": "11235:19:7",
										"value": {
											"arguments": [
												{
													"name": "pos",
													"nativeSrc": "11246:3:7",
													"nodeType": "YulIdentifier",
													"src": "11246:3:7"
												},
												{
													"kind": "number",
													"nativeSrc": "11251:2:7",
													"nodeType": "YulLiteral",
													"src": "11251:2:7",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11242:3:7",
												"nodeType": "YulIdentifier",
												"src": "11242:3:7"
											},
											"nativeSrc": "11242:12:7",
											"nodeType": "YulFunctionCall",
											"src": "11242:12:7"
										},
										"variableNames": [
											{
												"name": "end",
												"nativeSrc": "11235:3:7",
												"nodeType": "YulIdentifier",
												"src": "11235:3:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack",
							"nativeSrc": "10894:366:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "pos",
									"nativeSrc": "11028:3:7",
									"nodeType": "YulTypedName",
									"src": "11028:3:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "end",
									"nativeSrc": "11036:3:7",
									"nodeType": "YulTypedName",
									"src": "11036:3:7",
									"type": ""
								}
							],
							"src": "10894:366:7"
						},
						{
							"body": {
								"nativeSrc": "11437:248:7",
								"nodeType": "YulBlock",
								"src": "11437:248:7",
								"statements": [
									{
										"nativeSrc": "11447:26:7",
										"nodeType": "YulAssignment",
										"src": "11447:26:7",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nativeSrc": "11459:9:7",
													"nodeType": "YulIdentifier",
													"src": "11459:9:7"
												},
												{
													"kind": "number",
													"nativeSrc": "11470:2:7",
													"nodeType": "YulLiteral",
													"src": "11470:2:7",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "11455:3:7",
												"nodeType": "YulIdentifier",
												"src": "11455:3:7"
											},
											"nativeSrc": "11455:18:7",
											"nodeType": "YulFunctionCall",
											"src": "11455:18:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11447:4:7",
												"nodeType": "YulIdentifier",
												"src": "11447:4:7"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nativeSrc": "11494:9:7",
															"nodeType": "YulIdentifier",
															"src": "11494:9:7"
														},
														{
															"kind": "number",
															"nativeSrc": "11505:1:7",
															"nodeType": "YulLiteral",
															"src": "11505:1:7",
															"type": "",
															"value": "0"
														}
													],
													"functionName": {
														"name": "add",
														"nativeSrc": "11490:3:7",
														"nodeType": "YulIdentifier",
														"src": "11490:3:7"
													},
													"nativeSrc": "11490:17:7",
													"nodeType": "YulFunctionCall",
													"src": "11490:17:7"
												},
												{
													"arguments": [
														{
															"name": "tail",
															"nativeSrc": "11513:4:7",
															"nodeType": "YulIdentifier",
															"src": "11513:4:7"
														},
														{
															"name": "headStart",
															"nativeSrc": "11519:9:7",
															"nodeType": "YulIdentifier",
															"src": "11519:9:7"
														}
													],
													"functionName": {
														"name": "sub",
														"nativeSrc": "11509:3:7",
														"nodeType": "YulIdentifier",
														"src": "11509:3:7"
													},
													"nativeSrc": "11509:20:7",
													"nodeType": "YulFunctionCall",
													"src": "11509:20:7"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11483:6:7",
												"nodeType": "YulIdentifier",
												"src": "11483:6:7"
											},
											"nativeSrc": "11483:47:7",
											"nodeType": "YulFunctionCall",
											"src": "11483:47:7"
										},
										"nativeSrc": "11483:47:7",
										"nodeType": "YulExpressionStatement",
										"src": "11483:47:7"
									},
									{
										"nativeSrc": "11539:139:7",
										"nodeType": "YulAssignment",
										"src": "11539:139:7",
										"value": {
											"arguments": [
												{
													"name": "tail",
													"nativeSrc": "11673:4:7",
													"nodeType": "YulIdentifier",
													"src": "11673:4:7"
												}
											],
											"functionName": {
												"name": "abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11547:124:7",
												"nodeType": "YulIdentifier",
												"src": "11547:124:7"
											},
											"nativeSrc": "11547:131:7",
											"nodeType": "YulFunctionCall",
											"src": "11547:131:7"
										},
										"variableNames": [
											{
												"name": "tail",
												"nativeSrc": "11539:4:7",
												"nodeType": "YulIdentifier",
												"src": "11539:4:7"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264__to_t_string_memory_ptr__fromStack_reversed",
							"nativeSrc": "11266:419:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nativeSrc": "11417:9:7",
									"nodeType": "YulTypedName",
									"src": "11417:9:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nativeSrc": "11432:4:7",
									"nodeType": "YulTypedName",
									"src": "11432:4:7",
									"type": ""
								}
							],
							"src": "11266:419:7"
						},
						{
							"body": {
								"nativeSrc": "11719:152:7",
								"nodeType": "YulBlock",
								"src": "11719:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "11736:1:7",
													"nodeType": "YulLiteral",
													"src": "11736:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "11739:77:7",
													"nodeType": "YulLiteral",
													"src": "11739:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11729:6:7",
												"nodeType": "YulIdentifier",
												"src": "11729:6:7"
											},
											"nativeSrc": "11729:88:7",
											"nodeType": "YulFunctionCall",
											"src": "11729:88:7"
										},
										"nativeSrc": "11729:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "11729:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "11833:1:7",
													"nodeType": "YulLiteral",
													"src": "11833:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "11836:4:7",
													"nodeType": "YulLiteral",
													"src": "11836:4:7",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "11826:6:7",
												"nodeType": "YulIdentifier",
												"src": "11826:6:7"
											},
											"nativeSrc": "11826:15:7",
											"nodeType": "YulFunctionCall",
											"src": "11826:15:7"
										},
										"nativeSrc": "11826:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "11826:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "11857:1:7",
													"nodeType": "YulLiteral",
													"src": "11857:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "11860:4:7",
													"nodeType": "YulLiteral",
													"src": "11860:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "11850:6:7",
												"nodeType": "YulIdentifier",
												"src": "11850:6:7"
											},
											"nativeSrc": "11850:15:7",
											"nodeType": "YulFunctionCall",
											"src": "11850:15:7"
										},
										"nativeSrc": "11850:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "11850:15:7"
									}
								]
							},
							"name": "panic_error_0x11",
							"nativeSrc": "11691:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "11691:180:7"
						},
						{
							"body": {
								"nativeSrc": "11925:362:7",
								"nodeType": "YulBlock",
								"src": "11925:362:7",
								"statements": [
									{
										"nativeSrc": "11935:25:7",
										"nodeType": "YulAssignment",
										"src": "11935:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "11958:1:7",
													"nodeType": "YulIdentifier",
													"src": "11958:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "11940:17:7",
												"nodeType": "YulIdentifier",
												"src": "11940:17:7"
											},
											"nativeSrc": "11940:20:7",
											"nodeType": "YulFunctionCall",
											"src": "11940:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "11935:1:7",
												"nodeType": "YulIdentifier",
												"src": "11935:1:7"
											}
										]
									},
									{
										"nativeSrc": "11969:25:7",
										"nodeType": "YulAssignment",
										"src": "11969:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "11992:1:7",
													"nodeType": "YulIdentifier",
													"src": "11992:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "11974:17:7",
												"nodeType": "YulIdentifier",
												"src": "11974:17:7"
											},
											"nativeSrc": "11974:20:7",
											"nodeType": "YulFunctionCall",
											"src": "11974:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "11969:1:7",
												"nodeType": "YulIdentifier",
												"src": "11969:1:7"
											}
										]
									},
									{
										"nativeSrc": "12003:28:7",
										"nodeType": "YulVariableDeclaration",
										"src": "12003:28:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12026:1:7",
													"nodeType": "YulIdentifier",
													"src": "12026:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "12029:1:7",
													"nodeType": "YulIdentifier",
													"src": "12029:1:7"
												}
											],
											"functionName": {
												"name": "mul",
												"nativeSrc": "12022:3:7",
												"nodeType": "YulIdentifier",
												"src": "12022:3:7"
											},
											"nativeSrc": "12022:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12022:9:7"
										},
										"variables": [
											{
												"name": "product_raw",
												"nativeSrc": "12007:11:7",
												"nodeType": "YulTypedName",
												"src": "12007:11:7",
												"type": ""
											}
										]
									},
									{
										"nativeSrc": "12040:41:7",
										"nodeType": "YulAssignment",
										"src": "12040:41:7",
										"value": {
											"arguments": [
												{
													"name": "product_raw",
													"nativeSrc": "12069:11:7",
													"nodeType": "YulIdentifier",
													"src": "12069:11:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12051:17:7",
												"nodeType": "YulIdentifier",
												"src": "12051:17:7"
											},
											"nativeSrc": "12051:30:7",
											"nodeType": "YulFunctionCall",
											"src": "12051:30:7"
										},
										"variableNames": [
											{
												"name": "product",
												"nativeSrc": "12040:7:7",
												"nodeType": "YulIdentifier",
												"src": "12040:7:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "12258:22:7",
											"nodeType": "YulBlock",
											"src": "12258:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "12260:16:7",
															"nodeType": "YulIdentifier",
															"src": "12260:16:7"
														},
														"nativeSrc": "12260:18:7",
														"nodeType": "YulFunctionCall",
														"src": "12260:18:7"
													},
													"nativeSrc": "12260:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "12260:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nativeSrc": "12191:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12191:1:7"
																}
															],
															"functionName": {
																"name": "iszero",
																"nativeSrc": "12184:6:7",
																"nodeType": "YulIdentifier",
																"src": "12184:6:7"
															},
															"nativeSrc": "12184:9:7",
															"nodeType": "YulFunctionCall",
															"src": "12184:9:7"
														},
														{
															"arguments": [
																{
																	"name": "y",
																	"nativeSrc": "12214:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12214:1:7"
																},
																{
																	"arguments": [
																		{
																			"name": "product",
																			"nativeSrc": "12221:7:7",
																			"nodeType": "YulIdentifier",
																			"src": "12221:7:7"
																		},
																		{
																			"name": "x",
																			"nativeSrc": "12230:1:7",
																			"nodeType": "YulIdentifier",
																			"src": "12230:1:7"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nativeSrc": "12217:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12217:3:7"
																	},
																	"nativeSrc": "12217:15:7",
																	"nodeType": "YulFunctionCall",
																	"src": "12217:15:7"
																}
															],
															"functionName": {
																"name": "eq",
																"nativeSrc": "12211:2:7",
																"nodeType": "YulIdentifier",
																"src": "12211:2:7"
															},
															"nativeSrc": "12211:22:7",
															"nodeType": "YulFunctionCall",
															"src": "12211:22:7"
														}
													],
													"functionName": {
														"name": "or",
														"nativeSrc": "12164:2:7",
														"nodeType": "YulIdentifier",
														"src": "12164:2:7"
													},
													"nativeSrc": "12164:83:7",
													"nodeType": "YulFunctionCall",
													"src": "12164:83:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "12144:6:7",
												"nodeType": "YulIdentifier",
												"src": "12144:6:7"
											},
											"nativeSrc": "12144:113:7",
											"nodeType": "YulFunctionCall",
											"src": "12144:113:7"
										},
										"nativeSrc": "12141:139:7",
										"nodeType": "YulIf",
										"src": "12141:139:7"
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nativeSrc": "11877:410:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "11908:1:7",
									"nodeType": "YulTypedName",
									"src": "11908:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "11911:1:7",
									"nodeType": "YulTypedName",
									"src": "11911:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nativeSrc": "11917:7:7",
									"nodeType": "YulTypedName",
									"src": "11917:7:7",
									"type": ""
								}
							],
							"src": "11877:410:7"
						},
						{
							"body": {
								"nativeSrc": "12321:152:7",
								"nodeType": "YulBlock",
								"src": "12321:152:7",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "12338:1:7",
													"nodeType": "YulLiteral",
													"src": "12338:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "12341:77:7",
													"nodeType": "YulLiteral",
													"src": "12341:77:7",
													"type": "",
													"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12331:6:7",
												"nodeType": "YulIdentifier",
												"src": "12331:6:7"
											},
											"nativeSrc": "12331:88:7",
											"nodeType": "YulFunctionCall",
											"src": "12331:88:7"
										},
										"nativeSrc": "12331:88:7",
										"nodeType": "YulExpressionStatement",
										"src": "12331:88:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "12435:1:7",
													"nodeType": "YulLiteral",
													"src": "12435:1:7",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nativeSrc": "12438:4:7",
													"nodeType": "YulLiteral",
													"src": "12438:4:7",
													"type": "",
													"value": "0x12"
												}
											],
											"functionName": {
												"name": "mstore",
												"nativeSrc": "12428:6:7",
												"nodeType": "YulIdentifier",
												"src": "12428:6:7"
											},
											"nativeSrc": "12428:15:7",
											"nodeType": "YulFunctionCall",
											"src": "12428:15:7"
										},
										"nativeSrc": "12428:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "12428:15:7"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nativeSrc": "12459:1:7",
													"nodeType": "YulLiteral",
													"src": "12459:1:7",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nativeSrc": "12462:4:7",
													"nodeType": "YulLiteral",
													"src": "12462:4:7",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nativeSrc": "12452:6:7",
												"nodeType": "YulIdentifier",
												"src": "12452:6:7"
											},
											"nativeSrc": "12452:15:7",
											"nodeType": "YulFunctionCall",
											"src": "12452:15:7"
										},
										"nativeSrc": "12452:15:7",
										"nodeType": "YulExpressionStatement",
										"src": "12452:15:7"
									}
								]
							},
							"name": "panic_error_0x12",
							"nativeSrc": "12293:180:7",
							"nodeType": "YulFunctionDefinition",
							"src": "12293:180:7"
						},
						{
							"body": {
								"nativeSrc": "12521:143:7",
								"nodeType": "YulBlock",
								"src": "12521:143:7",
								"statements": [
									{
										"nativeSrc": "12531:25:7",
										"nodeType": "YulAssignment",
										"src": "12531:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12554:1:7",
													"nodeType": "YulIdentifier",
													"src": "12554:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12536:17:7",
												"nodeType": "YulIdentifier",
												"src": "12536:17:7"
											},
											"nativeSrc": "12536:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12536:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "12531:1:7",
												"nodeType": "YulIdentifier",
												"src": "12531:1:7"
											}
										]
									},
									{
										"nativeSrc": "12565:25:7",
										"nodeType": "YulAssignment",
										"src": "12565:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12588:1:7",
													"nodeType": "YulIdentifier",
													"src": "12588:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12570:17:7",
												"nodeType": "YulIdentifier",
												"src": "12570:17:7"
											},
											"nativeSrc": "12570:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12570:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "12565:1:7",
												"nodeType": "YulIdentifier",
												"src": "12565:1:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "12612:22:7",
											"nodeType": "YulBlock",
											"src": "12612:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x12",
															"nativeSrc": "12614:16:7",
															"nodeType": "YulIdentifier",
															"src": "12614:16:7"
														},
														"nativeSrc": "12614:18:7",
														"nodeType": "YulFunctionCall",
														"src": "12614:18:7"
													},
													"nativeSrc": "12614:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "12614:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12609:1:7",
													"nodeType": "YulIdentifier",
													"src": "12609:1:7"
												}
											],
											"functionName": {
												"name": "iszero",
												"nativeSrc": "12602:6:7",
												"nodeType": "YulIdentifier",
												"src": "12602:6:7"
											},
											"nativeSrc": "12602:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12602:9:7"
										},
										"nativeSrc": "12599:35:7",
										"nodeType": "YulIf",
										"src": "12599:35:7"
									},
									{
										"nativeSrc": "12644:14:7",
										"nodeType": "YulAssignment",
										"src": "12644:14:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12653:1:7",
													"nodeType": "YulIdentifier",
													"src": "12653:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "12656:1:7",
													"nodeType": "YulIdentifier",
													"src": "12656:1:7"
												}
											],
											"functionName": {
												"name": "div",
												"nativeSrc": "12649:3:7",
												"nodeType": "YulIdentifier",
												"src": "12649:3:7"
											},
											"nativeSrc": "12649:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12649:9:7"
										},
										"variableNames": [
											{
												"name": "r",
												"nativeSrc": "12644:1:7",
												"nodeType": "YulIdentifier",
												"src": "12644:1:7"
											}
										]
									}
								]
							},
							"name": "checked_div_t_uint256",
							"nativeSrc": "12479:185:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "12510:1:7",
									"nodeType": "YulTypedName",
									"src": "12510:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "12513:1:7",
									"nodeType": "YulTypedName",
									"src": "12513:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "r",
									"nativeSrc": "12519:1:7",
									"nodeType": "YulTypedName",
									"src": "12519:1:7",
									"type": ""
								}
							],
							"src": "12479:185:7"
						},
						{
							"body": {
								"nativeSrc": "12715:149:7",
								"nodeType": "YulBlock",
								"src": "12715:149:7",
								"statements": [
									{
										"nativeSrc": "12725:25:7",
										"nodeType": "YulAssignment",
										"src": "12725:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12748:1:7",
													"nodeType": "YulIdentifier",
													"src": "12748:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12730:17:7",
												"nodeType": "YulIdentifier",
												"src": "12730:17:7"
											},
											"nativeSrc": "12730:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12730:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "12725:1:7",
												"nodeType": "YulIdentifier",
												"src": "12725:1:7"
											}
										]
									},
									{
										"nativeSrc": "12759:25:7",
										"nodeType": "YulAssignment",
										"src": "12759:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12782:1:7",
													"nodeType": "YulIdentifier",
													"src": "12782:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12764:17:7",
												"nodeType": "YulIdentifier",
												"src": "12764:17:7"
											},
											"nativeSrc": "12764:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12764:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "12759:1:7",
												"nodeType": "YulIdentifier",
												"src": "12759:1:7"
											}
										]
									},
									{
										"nativeSrc": "12793:17:7",
										"nodeType": "YulAssignment",
										"src": "12793:17:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12805:1:7",
													"nodeType": "YulIdentifier",
													"src": "12805:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "12808:1:7",
													"nodeType": "YulIdentifier",
													"src": "12808:1:7"
												}
											],
											"functionName": {
												"name": "sub",
												"nativeSrc": "12801:3:7",
												"nodeType": "YulIdentifier",
												"src": "12801:3:7"
											},
											"nativeSrc": "12801:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12801:9:7"
										},
										"variableNames": [
											{
												"name": "diff",
												"nativeSrc": "12793:4:7",
												"nodeType": "YulIdentifier",
												"src": "12793:4:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "12835:22:7",
											"nodeType": "YulBlock",
											"src": "12835:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "12837:16:7",
															"nodeType": "YulIdentifier",
															"src": "12837:16:7"
														},
														"nativeSrc": "12837:18:7",
														"nodeType": "YulFunctionCall",
														"src": "12837:18:7"
													},
													"nativeSrc": "12837:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "12837:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "diff",
													"nativeSrc": "12826:4:7",
													"nodeType": "YulIdentifier",
													"src": "12826:4:7"
												},
												{
													"name": "x",
													"nativeSrc": "12832:1:7",
													"nodeType": "YulIdentifier",
													"src": "12832:1:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "12823:2:7",
												"nodeType": "YulIdentifier",
												"src": "12823:2:7"
											},
											"nativeSrc": "12823:11:7",
											"nodeType": "YulFunctionCall",
											"src": "12823:11:7"
										},
										"nativeSrc": "12820:37:7",
										"nodeType": "YulIf",
										"src": "12820:37:7"
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nativeSrc": "12670:194:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "12701:1:7",
									"nodeType": "YulTypedName",
									"src": "12701:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "12704:1:7",
									"nodeType": "YulTypedName",
									"src": "12704:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nativeSrc": "12710:4:7",
									"nodeType": "YulTypedName",
									"src": "12710:4:7",
									"type": ""
								}
							],
							"src": "12670:194:7"
						},
						{
							"body": {
								"nativeSrc": "12914:147:7",
								"nodeType": "YulBlock",
								"src": "12914:147:7",
								"statements": [
									{
										"nativeSrc": "12924:25:7",
										"nodeType": "YulAssignment",
										"src": "12924:25:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "12947:1:7",
													"nodeType": "YulIdentifier",
													"src": "12947:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12929:17:7",
												"nodeType": "YulIdentifier",
												"src": "12929:17:7"
											},
											"nativeSrc": "12929:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12929:20:7"
										},
										"variableNames": [
											{
												"name": "x",
												"nativeSrc": "12924:1:7",
												"nodeType": "YulIdentifier",
												"src": "12924:1:7"
											}
										]
									},
									{
										"nativeSrc": "12958:25:7",
										"nodeType": "YulAssignment",
										"src": "12958:25:7",
										"value": {
											"arguments": [
												{
													"name": "y",
													"nativeSrc": "12981:1:7",
													"nodeType": "YulIdentifier",
													"src": "12981:1:7"
												}
											],
											"functionName": {
												"name": "cleanup_t_uint256",
												"nativeSrc": "12963:17:7",
												"nodeType": "YulIdentifier",
												"src": "12963:17:7"
											},
											"nativeSrc": "12963:20:7",
											"nodeType": "YulFunctionCall",
											"src": "12963:20:7"
										},
										"variableNames": [
											{
												"name": "y",
												"nativeSrc": "12958:1:7",
												"nodeType": "YulIdentifier",
												"src": "12958:1:7"
											}
										]
									},
									{
										"nativeSrc": "12992:16:7",
										"nodeType": "YulAssignment",
										"src": "12992:16:7",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "13003:1:7",
													"nodeType": "YulIdentifier",
													"src": "13003:1:7"
												},
												{
													"name": "y",
													"nativeSrc": "13006:1:7",
													"nodeType": "YulIdentifier",
													"src": "13006:1:7"
												}
											],
											"functionName": {
												"name": "add",
												"nativeSrc": "12999:3:7",
												"nodeType": "YulIdentifier",
												"src": "12999:3:7"
											},
											"nativeSrc": "12999:9:7",
											"nodeType": "YulFunctionCall",
											"src": "12999:9:7"
										},
										"variableNames": [
											{
												"name": "sum",
												"nativeSrc": "12992:3:7",
												"nodeType": "YulIdentifier",
												"src": "12992:3:7"
											}
										]
									},
									{
										"body": {
											"nativeSrc": "13032:22:7",
											"nodeType": "YulBlock",
											"src": "13032:22:7",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nativeSrc": "13034:16:7",
															"nodeType": "YulIdentifier",
															"src": "13034:16:7"
														},
														"nativeSrc": "13034:18:7",
														"nodeType": "YulFunctionCall",
														"src": "13034:18:7"
													},
													"nativeSrc": "13034:18:7",
													"nodeType": "YulExpressionStatement",
													"src": "13034:18:7"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nativeSrc": "13024:1:7",
													"nodeType": "YulIdentifier",
													"src": "13024:1:7"
												},
												{
													"name": "sum",
													"nativeSrc": "13027:3:7",
													"nodeType": "YulIdentifier",
													"src": "13027:3:7"
												}
											],
											"functionName": {
												"name": "gt",
												"nativeSrc": "13021:2:7",
												"nodeType": "YulIdentifier",
												"src": "13021:2:7"
											},
											"nativeSrc": "13021:10:7",
											"nodeType": "YulFunctionCall",
											"src": "13021:10:7"
										},
										"nativeSrc": "13018:36:7",
										"nodeType": "YulIf",
										"src": "13018:36:7"
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nativeSrc": "12870:191:7",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nativeSrc": "12901:1:7",
									"nodeType": "YulTypedName",
									"src": "12901:1:7",
									"type": ""
								},
								{
									"name": "y",
									"nativeSrc": "12904:1:7",
									"nodeType": "YulTypedName",
									"src": "12904:1:7",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nativeSrc": "12910:3:7",
									"nodeType": "YulTypedName",
									"src": "12910:3:7",
									"type": ""
								}
							],
							"src": "12870:191:7"
						}
					]
				},
				"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trading is not enabled yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1975c544feaaf44832f08c949929d7146aeb97d4d6564f31349d5826b8d9fb33_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer amount exceeds max limi\")\n\n        mstore(add(memPtr, 32), \"t\")\n\n    }\n\n    function abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13adffa23aded2fa9d48e3cf6af82e8200274513722e66240881a794a6388264_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
				"id": 7,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561000f575f5ffd5b5060043610610171575f3560e01c80638a8c523c116100dc57806398118cb411610095578063dd62ed3e1161006f578063dd62ed3e14610403578063ec28438a14610433578063f2fde38b1461044f578063fce589d81461046b57610171565b806398118cb414610399578063a9059cbb146103b7578063c0246668146103e757610171565b80638a8c523c146102f95780638b424267146103035780638c0b5e22146103215780638da5cb5b1461033f5780638ea5220f1461035d57806395d89b411461037b57610171565b8063313ce5671161012e578063313ce567146102495780634ada218b146102675780636827e764146102855780636fcba377146102a357806370a08231146102bf578063715018a6146102ef57610171565b806306fdde0314610175578063095ea7b314610193578063153b0d1e146101c357806318160ddd146101df5780631f53ac02146101fd57806323b872dd14610219575b5f5ffd5b61017d610489565b60405161018a9190611445565b60405180910390f35b6101ad60048036038101906101a891906114f6565b610519565b6040516101ba919061154e565b60405180910390f35b6101dd60048036038101906101d89190611591565b61053b565b005b6101e761059b565b6040516101f491906115de565b60405180910390f35b610217600480360381019061021291906115f7565b6105a4565b005b610233600480360381019061022e9190611622565b6105f0565b604051610240919061154e565b60405180910390f35b61025161061e565b60405161025e919061168d565b60405180910390f35b61026f610626565b60405161027c919061154e565b60405180910390f35b61028d610638565b60405161029a91906115de565b60405180910390f35b6102bd60048036038101906102b891906116a6565b61063e565b005b6102d960048036038101906102d491906115f7565b610668565b6040516102e691906115de565b60405180910390f35b6102f76106ad565b005b6103016106c0565b005b61030b6106e4565b60405161031891906115de565b60405180910390f35b6103296106ea565b60405161033691906115de565b60405180910390f35b6103476106f0565b6040516103549190611719565b60405180910390f35b610365610718565b6040516103729190611719565b60405180910390f35b61038361073e565b6040516103909190611445565b60405180910390f35b6103a16107ce565b6040516103ae91906115de565b60405180910390f35b6103d160048036038101906103cc91906114f6565b6107d4565b6040516103de919061154e565b60405180910390f35b61040160048036038101906103fc9190611591565b6107f6565b005b61041d60048036038101906104189190611732565b610856565b60405161042a91906115de565b60405180910390f35b61044d60048036038101906104489190611770565b6108d8565b005b610469600480360381019061046491906115f7565b6108ea565b005b61047361096e565b60405161048091906115de565b60405180910390f35b606060038054610498906117c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906117c8565b801561050f5780601f106104e65761010080835404028352916020019161050f565b820191905f5260205f20905b8154815290600101906020018083116104f257829003601f168201915b5050505050905090565b5f5f610523610974565b905061053081858561097b565b600191505092915050565b61054361098d565b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f600254905090565b6105ac61098d565b80600d60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f5f6105fa610974565b9050610607858285610a14565b610612858585610aa7565b60019150509392505050565b5f6012905090565b600d5f9054906101000a900460ff1681565b600a5481565b61064661098d565b836008819055508260098190555081600a8190555080600b8190555050505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6106b561098d565b6106be5f610b97565b565b6106c861098d565b6001600d5f6101000a81548160ff021916908315150217905550565b60095481565b600c5481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606004805461074d906117c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610779906117c8565b80156107c45780601f1061079b576101008083540402835291602001916107c4565b820191905f5260205f20905b8154815290600101906020018083116107a757829003601f168201915b5050505050905090565b600b5481565b5f5f6107de610974565b90506107eb818585610aa7565b600191505092915050565b6107fe61098d565b8060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6108e061098d565b80600c8190555050565b6108f261098d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610962575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109599190611719565b60405180910390fd5b61096b81610b97565b50565b60085481565b5f33905090565b6109888383836001610c5a565b505050565b610995610974565b73ffffffffffffffffffffffffffffffffffffffff166109b36106f0565b73ffffffffffffffffffffffffffffffffffffffff1614610a12576109d6610974565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a099190611719565b60405180910390fd5b565b5f610a1f8484610856565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610aa15781811015610a92578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a89939291906117f8565b60405180910390fd5b610aa084848484035f610c5a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b17575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b0e9190611719565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b87575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b7e9190611719565b60405180910390fd5b610b92838383610e29565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610cca575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610cc19190611719565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d319190611719565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e23578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e1a91906115de565b60405180910390a35b50505050565b60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16158015610ec7575060065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b610f06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efd90611877565b60405180910390fd5b600d5f9054906101000a900460ff1680610f66575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c906118df565b60405180910390fd5b600c5481111580610ffc575060075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b61103b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110329061196d565b60405180910390fd5b5f60646008548361104c91906119b8565b6110569190611a26565b90505f60646009548461106991906119b8565b6110739190611a26565b90505f6064600a548561108691906119b8565b6110909190611a26565b90505f6064600b54866110a391906119b8565b6110ad9190611a26565b90505f81838587896110bf9190611a56565b6110c99190611a56565b6110d39190611a56565b6110dd9190611a56565b90505f8511156110f2576110f1888661113d565b5b5f8311156111285761112788600d60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856111bc565b5b6111338888836111bc565b5050505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016111a49190611719565b60405180910390fd5b6111b8825f83610e29565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361120c578060025f8282546112009190611a89565b925050819055506112da565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611295578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161128c939291906117f8565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611321578060025f828254039250508190555061136b565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113c891906115de565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611417826113d5565b61142181856113df565b93506114318185602086016113ef565b61143a816113fd565b840191505092915050565b5f6020820190508181035f83015261145d818461140d565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61149282611469565b9050919050565b6114a281611488565b81146114ac575f5ffd5b50565b5f813590506114bd81611499565b92915050565b5f819050919050565b6114d5816114c3565b81146114df575f5ffd5b50565b5f813590506114f0816114cc565b92915050565b5f5f6040838503121561150c5761150b611465565b5b5f611519858286016114af565b925050602061152a858286016114e2565b9150509250929050565b5f8115159050919050565b61154881611534565b82525050565b5f6020820190506115615f83018461153f565b92915050565b61157081611534565b811461157a575f5ffd5b50565b5f8135905061158b81611567565b92915050565b5f5f604083850312156115a7576115a6611465565b5b5f6115b4858286016114af565b92505060206115c58582860161157d565b9150509250929050565b6115d8816114c3565b82525050565b5f6020820190506115f15f8301846115cf565b92915050565b5f6020828403121561160c5761160b611465565b5b5f611619848285016114af565b91505092915050565b5f5f5f6060848603121561163957611638611465565b5b5f611646868287016114af565b9350506020611657868287016114af565b9250506040611668868287016114e2565b9150509250925092565b5f60ff82169050919050565b61168781611672565b82525050565b5f6020820190506116a05f83018461167e565b92915050565b5f5f5f5f608085870312156116be576116bd611465565b5b5f6116cb878288016114e2565b94505060206116dc878288016114e2565b93505060406116ed878288016114e2565b92505060606116fe878288016114e2565b91505092959194509250565b61171381611488565b82525050565b5f60208201905061172c5f83018461170a565b92915050565b5f5f6040838503121561174857611747611465565b5b5f611755858286016114af565b9250506020611766858286016114af565b9150509250929050565b5f6020828403121561178557611784611465565b5b5f611792848285016114e2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117df57607f821691505b6020821081036117f2576117f161179b565b5b50919050565b5f60608201905061180b5f83018661170a565b61181860208301856115cf565b61182560408301846115cf565b949350505050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f6118616016836113df565b915061186c8261182d565b602082019050919050565b5f6020820190508181035f83015261188e81611855565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564207965740000000000005f82015250565b5f6118c9601a836113df565b91506118d482611895565b602082019050919050565b5f6020820190508181035f8301526118f6816118bd565b9050919050565b7f5472616e7366657220616d6f756e742065786365656473206d6178206c696d695f8201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b5f6119576021836113df565b9150611962826118fd565b604082019050919050565b5f6020820190508181035f8301526119848161194b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6119c2826114c3565b91506119cd836114c3565b92508282026119db816114c3565b915082820484148315176119f2576119f161198b565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a30826114c3565b9150611a3b836114c3565b925082611a4b57611a4a6119f9565b5b828204905092915050565b5f611a60826114c3565b9150611a6b836114c3565b9250828203905081811115611a8357611a8261198b565b5b92915050565b5f611a93826114c3565b9150611a9e836114c3565b9250828201905080821115611ab657611ab561198b565b5b9291505056fea2646970667358221220428ea7b1b63950a0af2da46aa2aedd0b45103a17d7a263ca42c181104577a16164736f6c634300081d0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x171 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8A8C523C GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x98118CB4 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xEC28438A EQ PUSH2 0x433 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xFCE589D8 EQ PUSH2 0x46B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x98118CB4 EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0xC0246668 EQ PUSH2 0x3E7 JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x8B424267 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x8C0B5E22 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x8EA5220F EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x37B JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x6827E764 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x6FCBA377 EQ PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EF JUMPI PUSH2 0x171 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x1F53AC02 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x219 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x17D PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D8 SWAP2 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x5A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x233 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x638 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x63E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0x6AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0x6C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH2 0x6EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x383 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x390 SWAP2 SWAP1 PUSH2 0x1445 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x154E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0x856 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x448 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x469 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x473 PUSH2 0x96E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x480 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x498 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C4 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x523 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x530 DUP2 DUP6 DUP6 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x543 PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5AC PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5FA PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x607 DUP6 DUP3 DUP6 PUSH2 0xA14 JUMP JUMPDEST PUSH2 0x612 DUP6 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x646 PUSH2 0x98D JUMP JUMPDEST DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6B5 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x6BE PUSH0 PUSH2 0xB97 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C8 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x74D SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x779 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7DE PUSH2 0x974 JUMP JUMPDEST SWAP1 POP PUSH2 0x7EB DUP2 DUP6 DUP6 PUSH2 0xAA7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7FE PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8E0 PUSH2 0x98D JUMP JUMPDEST DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x8F2 PUSH2 0x98D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x962 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x96B DUP2 PUSH2 0xB97 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x988 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xC5A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x995 PUSH2 0x974 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B3 PUSH2 0x6F0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA12 JUMPI PUSH2 0x9D6 PUSH2 0x974 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA1F DUP5 DUP5 PUSH2 0x856 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAA1 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA92 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA0 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xC5A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB17 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0E SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB87 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB92 DUP4 DUP4 DUP4 PUSH2 0xE29 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE23 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEC7 JUMPI POP PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xF06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFD SWAP1 PUSH2 0x1877 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xF66 JUMPI POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP2 GT ISZERO DUP1 PUSH2 0xFFC JUMPI POP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x103B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1032 SWAP1 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x8 SLOAD DUP4 PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1056 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x9 SLOAD DUP5 PUSH2 0x1069 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA SLOAD DUP6 PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x1090 SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xB SLOAD DUP7 PUSH2 0x10A3 SWAP2 SWAP1 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 DUP6 DUP8 DUP10 PUSH2 0x10BF SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x10C9 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x10D3 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH2 0x10DD SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F1 DUP9 DUP7 PUSH2 0x113D JUMP JUMPDEST JUMPDEST PUSH0 DUP4 GT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1127 DUP9 PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH2 0x11BC JUMP JUMPDEST JUMPDEST PUSH2 0x1133 DUP9 DUP9 DUP4 PUSH2 0x11BC JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A4 SWAP2 SWAP1 PUSH2 0x1719 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11B8 DUP3 PUSH0 DUP4 PUSH2 0xE29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12DA JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1295 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1321 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x136B JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13C8 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1417 DUP3 PUSH2 0x13D5 JUMP JUMPDEST PUSH2 0x1421 DUP2 DUP6 PUSH2 0x13DF JUMP JUMPDEST SWAP4 POP PUSH2 0x1431 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13EF JUMP JUMPDEST PUSH2 0x143A DUP2 PUSH2 0x13FD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 DUP5 PUSH2 0x140D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1492 DUP3 PUSH2 0x1469 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14A2 DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP2 EQ PUSH2 0x14AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14BD DUP2 PUSH2 0x1499 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D5 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP2 EQ PUSH2 0x14DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F0 DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x150C JUMPI PUSH2 0x150B PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1519 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x152A DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1548 DUP2 PUSH2 0x1534 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1561 PUSH0 DUP4 ADD DUP5 PUSH2 0x153F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1570 DUP2 PUSH2 0x1534 JUMP JUMPDEST DUP2 EQ PUSH2 0x157A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158B DUP2 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B4 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15C5 DUP6 DUP3 DUP7 ADD PUSH2 0x157D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15D8 DUP2 PUSH2 0x14C3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x160C JUMPI PUSH2 0x160B PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1619 DUP5 DUP3 DUP6 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1639 JUMPI PUSH2 0x1638 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1646 DUP7 DUP3 DUP8 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1657 DUP7 DUP3 DUP8 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1668 DUP7 DUP3 DUP8 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1687 DUP2 PUSH2 0x1672 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x167E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16BE JUMPI PUSH2 0x16BD PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16CB DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16DC DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x16ED DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x16FE DUP8 DUP3 DUP9 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1713 DUP2 PUSH2 0x1488 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172C PUSH0 DUP4 ADD DUP5 PUSH2 0x170A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1748 JUMPI PUSH2 0x1747 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1755 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1766 DUP6 DUP3 DUP7 ADD PUSH2 0x14AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1785 JUMPI PUSH2 0x1784 PUSH2 0x1465 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1792 DUP5 DUP3 DUP6 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17F2 JUMPI PUSH2 0x17F1 PUSH2 0x179B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x180B PUSH0 DUP4 ADD DUP7 PUSH2 0x170A JUMP JUMPDEST PUSH2 0x1818 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x1825 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1861 PUSH1 0x16 DUP4 PUSH2 0x13DF JUMP JUMPDEST SWAP2 POP PUSH2 0x186C DUP3 PUSH2 0x182D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x188E DUP2 PUSH2 0x1855 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206973206E6F7420656E61626C656420796574000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C9 PUSH1 0x1A DUP4 PUSH2 0x13DF JUMP JUMPDEST SWAP2 POP PUSH2 0x18D4 DUP3 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F6 DUP2 PUSH2 0x18BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E7366657220616D6F756E742065786365656473206D6178206C696D69 PUSH0 DUP3 ADD MSTORE PUSH32 0x7400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1957 PUSH1 0x21 DUP4 PUSH2 0x13DF JUMP JUMPDEST SWAP2 POP PUSH2 0x1962 DUP3 PUSH2 0x18FD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1984 DUP2 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x19C2 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x19CD DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19DB DUP2 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19F2 JUMPI PUSH2 0x19F1 PUSH2 0x198B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A30 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3B DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A4B JUMPI PUSH2 0x1A4A PUSH2 0x19F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A60 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A6B DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A83 JUMPI PUSH2 0x1A82 PUSH2 0x198B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A93 DUP3 PUSH2 0x14C3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A9E DUP4 PUSH2 0x14C3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AB6 JUMPI PUSH2 0x1AB5 PUSH2 0x198B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP DUP15 0xA7 0xB1 0xB6 CODECOPY POP LOG0 0xAF 0x2D LOG4 PUSH11 0xA2AEDD0B45103A17D7A263 0xCA TIMESTAMP 0xC1 DUP2 LT GASLIMIT PUSH24 0xA16164736F6C634300081D00330000000000000000000000 ",
		"sourceMap": "174:2598:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:121:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1727:102:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4776:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:34:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;432:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1351:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;993:84:6;;;:::i;:::-;;380:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;536:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;639:24:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:31:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1214:129:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1609:110:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;332:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1085:121:6:-;1531:13:0;:11;:13::i;:::-;1192:6:6::1;1167:13;:22;1181:7;1167:22;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;1085:121:::0;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;1727:102:6:-;1531:13:0;:11;:13::i;:::-;1811:10:6::1;1799:9;;:22;;;;;;;;;;;;;;;;;;1727:102:::0;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;592:34:6:-;;;;;;;;;;;;;:::o;432:25::-;;;;:::o;1351:250::-;1531:13:0;:11;:13::i;:::-;1486:8:6::1;1476:7;:18;;;;1517:10;1505:9;:22;;;;1547:7;1538:6;:16;;;;1580:13;1565:12;:28;;;;1351:250:::0;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;993:84:6:-;1531:13:0;:11;:13::i;:::-;1065:4:6::1;1048:14;;:21;;;;;;;;;;;;;;;;;;993:84::o:0;380:28::-;;;;:::o;536:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;639:24:6:-;;;;;;;;;;;;;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;478:31:6:-;;;;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;1214:129:6:-;1531:13:0;:11;:13::i;:::-;1329:6:6::1;1299:18;:27;1318:7;1299:27;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1214:129:::0;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1609:110:6:-;1531:13:0;:11;:13::i;:::-;1699:12:6::1;1685:11;:26;;;;1609:110:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;332:26:6:-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10415:476:2:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;1837:932:6:-;1934:13;:19;1948:4;1934:19;;;;;;;;;;;;;;;;;;;;;;;;;1933:20;:42;;;;;1958:13;:17;1972:2;1958:17;;;;;;;;;;;;;;;;;;;;;;;;;1957:18;1933:42;1925:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2021:14;;;;;;;;;;;:42;;;;2039:18;:24;2058:4;2039:24;;;;;;;;;;;;;;;;;;;;;;;;;2021:42;2013:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2123:11;;2113:6;:21;;:49;;;;2138:18;:24;2157:4;2138:24;;;;;;;;;;;;;;;;;;;;;;;;;2113:49;2105:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;2213:18;2255:3;2244:7;;2235:6;:16;;;;:::i;:::-;2234:24;;;;:::i;:::-;2213:45;;2269:20;2315:3;2302:9;;2293:6;:18;;;;:::i;:::-;2292:26;;;;:::i;:::-;2269:49;;2329:17;2369:3;2359:6;;2350;:15;;;;:::i;:::-;2349:23;;;;:::i;:::-;2329:43;;2383:23;2435:3;2419:12;;2410:6;:21;;;;:::i;:::-;2409:29;;;;:::i;:::-;2383:55;;2449:18;2519:15;2507:9;2492:12;2479:10;2470:6;:19;;;;:::i;:::-;:34;;;;:::i;:::-;:46;;;;:::i;:::-;:64;;;;:::i;:::-;2449:85;;2564:1;2551:10;:14;2547:70;;;2582:23;2588:4;2594:10;2582:5;:23::i;:::-;2547:70;2643:1;2631:9;:13;2627:87;;;2661:41;2675:4;2681:9;;;;;;;;;;;2692;2661:13;:41::i;:::-;2627:87;2726:35;2740:4;2746:2;2750:10;2726:13;:35::i;:::-;1914:855;;;;;1837:932;;;:::o;7984:206:2:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:116::-;3409:21;3424:5;3409:21;:::i;:::-;3402:5;3399:32;3389:60;;3445:1;3442;3435:12;3389:60;3339:116;:::o;3461:133::-;3504:5;3542:6;3529:20;3520:29;;3558:30;3582:5;3558:30;:::i;:::-;3461:133;;;;:::o;3600:468::-;3665:6;3673;3722:2;3710:9;3701:7;3697:23;3693:32;3690:119;;;3728:79;;:::i;:::-;3690:119;3848:1;3873:53;3918:7;3909:6;3898:9;3894:22;3873:53;:::i;:::-;3863:63;;3819:117;3975:2;4001:50;4043:7;4034:6;4023:9;4019:22;4001:50;:::i;:::-;3991:60;;3946:115;3600:468;;;;;:::o;4074:118::-;4161:24;4179:5;4161:24;:::i;:::-;4156:3;4149:37;4074:118;;:::o;4198:222::-;4291:4;4329:2;4318:9;4314:18;4306:26;;4342:71;4410:1;4399:9;4395:17;4386:6;4342:71;:::i;:::-;4198:222;;;;:::o;4426:329::-;4485:6;4534:2;4522:9;4513:7;4509:23;4505:32;4502:119;;;4540:79;;:::i;:::-;4502:119;4660:1;4685:53;4730:7;4721:6;4710:9;4706:22;4685:53;:::i;:::-;4675:63;;4631:117;4426:329;;;;:::o;4761:619::-;4838:6;4846;4854;4903:2;4891:9;4882:7;4878:23;4874:32;4871:119;;;4909:79;;:::i;:::-;4871:119;5029:1;5054:53;5099:7;5090:6;5079:9;5075:22;5054:53;:::i;:::-;5044:63;;5000:117;5156:2;5182:53;5227:7;5218:6;5207:9;5203:22;5182:53;:::i;:::-;5172:63;;5127:118;5284:2;5310:53;5355:7;5346:6;5335:9;5331:22;5310:53;:::i;:::-;5300:63;;5255:118;4761:619;;;;;:::o;5386:86::-;5421:7;5461:4;5454:5;5450:16;5439:27;;5386:86;;;:::o;5478:112::-;5561:22;5577:5;5561:22;:::i;:::-;5556:3;5549:35;5478:112;;:::o;5596:214::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:67;5800:1;5789:9;5785:17;5776:6;5736:67;:::i;:::-;5596:214;;;;:::o;5816:765::-;5902:6;5910;5918;5926;5975:3;5963:9;5954:7;5950:23;5946:33;5943:120;;;5982:79;;:::i;:::-;5943:120;6102:1;6127:53;6172:7;6163:6;6152:9;6148:22;6127:53;:::i;:::-;6117:63;;6073:117;6229:2;6255:53;6300:7;6291:6;6280:9;6276:22;6255:53;:::i;:::-;6245:63;;6200:118;6357:2;6383:53;6428:7;6419:6;6408:9;6404:22;6383:53;:::i;:::-;6373:63;;6328:118;6485:2;6511:53;6556:7;6547:6;6536:9;6532:22;6511:53;:::i;:::-;6501:63;;6456:118;5816:765;;;;;;;:::o;6587:118::-;6674:24;6692:5;6674:24;:::i;:::-;6669:3;6662:37;6587:118;;:::o;6711:222::-;6804:4;6842:2;6831:9;6827:18;6819:26;;6855:71;6923:1;6912:9;6908:17;6899:6;6855:71;:::i;:::-;6711:222;;;;:::o;6939:474::-;7007:6;7015;7064:2;7052:9;7043:7;7039:23;7035:32;7032:119;;;7070:79;;:::i;:::-;7032:119;7190:1;7215:53;7260:7;7251:6;7240:9;7236:22;7215:53;:::i;:::-;7205:63;;7161:117;7317:2;7343:53;7388:7;7379:6;7368:9;7364:22;7343:53;:::i;:::-;7333:63;;7288:118;6939:474;;;;;:::o;7419:329::-;7478:6;7527:2;7515:9;7506:7;7502:23;7498:32;7495:119;;;7533:79;;:::i;:::-;7495:119;7653:1;7678:53;7723:7;7714:6;7703:9;7699:22;7678:53;:::i;:::-;7668:63;;7624:117;7419:329;;;;:::o;7754:180::-;7802:77;7799:1;7792:88;7899:4;7896:1;7889:15;7923:4;7920:1;7913:15;7940:320;7984:6;8021:1;8015:4;8011:12;8001:22;;8068:1;8062:4;8058:12;8089:18;8079:81;;8145:4;8137:6;8133:17;8123:27;;8079:81;8207:2;8199:6;8196:14;8176:18;8173:38;8170:84;;8226:18;;:::i;:::-;8170:84;7991:269;7940:320;;;:::o;8266:442::-;8415:4;8453:2;8442:9;8438:18;8430:26;;8466:71;8534:1;8523:9;8519:17;8510:6;8466:71;:::i;:::-;8547:72;8615:2;8604:9;8600:18;8591:6;8547:72;:::i;:::-;8629;8697:2;8686:9;8682:18;8673:6;8629:72;:::i;:::-;8266:442;;;;;;:::o;8714:172::-;8854:24;8850:1;8842:6;8838:14;8831:48;8714:172;:::o;8892:366::-;9034:3;9055:67;9119:2;9114:3;9055:67;:::i;:::-;9048:74;;9131:93;9220:3;9131:93;:::i;:::-;9249:2;9244:3;9240:12;9233:19;;8892:366;;;:::o;9264:419::-;9430:4;9468:2;9457:9;9453:18;9445:26;;9517:9;9511:4;9507:20;9503:1;9492:9;9488:17;9481:47;9545:131;9671:4;9545:131;:::i;:::-;9537:139;;9264:419;;;:::o;9689:176::-;9829:28;9825:1;9817:6;9813:14;9806:52;9689:176;:::o;9871:366::-;10013:3;10034:67;10098:2;10093:3;10034:67;:::i;:::-;10027:74;;10110:93;10199:3;10110:93;:::i;:::-;10228:2;10223:3;10219:12;10212:19;;9871:366;;;:::o;10243:419::-;10409:4;10447:2;10436:9;10432:18;10424:26;;10496:9;10490:4;10486:20;10482:1;10471:9;10467:17;10460:47;10524:131;10650:4;10524:131;:::i;:::-;10516:139;;10243:419;;;:::o;10668:220::-;10808:34;10804:1;10796:6;10792:14;10785:58;10877:3;10872:2;10864:6;10860:15;10853:28;10668:220;:::o;10894:366::-;11036:3;11057:67;11121:2;11116:3;11057:67;:::i;:::-;11050:74;;11133:93;11222:3;11133:93;:::i;:::-;11251:2;11246:3;11242:12;11235:19;;10894:366;;;:::o;11266:419::-;11432:4;11470:2;11459:9;11455:18;11447:26;;11519:9;11513:4;11509:20;11505:1;11494:9;11490:17;11483:47;11547:131;11673:4;11547:131;:::i;:::-;11539:139;;11266:419;;;:::o;11691:180::-;11739:77;11736:1;11729:88;11836:4;11833:1;11826:15;11860:4;11857:1;11850:15;11877:410;11917:7;11940:20;11958:1;11940:20;:::i;:::-;11935:25;;11974:20;11992:1;11974:20;:::i;:::-;11969:25;;12029:1;12026;12022:9;12051:30;12069:11;12051:30;:::i;:::-;12040:41;;12230:1;12221:7;12217:15;12214:1;12211:22;12191:1;12184:9;12164:83;12141:139;;12260:18;;:::i;:::-;12141:139;11925:362;11877:410;;;;:::o;12293:180::-;12341:77;12338:1;12331:88;12438:4;12435:1;12428:15;12462:4;12459:1;12452:15;12479:185;12519:1;12536:20;12554:1;12536:20;:::i;:::-;12531:25;;12570:20;12588:1;12570:20;:::i;:::-;12565:25;;12609:1;12599:35;;12614:18;;:::i;:::-;12599:35;12656:1;12653;12649:9;12644:14;;12479:185;;;;:::o;12670:194::-;12710:4;12730:20;12748:1;12730:20;:::i;:::-;12725:25;;12764:20;12782:1;12764:20;:::i;:::-;12759:25;;12808:1;12805;12801:9;12793:17;;12832:1;12826:4;12823:11;12820:37;;;12837:18;;:::i;:::-;12820:37;12670:194;;;;:::o;12870:191::-;12910:3;12929:20;12947:1;12929:20;:::i;:::-;12924:25;;12963:20;12981:1;12963:20;:::i;:::-;12958:25;;13006:1;13003;12999:9;12992:16;;13027:3;13024:1;13021:10;13018:36;;;13034:18;;:::i;:::-;13018:36;12870:191;;;;:::o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract ZiggiToken is ERC20, ...\n  PUSH 40\t\t\tcontract ZiggiToken is ERC20, ...\n  MSTORE \t\t\tcontract ZiggiToken is ERC20, ...\n  PUSH 2\t\t\t2\n  PUSH 8\t\t\tuint256 public burnFee = 2\n  SSTORE \t\t\tuint256 public burnFee = 2\n  PUSH 1\t\t\t1\n  PUSH 9\t\t\tuint256 public rewardFee = 1\n  SSTORE \t\t\tuint256 public rewardFee = 1\n  PUSH 1\t\t\t1\n  PUSH A\t\t\tuint256 public devFee = 1\n  SSTORE \t\t\tuint256 public devFee = 1\n  PUSH 5\t\t\t5\n  PUSH B\t\t\tuint256 public liquidityFee = ...\n  SSTORE \t\t\tuint256 public liquidityFee = ...\n  PUSH 0\t\t\tfalse\n  PUSH D\t\t\tbool public tradingEnabled = f...\n  PUSH 0\t\t\tbool public tradingEnabled = f...\n  PUSH 100\t\t\tbool public tradingEnabled = f...\n  EXP \t\t\tbool public tradingEnabled = f...\n  DUP2 \t\t\tbool public tradingEnabled = f...\n  SLOAD \t\t\tbool public tradingEnabled = f...\n  DUP2 \t\t\tbool public tradingEnabled = f...\n  PUSH FF\t\t\tbool public tradingEnabled = f...\n  MUL \t\t\tbool public tradingEnabled = f...\n  NOT \t\t\tbool public tradingEnabled = f...\n  AND \t\t\tbool public tradingEnabled = f...\n  SWAP1 \t\t\tbool public tradingEnabled = f...\n  DUP4 \t\t\tbool public tradingEnabled = f...\n  ISZERO \t\t\tbool public tradingEnabled = f...\n  ISZERO \t\t\tbool public tradingEnabled = f...\n  MUL \t\t\tbool public tradingEnabled = f...\n  OR \t\t\tbool public tradingEnabled = f...\n  SWAP1 \t\t\tbool public tradingEnabled = f...\n  SSTORE \t\t\tbool public tradingEnabled = f...\n  POP \t\t\tbool public tradingEnabled = f...\n  CALLVALUE \t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  DUP1 \t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  ISZERO \t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  PUSH [tag] 1\t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  JUMPI \t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  PUSH 0\t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  PUSH 0\t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  REVERT \t\t\tconstructor() ERC20(\"Ziggi\", \"...\ntag 1\t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  JUMPDEST \t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  POP \t\t\tconstructor() ERC20(\"Ziggi\", \"...\n  CALLER \t\t\tmsg.sender\n  PUSH 40\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MLOAD \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP1 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 40\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  ADD \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 40\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MSTORE \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP1 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 5\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP2 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MSTORE \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 20\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  ADD \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 5A69676769000000000000000000000000000000000000000000000000000000\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP2 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MSTORE \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  POP \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 40\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MLOAD \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP1 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 40\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  ADD \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 40\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MSTORE \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP1 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 5\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP2 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MSTORE \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 20\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  ADD \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 5A49474749000000000000000000000000000000000000000000000000000000\t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP2 \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  MSTORE \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  POP \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  DUP2 \t\t\t\\r\\n   \n  PUSH 3\t\t\tyOwne\n  SWAP1 \t\t\tyOwner {\\r\\n   \n  DUP2 \t\t\tyOwner {\\r\\n   \n  PUSH [tag] 6\t\t\tyOwner {\\r\\n   \n  SWAP2 \t\t\tyOwner {\\r\\n   \n  SWAP1 \t\t\tyOwner {\\r\\n   \n  PUSH [tag] 7\t\t\tyOwner {\\r\\n   \n  JUMP \t\t\tyOwner {\\r\\n   \ntag 6\t\t\tyOwner {\\r\\n   \n  JUMPDEST \t\t\tyOwner {\\r\\n   \n  POP \t\t\tyOwner {\\r\\n   \n  DUP1 \t\t\tmaxTxAm\n  PUSH 4\t\t\tAmount \n  SWAP1 \t\t\tAmount = _maxTxAm\n  DUP2 \t\t\tAmount = _maxTxAm\n  PUSH [tag] 8\t\t\tAmount = _maxTxAm\n  SWAP2 \t\t\tAmount = _maxTxAm\n  SWAP1 \t\t\tAmount = _maxTxAm\n  PUSH [tag] 7\t\t\tAmount = _maxTxAm\n  JUMP \t\t\tAmount = _maxTxAm\ntag 8\t\t\tAmount = _maxTxAm\n  JUMPDEST \t\t\tAmount = _maxTxAm\n  POP \t\t\tAmount = _maxTxAm\n  POP \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  POP \t\t\t\\r\\n\\r\\n    function setMaxTxA...\n  PUSH 0\t\t\t \n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trnal onlyOwner {\\r\\n        \n  AND \t\t\trnal onlyOwner {\\r\\n        \n  DUP2 \t\t\trnal onlyOwn\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\trnal onlyOwner {\\r\\n        \n  AND \t\t\trnal onlyOwner {\\r\\n        \n  SUB \t\t\trnal onlyOwner {\\r\\n        \n  PUSH [tag] 10\t\t\texternal onlyOwner {\\r\\n      ...\n  JUMPI \t\t\texternal onlyOwner {\\r\\n      ...\n  PUSH 0\t\t\t \n  PUSH 40\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  MLOAD \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  PUSH 1E4FBDF700000000000000000000000000000000000000000000000000000000\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  DUP2 \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  MSTORE \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  PUSH 4\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  ADD \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  PUSH [tag] 11\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  SWAP2 \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  SWAP1 \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  PUSH [tag] 12\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  JUMP \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\ntag 11\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  JUMPDEST \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  PUSH 40\t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  MLOAD \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  DUP1 \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  SWAP2 \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  SUB \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  SWAP1 \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\n  REVERT \t\t\tunt] = status;\\r\\n    }\\r\\n\\r\\...\ntag 10\t\t\texternal onlyOwner {\\r\\n      ...\n  JUMPDEST \t\t\texternal onlyOwner {\\r\\n      ...\n  PUSH [tag] 13\t\t\t56 _burnFee, uint256 _rewardFe...\n  DUP2 \t\t\t6 _rewardFee\n  PUSH [tag] 14\t\t\t56 _burnFee, uint2\n  PUSH 20\t\t\t56 _burnFee, uint2\n  SHL \t\t\t56 _burnFee, uint2\n  PUSH 20\t\t\t56 _burnFee, uint256 _rewardFe...\n  SHR \t\t\t56 _burnFee, uint256 _rewardFe...\n  JUMP \t\t\t56 _burnFee, uint256 _rewardFe...\ntag 13\t\t\t56 _burnFee, uint256 _rewardFe...\n  JUMPDEST \t\t\t56 _burnFee, uint256 _rewardFe...\n  POP \t\t\tcludeFromFees(address account,...\n  PUSH 0\t\t\tuint256 totalSupply\n  PUSH [tag] 16\t\t\tdecimals()\n  PUSH [tag] 17\t\t\tdecimals\n  PUSH 20\t\t\tdecimals\n  SHL \t\t\tdecimals\n  PUSH 20\t\t\tdecimals()\n  SHR \t\t\tdecimals()\n  JUMP \t\t\tdecimals()\ntag 16\t\t\tdecimals()\n  JUMPDEST \t\t\tdecimals()\n  PUSH A\t\t\t10\n  PUSH [tag] 18\t\t\t10 ** decimals()\n  SWAP2 \t\t\t10 ** decimals()\n  SWAP1 \t\t\t10 ** decimals()\n  PUSH [tag] 19\t\t\t10 ** decimals()\n  JUMP \t\t\t10 ** decimals()\ntag 18\t\t\t10 ** decimals()\n  JUMPDEST \t\t\t10 ** decimals()\n  PUSH F4240\t\t\t1_000_000\n  PUSH [tag] 20\t\t\t1_000_000 * 10 ** decimals()\n  SWAP2 \t\t\t1_000_000 * 10 ** decimals()\n  SWAP1 \t\t\t1_000_000 * 10 ** decimals()\n  PUSH [tag] 21\t\t\t1_000_000 * 10 ** decimals()\n  JUMP \t\t\t1_000_000 * 10 ** decimals()\ntag 20\t\t\t1_000_000 * 10 ** decimals()\n  JUMPDEST \t\t\t1_000_000 * 10 ** decimals()\n  SWAP1 \t\t\tuint256 totalSupply = 1_000_00...\n  POP \t\t\tuint256 totalSupply = 1_000_00...\n  PUSH [tag] 22\t\t\t_mint(msg.sender, totalSupply)\n  CALLER \t\t\tmsg.sender\n  DUP3 \t\t\ttotalSupply\n  PUSH [tag] 23\t\t\t_mint\n  PUSH 20\t\t\t_mint\n  SHL \t\t\t_mint\n  PUSH 20\t\t\t_mint(msg.sender, totalSupply)\n  SHR \t\t\t_mint(msg.sender, totalSupply)\n  JUMP \t\t\t_mint(msg.sender, totalSupply)\ntag 22\t\t\t_mint(msg.sender, totalSupply)\n  JUMPDEST \t\t\t_mint(msg.sender, totalSupply)\n  PUSH 64\t\t\t100\n  DUP2 \t\t\ttotalSupply\n  PUSH [tag] 24\t\t\ttotalSupply / 100\n  SWAP2 \t\t\ttotalSupply / 100\n  SWAP1 \t\t\ttotalSupply / 100\n  PUSH [tag] 25\t\t\ttotalSupply / 100\n  JUMP \t\t\ttotalSupply / 100\ntag 24\t\t\ttotalSupply / 100\n  JUMPDEST \t\t\ttotalSupply / 100\n  PUSH C\t\t\tmaxTxAmount\n  DUP2 \t\t\tmaxTxAmount = totalSupply / 10...\n  SWAP1 \t\t\tmaxTxAmount = totalSupply / 10...\n  SSTORE \t\t\tmaxTxAmount = totalSupply / 10...\n  POP \t\t\tmaxTxAmount = totalSupply / 10...\n  CALLER \t\t\tmsg.sender\n  PUSH D\t\t\tdevWallet\n  PUSH 1\t\t\tdevWallet\n  PUSH 100\t\t\tdevWallet = msg.sender\n  EXP \t\t\tdevWallet = msg.sender\n  DUP2 \t\t\tdevWallet = msg.sender\n  SLOAD \t\t\tdevWallet = msg.sender\n  DUP2 \t\t\tdevWallet = msg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdevWallet = msg.sender\n  MUL \t\t\tdevWallet = msg.sender\n  NOT \t\t\tdevWallet = msg.sender\n  AND \t\t\tdevWallet = msg.sender\n  SWAP1 \t\t\tdevWallet = msg.sender\n  DUP4 \t\t\tdevWallet = msg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdevWallet = msg.sender\n  AND \t\t\tdevWallet = msg.sender\n  MUL \t\t\tdevWallet = msg.sender\n  OR \t\t\tdevWallet = msg.sender\n  SWAP1 \t\t\tdevWallet = msg.sender\n  SSTORE \t\t\tdevWallet = msg.sender\n  POP \t\t\tdevWallet = msg.sender\n  PUSH 1\t\t\ttrue\n  PUSH 7\t\t\tisExcludedFromFees\n  PUSH 0\t\t\tisExcludedFromFees[msg.sender]\n  CALLER \t\t\tmsg.sender\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[msg.sender]\n  AND \t\t\tisExcludedFromFees[msg.sender]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[msg.sender]\n  AND \t\t\tisExcludedFromFees[msg.sender]\n  DUP2 \t\t\tisExcludedFromFees[msg.sender]\n  MSTORE \t\t\tisExcludedFromFees[msg.sender]\n  PUSH 20\t\t\tisExcludedFromFees[msg.sender]\n  ADD \t\t\tisExcludedFromFees[msg.sender]\n  SWAP1 \t\t\tisExcludedFromFees[msg.sender]\n  DUP2 \t\t\tisExcludedFromFees[msg.sender]\n  MSTORE \t\t\tisExcludedFromFees[msg.sender]\n  PUSH 20\t\t\tisExcludedFromFees[msg.sender]\n  ADD \t\t\tisExcludedFromFees[msg.sender]\n  PUSH 0\t\t\tisExcludedFromFees[msg.sender]\n  KECCAK256 \t\t\tisExcludedFromFees[msg.sender]\n  PUSH 0\t\t\tisExcludedFromFees[msg.sender]\n  PUSH 100\t\t\tisExcludedFromFees[msg.sender]...\n  EXP \t\t\tisExcludedFromFees[msg.sender]...\n  DUP2 \t\t\tisExcludedFromFees[msg.sender]...\n  SLOAD \t\t\tisExcludedFromFees[msg.sender]...\n  DUP2 \t\t\tisExcludedFromFees[msg.sender]...\n  PUSH FF\t\t\tisExcludedFromFees[msg.sender]...\n  MUL \t\t\tisExcludedFromFees[msg.sender]...\n  NOT \t\t\tisExcludedFromFees[msg.sender]...\n  AND \t\t\tisExcludedFromFees[msg.sender]...\n  SWAP1 \t\t\tisExcludedFromFees[msg.sender]...\n  DUP4 \t\t\tisExcludedFromFees[msg.sender]...\n  ISZERO \t\t\tisExcludedFromFees[msg.sender]...\n  ISZERO \t\t\tisExcludedFromFees[msg.sender]...\n  MUL \t\t\tisExcludedFromFees[msg.sender]...\n  OR \t\t\tisExcludedFromFees[msg.sender]...\n  SWAP1 \t\t\tisExcludedFromFees[msg.sender]...\n  SSTORE \t\t\tisExcludedFromFees[msg.sender]...\n  POP \t\t\tisExcludedFromFees[msg.sender]...\n  POP \t\t\t{\\r\\n        uint256 totalSupp...\n  PUSH [tag] 26\t\t\tcontract ZiggiToken is ERC20, ...\n  JUMP \t\t\tcontract ZiggiToken is ERC20, ...\ntag 14\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 5\t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  SLOAD \t\t\t\n  SWAP1 \t\t\t\n  PUSH 100\t\t\t\n  EXP \t\t\t\n  SWAP1 \t\t\t\n  DIV \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH 5\t\t\t\n  PUSH 0\t\t\t\n  PUSH 100\t\t\t\n  EXP \t\t\t\n  DUP2 \t\t\t\n  SLOAD \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  MUL \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  DUP4 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  MUL \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 17\t\t\t      }\\r\\n\\r\\n        super._...\n  JUMPDEST \t\t\t      }\\r\\n\\r\\n        super._...\n  PUSH 0\t\t\tount)\n  PUSH 12\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP1 \t\t\t      }\\r\\n\\r\\n        super._...\n  JUMP \t\t\t      }\\r\\n\\r\\n        super._...\ntag 23\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 30\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH EC442F0500000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 31\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 31\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 30\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 32\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 33\t\t\t\n  PUSH 20\t\t\t\n  SHL \t\t\t\n  PUSH 20\t\t\t\n  SHR \t\t\t\n  JUMP \t\t\t\ntag 32\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 33\t\t\tfunction _update(address from,...\n  JUMPDEST \t\t\tfunction _update(address from,...\n  PUSH 6\t\t\tisBlacklisted\n  PUSH 0\t\t\tisBlacklisted[from]\n  DUP5 \t\t\tfrom\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[from]\n  AND \t\t\tisBlacklisted[from]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[from]\n  AND \t\t\tisBlacklisted[from]\n  DUP2 \t\t\tisBlacklisted[from]\n  MSTORE \t\t\tisBlacklisted[from]\n  PUSH 20\t\t\tisBlacklisted[from]\n  ADD \t\t\tisBlacklisted[from]\n  SWAP1 \t\t\tisBlacklisted[from]\n  DUP2 \t\t\tisBlacklisted[from]\n  MSTORE \t\t\tisBlacklisted[from]\n  PUSH 20\t\t\tisBlacklisted[from]\n  ADD \t\t\tisBlacklisted[from]\n  PUSH 0\t\t\tisBlacklisted[from]\n  KECCAK256 \t\t\tisBlacklisted[from]\n  PUSH 0\t\t\tisBlacklisted[from]\n  SWAP1 \t\t\tisBlacklisted[from]\n  SLOAD \t\t\tisBlacklisted[from]\n  SWAP1 \t\t\tisBlacklisted[from]\n  PUSH 100\t\t\tisBlacklisted[from]\n  EXP \t\t\tisBlacklisted[from]\n  SWAP1 \t\t\tisBlacklisted[from]\n  DIV \t\t\tisBlacklisted[from]\n  PUSH FF\t\t\tisBlacklisted[from]\n  AND \t\t\tisBlacklisted[from]\n  ISZERO \t\t\t!isBlacklisted[from]\n  DUP1 \t\t\t!isBlacklisted[from] && !isBla...\n  ISZERO \t\t\t!isBlacklisted[from] && !isBla...\n  PUSH [tag] 35\t\t\t!isBlacklisted[from] && !isBla...\n  JUMPI \t\t\t!isBlacklisted[from] && !isBla...\n  POP \t\t\t!isBlacklisted[from] && !isBla...\n  PUSH 6\t\t\tisBlacklisted\n  PUSH 0\t\t\tisBlacklisted[to]\n  DUP4 \t\t\tto\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[to]\n  AND \t\t\tisBlacklisted[to]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[to]\n  AND \t\t\tisBlacklisted[to]\n  DUP2 \t\t\tisBlacklisted[to]\n  MSTORE \t\t\tisBlacklisted[to]\n  PUSH 20\t\t\tisBlacklisted[to]\n  ADD \t\t\tisBlacklisted[to]\n  SWAP1 \t\t\tisBlacklisted[to]\n  DUP2 \t\t\tisBlacklisted[to]\n  MSTORE \t\t\tisBlacklisted[to]\n  PUSH 20\t\t\tisBlacklisted[to]\n  ADD \t\t\tisBlacklisted[to]\n  PUSH 0\t\t\tisBlacklisted[to]\n  KECCAK256 \t\t\tisBlacklisted[to]\n  PUSH 0\t\t\tisBlacklisted[to]\n  SWAP1 \t\t\tisBlacklisted[to]\n  SLOAD \t\t\tisBlacklisted[to]\n  SWAP1 \t\t\tisBlacklisted[to]\n  PUSH 100\t\t\tisBlacklisted[to]\n  EXP \t\t\tisBlacklisted[to]\n  SWAP1 \t\t\tisBlacklisted[to]\n  DIV \t\t\tisBlacklisted[to]\n  PUSH FF\t\t\tisBlacklisted[to]\n  AND \t\t\tisBlacklisted[to]\n  ISZERO \t\t\t!isBlacklisted[to]\ntag 35\t\t\t!isBlacklisted[from] && !isBla...\n  JUMPDEST \t\t\t!isBlacklisted[from] && !isBla...\n  PUSH [tag] 36\t\t\trequire(!isBlacklisted[from] &...\n  JUMPI \t\t\trequire(!isBlacklisted[from] &...\n  PUSH 40\t\t\trequire(!isBlacklisted[from] &...\n  MLOAD \t\t\trequire(!isBlacklisted[from] &...\n  PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(!isBlacklisted[from] &...\n  DUP2 \t\t\trequire(!isBlacklisted[from] &...\n  MSTORE \t\t\trequire(!isBlacklisted[from] &...\n  PUSH 4\t\t\trequire(!isBlacklisted[from] &...\n  ADD \t\t\trequire(!isBlacklisted[from] &...\n  PUSH [tag] 37\t\t\trequire(!isBlacklisted[from] &...\n  SWAP1 \t\t\trequire(!isBlacklisted[from] &...\n  PUSH [tag] 38\t\t\trequire(!isBlacklisted[from] &...\n  JUMP \t\t\trequire(!isBlacklisted[from] &...\ntag 37\t\t\trequire(!isBlacklisted[from] &...\n  JUMPDEST \t\t\trequire(!isBlacklisted[from] &...\n  PUSH 40\t\t\trequire(!isBlacklisted[from] &...\n  MLOAD \t\t\trequire(!isBlacklisted[from] &...\n  DUP1 \t\t\trequire(!isBlacklisted[from] &...\n  SWAP2 \t\t\trequire(!isBlacklisted[from] &...\n  SUB \t\t\trequire(!isBlacklisted[from] &...\n  SWAP1 \t\t\trequire(!isBlacklisted[from] &...\n  REVERT \t\t\trequire(!isBlacklisted[from] &...\ntag 36\t\t\trequire(!isBlacklisted[from] &...\n  JUMPDEST \t\t\trequire(!isBlacklisted[from] &...\n  PUSH D\t\t\ttradingEnabled\n  PUSH 0\t\t\ttradingEnabled\n  SWAP1 \t\t\ttradingEnabled\n  SLOAD \t\t\ttradingEnabled\n  SWAP1 \t\t\ttradingEnabled\n  PUSH 100\t\t\ttradingEnabled\n  EXP \t\t\ttradingEnabled\n  SWAP1 \t\t\ttradingEnabled\n  DIV \t\t\ttradingEnabled\n  PUSH FF\t\t\ttradingEnabled\n  AND \t\t\ttradingEnabled\n  DUP1 \t\t\ttradingEnabled || isExcludedFr...\n  PUSH [tag] 39\t\t\ttradingEnabled || isExcludedFr...\n  JUMPI \t\t\ttradingEnabled || isExcludedFr...\n  POP \t\t\ttradingEnabled || isExcludedFr...\n  PUSH 7\t\t\tisExcludedFromFees\n  PUSH 0\t\t\tisExcludedFromFees[from]\n  DUP5 \t\t\tfrom\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n  AND \t\t\tisExcludedFromFees[from]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n  AND \t\t\tisExcludedFromFees[from]\n  DUP2 \t\t\tisExcludedFromFees[from]\n  MSTORE \t\t\tisExcludedFromFees[from]\n  PUSH 20\t\t\tisExcludedFromFees[from]\n  ADD \t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  DUP2 \t\t\tisExcludedFromFees[from]\n  MSTORE \t\t\tisExcludedFromFees[from]\n  PUSH 20\t\t\tisExcludedFromFees[from]\n  ADD \t\t\tisExcludedFromFees[from]\n  PUSH 0\t\t\tisExcludedFromFees[from]\n  KECCAK256 \t\t\tisExcludedFromFees[from]\n  PUSH 0\t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  SLOAD \t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  PUSH 100\t\t\tisExcludedFromFees[from]\n  EXP \t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  DIV \t\t\tisExcludedFromFees[from]\n  PUSH FF\t\t\tisExcludedFromFees[from]\n  AND \t\t\tisExcludedFromFees[from]\ntag 39\t\t\ttradingEnabled || isExcludedFr...\n  JUMPDEST \t\t\ttradingEnabled || isExcludedFr...\n  PUSH [tag] 40\t\t\trequire(tradingEnabled || isEx...\n  JUMPI \t\t\trequire(tradingEnabled || isEx...\n  PUSH 40\t\t\trequire(tradingEnabled || isEx...\n  MLOAD \t\t\trequire(tradingEnabled || isEx...\n  PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(tradingEnabled || isEx...\n  DUP2 \t\t\trequire(tradingEnabled || isEx...\n  MSTORE \t\t\trequire(tradingEnabled || isEx...\n  PUSH 4\t\t\trequire(tradingEnabled || isEx...\n  ADD \t\t\trequire(tradingEnabled || isEx...\n  PUSH [tag] 41\t\t\trequire(tradingEnabled || isEx...\n  SWAP1 \t\t\trequire(tradingEnabled || isEx...\n  PUSH [tag] 42\t\t\trequire(tradingEnabled || isEx...\n  JUMP \t\t\trequire(tradingEnabled || isEx...\ntag 41\t\t\trequire(tradingEnabled || isEx...\n  JUMPDEST \t\t\trequire(tradingEnabled || isEx...\n  PUSH 40\t\t\trequire(tradingEnabled || isEx...\n  MLOAD \t\t\trequire(tradingEnabled || isEx...\n  DUP1 \t\t\trequire(tradingEnabled || isEx...\n  SWAP2 \t\t\trequire(tradingEnabled || isEx...\n  SUB \t\t\trequire(tradingEnabled || isEx...\n  SWAP1 \t\t\trequire(tradingEnabled || isEx...\n  REVERT \t\t\trequire(tradingEnabled || isEx...\ntag 40\t\t\trequire(tradingEnabled || isEx...\n  JUMPDEST \t\t\trequire(tradingEnabled || isEx...\n  PUSH C\t\t\tmaxTxAmount\n  SLOAD \t\t\tmaxTxAmount\n  DUP2 \t\t\tamount\n  GT \t\t\tamount <= maxTxAmount\n  ISZERO \t\t\tamount <= maxTxAmount\n  DUP1 \t\t\tamount <= maxTxAmount || isExc...\n  PUSH [tag] 43\t\t\tamount <= maxTxAmount || isExc...\n  JUMPI \t\t\tamount <= maxTxAmount || isExc...\n  POP \t\t\tamount <= maxTxAmount || isExc...\n  PUSH 7\t\t\tisExcludedFromFees\n  PUSH 0\t\t\tisExcludedFromFees[from]\n  DUP5 \t\t\tfrom\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n  AND \t\t\tisExcludedFromFees[from]\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n  AND \t\t\tisExcludedFromFees[from]\n  DUP2 \t\t\tisExcludedFromFees[from]\n  MSTORE \t\t\tisExcludedFromFees[from]\n  PUSH 20\t\t\tisExcludedFromFees[from]\n  ADD \t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  DUP2 \t\t\tisExcludedFromFees[from]\n  MSTORE \t\t\tisExcludedFromFees[from]\n  PUSH 20\t\t\tisExcludedFromFees[from]\n  ADD \t\t\tisExcludedFromFees[from]\n  PUSH 0\t\t\tisExcludedFromFees[from]\n  KECCAK256 \t\t\tisExcludedFromFees[from]\n  PUSH 0\t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  SLOAD \t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  PUSH 100\t\t\tisExcludedFromFees[from]\n  EXP \t\t\tisExcludedFromFees[from]\n  SWAP1 \t\t\tisExcludedFromFees[from]\n  DIV \t\t\tisExcludedFromFees[from]\n  PUSH FF\t\t\tisExcludedFromFees[from]\n  AND \t\t\tisExcludedFromFees[from]\ntag 43\t\t\tamount <= maxTxAmount || isExc...\n  JUMPDEST \t\t\tamount <= maxTxAmount || isExc...\n  PUSH [tag] 44\t\t\trequire(amount <= maxTxAmount ...\n  JUMPI \t\t\trequire(amount <= maxTxAmount ...\n  PUSH 40\t\t\trequire(amount <= maxTxAmount ...\n  MLOAD \t\t\trequire(amount <= maxTxAmount ...\n  PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(amount <= maxTxAmount ...\n  DUP2 \t\t\trequire(amount <= maxTxAmount ...\n  MSTORE \t\t\trequire(amount <= maxTxAmount ...\n  PUSH 4\t\t\trequire(amount <= maxTxAmount ...\n  ADD \t\t\trequire(amount <= maxTxAmount ...\n  PUSH [tag] 45\t\t\trequire(amount <= maxTxAmount ...\n  SWAP1 \t\t\trequire(amount <= maxTxAmount ...\n  PUSH [tag] 46\t\t\trequire(amount <= maxTxAmount ...\n  JUMP \t\t\trequire(amount <= maxTxAmount ...\ntag 45\t\t\trequire(amount <= maxTxAmount ...\n  JUMPDEST \t\t\trequire(amount <= maxTxAmount ...\n  PUSH 40\t\t\trequire(amount <= maxTxAmount ...\n  MLOAD \t\t\trequire(amount <= maxTxAmount ...\n  DUP1 \t\t\trequire(amount <= maxTxAmount ...\n  SWAP2 \t\t\trequire(amount <= maxTxAmount ...\n  SUB \t\t\trequire(amount <= maxTxAmount ...\n  SWAP1 \t\t\trequire(amount <= maxTxAmount ...\n  REVERT \t\t\trequire(amount <= maxTxAmount ...\ntag 44\t\t\trequire(amount <= maxTxAmount ...\n  JUMPDEST \t\t\trequire(amount <= maxTxAmount ...\n  PUSH 0\t\t\tuint256 burnAmount\n  PUSH 64\t\t\t100\n  PUSH 8\t\t\tburnFee\n  SLOAD \t\t\tburnFee\n  DUP4 \t\t\tamount\n  PUSH [tag] 47\t\t\tamount * burnFee\n  SWAP2 \t\t\tamount * burnFee\n  SWAP1 \t\t\tamount * burnFee\n  PUSH [tag] 21\t\t\tamount * burnFee\n  JUMP \t\t\tamount * burnFee\ntag 47\t\t\tamount * burnFee\n  JUMPDEST \t\t\tamount * burnFee\n  PUSH [tag] 48\t\t\t(amount * burnFee) / 100\n  SWAP2 \t\t\t(amount * burnFee) / 100\n  SWAP1 \t\t\t(amount * burnFee) / 100\n  PUSH [tag] 25\t\t\t(amount * burnFee) / 100\n  JUMP \t\t\t(amount * burnFee) / 100\ntag 48\t\t\t(amount * burnFee) / 100\n  JUMPDEST \t\t\t(amount * burnFee) / 100\n  SWAP1 \t\t\tuint256 burnAmount = (amount *...\n  POP \t\t\tuint256 burnAmount = (amount *...\n  PUSH 0\t\t\tuint256 rewardAmount\n  PUSH 64\t\t\t100\n  PUSH 9\t\t\trewardFee\n  SLOAD \t\t\trewardFee\n  DUP5 \t\t\tamount\n  PUSH [tag] 49\t\t\tamount * rewardFee\n  SWAP2 \t\t\tamount * rewardFee\n  SWAP1 \t\t\tamount * rewardFee\n  PUSH [tag] 21\t\t\tamount * rewardFee\n  JUMP \t\t\tamount * rewardFee\ntag 49\t\t\tamount * rewardFee\n  JUMPDEST \t\t\tamount * rewardFee\n  PUSH [tag] 50\t\t\t(amount * rewardFee) / 100\n  SWAP2 \t\t\t(amount * rewardFee) / 100\n  SWAP1 \t\t\t(amount * rewardFee) / 100\n  PUSH [tag] 25\t\t\t(amount * rewardFee) / 100\n  JUMP \t\t\t(amount * rewardFee) / 100\ntag 50\t\t\t(amount * rewardFee) / 100\n  JUMPDEST \t\t\t(amount * rewardFee) / 100\n  SWAP1 \t\t\tuint256 rewardAmount = (amount...\n  POP \t\t\tuint256 rewardAmount = (amount...\n  PUSH 0\t\t\tuint256 devAmount\n  PUSH 64\t\t\t100\n  PUSH A\t\t\tdevFee\n  SLOAD \t\t\tdevFee\n  DUP6 \t\t\tamount\n  PUSH [tag] 51\t\t\tamount * devFee\n  SWAP2 \t\t\tamount * devFee\n  SWAP1 \t\t\tamount * devFee\n  PUSH [tag] 21\t\t\tamount * devFee\n  JUMP \t\t\tamount * devFee\ntag 51\t\t\tamount * devFee\n  JUMPDEST \t\t\tamount * devFee\n  PUSH [tag] 52\t\t\t(amount * devFee) / 100\n  SWAP2 \t\t\t(amount * devFee) / 100\n  SWAP1 \t\t\t(amount * devFee) / 100\n  PUSH [tag] 25\t\t\t(amount * devFee) / 100\n  JUMP \t\t\t(amount * devFee) / 100\ntag 52\t\t\t(amount * devFee) / 100\n  JUMPDEST \t\t\t(amount * devFee) / 100\n  SWAP1 \t\t\tuint256 devAmount = (amount * ...\n  POP \t\t\tuint256 devAmount = (amount * ...\n  PUSH 0\t\t\tuint256 liquidityAmount\n  PUSH 64\t\t\t100\n  PUSH B\t\t\tliquidityFee\n  SLOAD \t\t\tliquidityFee\n  DUP7 \t\t\tamount\n  PUSH [tag] 53\t\t\tamount * liquidityFee\n  SWAP2 \t\t\tamount * liquidityFee\n  SWAP1 \t\t\tamount * liquidityFee\n  PUSH [tag] 21\t\t\tamount * liquidityFee\n  JUMP \t\t\tamount * liquidityFee\ntag 53\t\t\tamount * liquidityFee\n  JUMPDEST \t\t\tamount * liquidityFee\n  PUSH [tag] 54\t\t\t(amount * liquidityFee) / 100\n  SWAP2 \t\t\t(amount * liquidityFee) / 100\n  SWAP1 \t\t\t(amount * liquidityFee) / 100\n  PUSH [tag] 25\t\t\t(amount * liquidityFee) / 100\n  JUMP \t\t\t(amount * liquidityFee) / 100\ntag 54\t\t\t(amount * liquidityFee) / 100\n  JUMPDEST \t\t\t(amount * liquidityFee) / 100\n  SWAP1 \t\t\tuint256 liquidityAmount = (amo...\n  POP \t\t\tuint256 liquidityAmount = (amo...\n  PUSH 0\t\t\tuint256 sendAmount\n  DUP2 \t\t\tliquidityAmount\n  DUP4 \t\t\tdevAmount\n  DUP6 \t\t\trewardAmount\n  DUP8 \t\t\tburnAmount\n  DUP10 \t\t\tamount\n  PUSH [tag] 55\t\t\tamount - burnAmount\n  SWAP2 \t\t\tamount - burnAmount\n  SWAP1 \t\t\tamount - burnAmount\n  PUSH [tag] 56\t\t\tamount - burnAmount\n  JUMP \t\t\tamount - burnAmount\ntag 55\t\t\tamount - burnAmount\n  JUMPDEST \t\t\tamount - burnAmount\n  PUSH [tag] 57\t\t\tamount - burnAmount - rewardAm...\n  SWAP2 \t\t\tamount - burnAmount - rewardAm...\n  SWAP1 \t\t\tamount - burnAmount - rewardAm...\n  PUSH [tag] 56\t\t\tamount - burnAmount - rewardAm...\n  JUMP \t\t\tamount - burnAmount - rewardAm...\ntag 57\t\t\tamount - burnAmount - rewardAm...\n  JUMPDEST \t\t\tamount - burnAmount - rewardAm...\n  PUSH [tag] 58\t\t\tamount - burnAmount - rewardAm...\n  SWAP2 \t\t\tamount - burnAmount - rewardAm...\n  SWAP1 \t\t\tamount - burnAmount - rewardAm...\n  PUSH [tag] 56\t\t\tamount - burnAmount - rewardAm...\n  JUMP \t\t\tamount - burnAmount - rewardAm...\ntag 58\t\t\tamount - burnAmount - rewardAm...\n  JUMPDEST \t\t\tamount - burnAmount - rewardAm...\n  PUSH [tag] 59\t\t\tamount - burnAmount - rewardAm...\n  SWAP2 \t\t\tamount - burnAmount - rewardAm...\n  SWAP1 \t\t\tamount - burnAmount - rewardAm...\n  PUSH [tag] 56\t\t\tamount - burnAmount - rewardAm...\n  JUMP \t\t\tamount - burnAmount - rewardAm...\ntag 59\t\t\tamount - burnAmount - rewardAm...\n  JUMPDEST \t\t\tamount - burnAmount - rewardAm...\n  SWAP1 \t\t\tuint256 sendAmount = amount - ...\n  POP \t\t\tuint256 sendAmount = amount - ...\n  PUSH 0\t\t\t0\n  DUP6 \t\t\tburnAmount\n  GT \t\t\tburnAmount > 0\n  ISZERO \t\t\tif (burnAmount > 0) {\\r\\n     ...\n  PUSH [tag] 60\t\t\tif (burnAmount > 0) {\\r\\n     ...\n  JUMPI \t\t\tif (burnAmount > 0) {\\r\\n     ...\n  PUSH [tag] 61\t\t\t_burn(from, burnAmount)\n  DUP9 \t\t\tfrom\n  DUP7 \t\t\tburnAmount\n  PUSH [tag] 62\t\t\t_burn\n  PUSH 20\t\t\t_burn\n  SHL \t\t\t_burn\n  PUSH 20\t\t\t_burn(from, burnAmount)\n  SHR \t\t\t_burn(from, burnAmount)\n  JUMP \t\t\t_burn(from, burnAmount)\ntag 61\t\t\t_burn(from, burnAmount)\n  JUMPDEST \t\t\t_burn(from, burnAmount)\ntag 60\t\t\tif (burnAmount > 0) {\\r\\n     ...\n  JUMPDEST \t\t\tif (burnAmount > 0) {\\r\\n     ...\n  PUSH 0\t\t\t0\n  DUP4 \t\t\tdevAmount\n  GT \t\t\tdevAmount > 0\n  ISZERO \t\t\tif (devAmount > 0) {\\r\\n      ...\n  PUSH [tag] 63\t\t\tif (devAmount > 0) {\\r\\n      ...\n  JUMPI \t\t\tif (devAmount > 0) {\\r\\n      ...\n  PUSH [tag] 64\t\t\tsuper._update(from, devWallet,...\n  DUP9 \t\t\tfrom\n  PUSH D\t\t\tdevWallet\n  PUSH 1\t\t\tdevWallet\n  SWAP1 \t\t\tdevWallet\n  SLOAD \t\t\tdevWallet\n  SWAP1 \t\t\tdevWallet\n  PUSH 100\t\t\tdevWallet\n  EXP \t\t\tdevWallet\n  SWAP1 \t\t\tdevWallet\n  DIV \t\t\tdevWallet\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdevWallet\n  AND \t\t\tdevWallet\n  DUP6 \t\t\tdevAmount\n  PUSH [tag] 65\t\t\tsuper._update\n  PUSH 20\t\t\tsuper._update\n  SHL \t\t\tsuper._update\n  PUSH 20\t\t\tsuper._update(from, devWallet,...\n  SHR \t\t\tsuper._update(from, devWallet,...\n  JUMP \t\t\tsuper._update(from, devWallet,...\ntag 64\t\t\tsuper._update(from, devWallet,...\n  JUMPDEST \t\t\tsuper._update(from, devWallet,...\ntag 63\t\t\tif (devAmount > 0) {\\r\\n      ...\n  JUMPDEST \t\t\tif (devAmount > 0) {\\r\\n      ...\n  PUSH [tag] 66\t\t\tsuper._update(from, to, sendAm...\n  DUP9 \t\t\tfrom\n  DUP9 \t\t\tto\n  DUP4 \t\t\tsendAmount\n  PUSH [tag] 65\t\t\tsuper._update\n  PUSH 20\t\t\tsuper._update\n  SHL \t\t\tsuper._update\n  PUSH 20\t\t\tsuper._update(from, to, sendAm...\n  SHR \t\t\tsuper._update(from, to, sendAm...\n  JUMP \t\t\tsuper._update(from, to, sendAm...\ntag 66\t\t\tsuper._update(from, to, sendAm...\n  JUMPDEST \t\t\tsuper._update(from, to, sendAm...\n  POP \t\t\t{\\r\\n        require(!isBlackl...\n  POP \t\t\t{\\r\\n        require(!isBlackl...\n  POP \t\t\t{\\r\\n        require(!isBlackl...\n  POP \t\t\t{\\r\\n        require(!isBlackl...\n  POP \t\t\t{\\r\\n        require(!isBlackl...\n  POP \t\t\tfunction _update(address from,...\n  POP \t\t\tfunction _update(address from,...\n  POP \t\t\tfunction _update(address from,...\n  JUMP \t\t\tfunction _update(address from,...\ntag 62\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 68\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 96C6FD1E00000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 69\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 12\t\t\t\n  JUMP \t\t\t\ntag 69\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 68\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 70\t\t\t\n  DUP3 \t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 33\t\t\t\n  PUSH 20\t\t\t\n  SHL \t\t\t\n  PUSH 20\t\t\t\n  SHR \t\t\t\n  JUMP \t\t\t\ntag 70\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 65\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 72\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  PUSH 2\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 73\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 74\t\t\t\n  JUMP \t\t\t\ntag 73\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 75\t\t\t\n  JUMP \t\t\t\ntag 72\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP6 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  SLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 76\t\t\t\n  JUMPI \t\t\t\n  DUP4 \t\t\t\n  DUP2 \t\t\t\n  DUP4 \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH E450D38C00000000000000000000000000000000000000000000000000000000\t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 77\t\t\t\n  SWAP4 \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 78\t\t\t\n  JUMP \t\t\t\ntag 77\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 76\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  SUB \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP7 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 75\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  SUB \t\t\t\n  PUSH [tag] 79\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  PUSH 2\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  SUB \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 80\t\t\t\n  JUMP \t\t\t\ntag 79\t\t\t\n  JUMPDEST \t\t\t\n  DUP1 \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP5 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  ADD \t\t\t\n  PUSH 0\t\t\t\n  KECCAK256 \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  ADD \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\ntag 80\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n  DUP4 \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 81\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 82\t\t\t\n  JUMP \t\t\t\ntag 81\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  LOG3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 83\t\t\t-License-Identifier: MIT\\r\\npr...\n  JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n  PUSH 0\t\t\t\\r\\nimpo\n  DUP2 \t\t\ttoken\n  MLOAD \t\t\tracts/token/\n  SWAP1 \t\t\tpelin/contracts/token/\n  POP \t\t\tpelin/contracts/token/\n  SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n  SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n  POP \t\t\t-License-Identifier: MIT\\r\\npr...\n  JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\ntag 84\t\t\tol\";\\r\\nimport \"@openzeppelin/...\n  JUMPDEST \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\table.sol\";\\r\\n\\r\\ncontract Zig...\n  PUSH 0\t\t\tO\n  MSTORE \t\t\taccess/Ownable.sol\";\\r\\n\\r\\nco...\n  PUSH 41\t\t\tckli\n  PUSH 4\t\t\tB\n  MSTORE \t\t\tvate isBlacklis\n  PUSH 24\t\t\tddre\n  PUSH 0\t\t\tg\n  REVERT \t\t\t mapping(addres\ntag 85\t\t\trivate isExcludedFromFees;\\r\\n...\n  JUMPDEST \t\t\trivate isExcludedFromFees;\\r\\n...\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t burnFee = 2; // 2% Burn Fee\\r...\n  PUSH 0\t\t\tl\n  MSTORE \t\t\t256 public burnFee = 2; // 2% ...\n  PUSH 22\t\t\tlic \n  PUSH 4\t\t\tp\n  MSTORE \t\t\tint256 public d\n  PUSH 24\t\t\tv Fe\n  PUSH 0\t\t\t \n  REVERT \t\t\t; // 1% Dev Fee\ntag 86\t\t\t6 public liquidityFee = 5; // ...\n  JUMPDEST \t\t\t6 public liquidityFee = 5; // ...\n  PUSH 0\t\t\tee\\r\\n  \n  PUSH 2\t\t\t/\n  DUP3 \t\t\tunt;\n  DIV \t\t\txAmount; // \n  SWAP1 \t\t\tublic maxTxAmount; // \n  POP \t\t\tublic maxTxAmount; // \n  PUSH 1\t\t\tn\n  DUP3 \t\t\tadin\n  AND \t\t\tc tradingEna\n  DUP1 \t\t\t\\r\\n    address publ\n  PUSH [tag] 125\t\t\tlse;\\r\\n    \\r\\n    address pu...\n  JUMPI \t\t\tlse;\\r\\n    \\r\\n    address pu...\n  PUSH 7F\t\t\t20(\"\n  DUP3 \t\t\tor() E\n  AND \t\t\tructor() ERC20(\"Z\n  SWAP2 \t\t\t\\n    constructor() ERC20(\"Z\n  POP \t\t\t\\n    constructor() ERC20(\"Z\ntag 125\t\t\tlse;\\r\\n    \\r\\n    address pu...\n  JUMPDEST \t\t\tlse;\\r\\n    \\r\\n    address pu...\n  PUSH 20\t\t\tta\n  DUP3 \t\t\tnt256 \n  LT \t\t\t uint256 total\n  DUP2 \t\t\tg.sender) {\\r\\n     \n  SUB \t\t\t(msg.sender) {\\r\\n        uint...\n  PUSH [tag] 126\t\t\tble(msg.sender) {\\r\\n        u...\n  JUMPI \t\t\tble(msg.sender) {\\r\\n        u...\n  PUSH [tag] 127\t\t\t00 * 10 ** decimal\n  PUSH [tag] 85\t\t\t00 * 10 ** decimal\n  JUMP \t\t\t00 * 10 ** decimal\ntag 127\t\t\t00 * 10 ** decimal\n  JUMPDEST \t\t\t00 * 10 ** decimal\ntag 126\t\t\tble(msg.sender) {\\r\\n        u...\n  JUMPDEST \t\t\tble(msg.sender) {\\r\\n        u...\n  POP \t\t\t uint256 public maxTxAmount; /...\n  SWAP2 \t\t\t6 public liquidityFee = 5; // ...\n  SWAP1 \t\t\t6 public liquidityFee = 5; // ...\n  POP \t\t\t6 public liquidityFee = 5; // ...\n  JUMP \t\t\t6 public liquidityFee = 5; // ...\ntag 87\t\t\tg.sender, totalSupply);\\r\\n   ...\n  JUMPDEST \t\t\tg.sender, totalSupply);\\r\\n   ...\n  PUSH 0\t\t\ttalS\n  DUP2 \t\t\tof \n  SWAP1 \t\t\t; // 1% of \n  POP \t\t\t; // 1% of \n  DUP2 \t\t\t  d\n  PUSH 0\t\t\t \n  MSTORE \t\t\tly\\r\\n        de\n  PUSH 20\t\t\t isE\n  PUSH 0\t\t\t \n  KECCAK256 \t\t\tder;\\r\\n        isEx\n  SWAP1 \t\t\t msg.sender;\\r\\n        isEx\n  POP \t\t\t msg.sender;\\r\\n        isEx\n  SWAP2 \t\t\tg.sender, totalSupply);\\r\\n   ...\n  SWAP1 \t\t\tg.sender, totalSupply);\\r\\n   ...\n  POP \t\t\tg.sender, totalSupply);\\r\\n   ...\n  JUMP \t\t\tg.sender, totalSupply);\\r\\n   ...\ntag 88\t\t\ts[msg.sender] = true;\\r\\n    }...\n  JUMPDEST \t\t\ts[msg.sender] = true;\\r\\n    }...\n  PUSH 0\t\t\tunctio\n  PUSH 20\t\t\t  \n  PUSH 1F\t\t\t {\n  DUP4 \t\t\tlyOwn\n  ADD \t\t\tl onlyOwner {\\r\n  DIV \t\t\ternal onlyOwner {\\r\\n    \n  SWAP1 \t\t\tding() external onlyOwner {\\r\\...\n  POP \t\t\tding() external onlyOwner {\\r\\...\n  SWAP2 \t\t\ts[msg.sender] = true;\\r\\n    }...\n  SWAP1 \t\t\ts[msg.sender] = true;\\r\\n    }...\n  POP \t\t\ts[msg.sender] = true;\\r\\n    }...\n  JUMP \t\t\ts[msg.sender] = true;\\r\\n    }...\ntag 89\t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\n  JUMPDEST \t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\n  PUSH 0\t\t\tcklist(a\n  DUP3 \t\t\tOwner\n  DUP3 \t\t\tl on\n  SHL \t\t\ternal onlyOwner \n  SWAP1 \t\t\tunt, bool status) external onl...\n  POP \t\t\tunt, bool status) external onl...\n  SWAP3 \t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\n  SWAP2 \t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\n  POP \t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\n  POP \t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\n  JUMP \t\t\tnabled = true;\\r\\n    }\\r\\n\\r\\...\ntag 90\t\t\tBlacklisted[account] = status;...\n  JUMPDEST \t\t\tBlacklisted[account] = status;...\n  PUSH 0\t\t\t(addre\n  PUSH 8\t\t\t{\n  DUP4 \t\t\tl onlyOwne\n  MUL \t\t\ternal onlyOwner {\\r\n  PUSH [tag] 132\t\t\tomFees[account] = status;\\r\\n ...\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t }\\r\\n\\r\\n    function setFees...\n  DUP3 \t\t\ttatus;\\r\\n \n  PUSH [tag] 89\t\t\tomFees[account] = status;\\r\\n ...\n  JUMP \t\t\tomFees[account] = status;\\r\\n ...\ntag 132\t\t\tomFees[account] = status;\\r\\n ...\n  JUMPDEST \t\t\tomFees[account] = status;\\r\\n ...\n  PUSH [tag] 133\t\t\t6 _liquidityFee) external only...\n  DUP7 \t\t\tOwner {\\r\n  DUP4 \t\t\tternal on\n  PUSH [tag] 89\t\t\t6 _liquidityFee) external only...\n  JUMP \t\t\t6 _liquidityFee) external only...\ntag 133\t\t\t6 _liquidityFee) external only...\n  JUMPDEST \t\t\t6 _liquidityFee) external only...\n  SWAP6 \t\t\tvFee, uint256 _liquidityFee) e...\n  POP \t\t\tvFee, uint256 _liquidityFee) e...\n  DUP1 \t\t\t    \n  NOT \t\t\t        r\n  DUP5 \t\t\tnFee;\n  AND \t\t\t_burnFee;\\r\\n        re\n  SWAP4 \t\t\turnFee = _burnFee;\\r\\n        ...\n  POP \t\t\turnFee = _burnFee;\\r\\n        ...\n  DUP1 \t\t\tvFee\n  DUP7 \t\t\tvFee = _\n  AND \t\t\t  devFee = _devFee;\n  DUP5 \t\t\t\\n    \n  OR \t\t\te;\\r\\n        devFee = _devFee...\n  SWAP3 \t\t\t _rewardFee;\\r\\n        devFee...\n  POP \t\t\t _rewardFee;\\r\\n        devFee...\n  POP \t\t\ts account, bool status) extern...\n  POP \t\t\ts account, bool status) extern...\n  SWAP4 \t\t\tBlacklisted[account] = status;...\n  SWAP3 \t\t\tBlacklisted[account] = status;...\n  POP \t\t\tBlacklisted[account] = status;...\n  POP \t\t\tBlacklisted[account] = status;...\n  POP \t\t\tBlacklisted[account] = status;...\n  JUMP \t\t\tBlacklisted[account] = status;...\ntag 91\t\t\tuidityFee = _liquidityFee;\\r\\n...\n  JUMPDEST \t\t\tuidityFee = _liquidityFee;\\r\\n...\n  PUSH 0\t\t\t    fun\n  DUP2 \t\t\tint25\n  SWAP1 \t\t\txTxAmount(uint25\n  POP \t\t\txTxAmount(uint25\n  SWAP2 \t\t\tuidityFee = _liquidityFee;\\r\\n...\n  SWAP1 \t\t\tuidityFee = _liquidityFee;\\r\\n...\n  POP \t\t\tuidityFee = _liquidityFee;\\r\\n...\n  JUMP \t\t\tuidityFee = _liquidityFee;\\r\\n...\ntag 92\t\t\tnt) external onlyOwner {\\r\\n  ...\n  JUMPDEST \t\t\tnt) external onlyOwner {\\r\\n  ...\n  PUSH 0\t\t\t   \n  DUP2 \t\t\tmaxTx\n  SWAP1 \t\t\tunt = _maxTx\n  POP \t\t\tunt = _maxTx\n  SWAP2 \t\t\tnt) external onlyOwner {\\r\\n  ...\n  SWAP1 \t\t\tnt) external onlyOwner {\\r\\n  ...\n  POP \t\t\tnt) external onlyOwner {\\r\\n  ...\n  JUMP \t\t\tnt) external onlyOwner {\\r\\n  ...\ntag 93\t\t\t }\\r\\n\\r\\n    function setDevW...\n  JUMPDEST \t\t\t }\\r\\n\\r\\n    function setDevW...\n  PUSH 0\t\t\t) externa\n  PUSH [tag] 137\t\t\tevWallet = _devWallet;\\r\\n    ...\n  PUSH [tag] 138\t\t\tlet;\\r\\n    }\\r\\n\\r\\n    funct...\n  PUSH [tag] 139\t\t\t }\\r\\n\\r\\n    function _upda\n  DUP5 \t\t\t _upd\n  PUSH [tag] 91\t\t\t }\\r\\n\\r\\n    function _upda\n  JUMP \t\t\t }\\r\\n\\r\\n    function _upda\ntag 139\t\t\t }\\r\\n\\r\\n    function _upda\n  JUMPDEST \t\t\t }\\r\\n\\r\\n    function _upda\n  PUSH [tag] 92\t\t\tlet;\\r\\n    }\\r\\n\\r\\n    funct...\n  JUMP \t\t\tlet;\\r\\n    }\\r\\n\\r\\n    funct...\ntag 138\t\t\tlet;\\r\\n    }\\r\\n\\r\\n    funct...\n  JUMPDEST \t\t\tlet;\\r\\n    }\\r\\n\\r\\n    funct...\n  PUSH [tag] 91\t\t\tevWallet = _devWallet;\\r\\n    ...\n  JUMP \t\t\tevWallet = _devWallet;\\r\\n    ...\ntag 137\t\t\tevWallet = _devWallet;\\r\\n    ...\n  JUMPDEST \t\t\tevWallet = _devWallet;\\r\\n    ...\n  SWAP1 \t\t\t {\\r\\n        devWallet = _dev...\n  POP \t\t\t {\\r\\n        devWallet = _dev...\n  SWAP2 \t\t\t }\\r\\n\\r\\n    function setDevW...\n  SWAP1 \t\t\t }\\r\\n\\r\\n    function setDevW...\n  POP \t\t\t }\\r\\n\\r\\n    function setDevW...\n  JUMP \t\t\t }\\r\\n\\r\\n    function setDevW...\ntag 94\t\t\tm, address to, uint256 amount)...\n  JUMPDEST \t\t\tm, address to, uint256 amount)...\n  PUSH 0\t\t\trri\n  DUP2 \t\t\tire(!\n  SWAP1 \t\t\t   require(!\n  POP \t\t\t   require(!\n  SWAP2 \t\t\tm, address to, uint256 amount)...\n  SWAP1 \t\t\tm, address to, uint256 amount)...\n  POP \t\t\tm, address to, uint256 amount)...\n  JUMP \t\t\tm, address to, uint256 amount)...\ntag 95\t\t\td[from] && !isBlacklisted[to],...\n  JUMPDEST \t\t\td[from] && !isBlacklisted[to],...\n  PUSH [tag] 142\t\t\ts[from], \"Trading is not enabl...\n  DUP4 \t\t\td yet\")\n  PUSH [tag] 93\t\t\ts[from], \"Trading is not enabl...\n  JUMP \t\t\ts[from], \"Trading is not enabl...\ntag 142\t\t\ts[from], \"Trading is not enabl...\n  JUMPDEST \t\t\ts[from], \"Trading is not enabl...\n  PUSH [tag] 143\t\t\tnt <= maxTxAmount || isExclude...\n  PUSH [tag] 144\t\t\transfer amount exceeds max lim...\n  DUP3 \t\t\tax limit\");\\r\\n\\r\\n \n  PUSH [tag] 94\t\t\transfer amount exceeds max lim...\n  JUMP \t\t\transfer amount exceeds max lim...\ntag 144\t\t\transfer amount exceeds max lim...\n  JUMPDEST \t\t\transfer amount exceeds max lim...\n  DUP5 \t\t\trom], \n  DUP5 \t\t\tmFee\n  SLOAD \t\t\tdedFromFees\n  PUSH [tag] 90\t\t\tnt <= maxTxAmount || isExclude...\n  JUMP \t\t\tnt <= maxTxAmount || isExclude...\ntag 143\t\t\tnt <= maxTxAmount || isExclude...\n  JUMPDEST \t\t\tnt <= maxTxAmount || isExclude...\n  DUP3 \t\t\te(am\n  SSTORE \t\t\t require(amount <= maxTxAmount...\n  POP \t\t\tradingEnabled || isExcludedFro...\n  POP \t\t\td[from] && !isBlacklisted[to],...\n  POP \t\t\td[from] && !isBlacklisted[to],...\n  POP \t\t\td[from] && !isBlacklisted[to],...\n  JUMP \t\t\td[from] && !isBlacklisted[to],...\ntag 96\t\t\tburnAmount = (amount * burnFee...\n  JUMPDEST \t\t\tburnAmount = (amount * burnFee...\n  PUSH 0\t\t\t   \n  PUSH 0\t\t\tn\n  SWAP1 \t\t\tardAmoun\n  POP \t\t\tardAmoun\n  SWAP1 \t\t\tburnAmount = (amount * burnFee...\n  JUMP \t\t\tburnAmount = (amount * burnFee...\ntag 97\t\t\t* rewardFee) / 100;\\r\\n       ...\n  JUMPDEST \t\t\t* rewardFee) / 100;\\r\\n       ...\n  PUSH [tag] 147\t\t\t      uint256 liquidityAmount ...\n  PUSH [tag] 96\t\t\t      uint256 liquidityAmount ...\n  JUMP \t\t\t      uint256 liquidityAmount ...\ntag 147\t\t\t      uint256 liquidityAmount ...\n  JUMPDEST \t\t\t      uint256 liquidityAmount ...\n  PUSH [tag] 148\t\t\t liquidityFee) / 100;\\r\\n     ...\n  DUP2 \t\t\t - bur\n  DUP5 \t\t\t= amou\n  DUP5 \t\t\tmoun\n  PUSH [tag] 95\t\t\t liquidityFee) / 100;\\r\\n     ...\n  JUMP \t\t\t liquidityFee) / 100;\\r\\n     ...\ntag 148\t\t\t liquidityFee) / 100;\\r\\n     ...\n  JUMPDEST \t\t\t liquidityFee) / 100;\\r\\n     ...\n  POP \t\t\tunt * devFee) / 100;\\r\\n      ...\n  POP \t\t\t* rewardFee) / 100;\\r\\n       ...\n  POP \t\t\t* rewardFee) / 100;\\r\\n       ...\n  JUMP \t\t\t* rewardFee) / 100;\\r\\n       ...\ntag 98\t\t\tardAmount - devAmount - liquid...\n  JUMPDEST \t\t\tardAmount - devAmount - liquid...\ntag 150\t\t\tAmount > 0) {\\r\\n            _...\n  JUMPDEST \t\t\tAmount > 0) {\\r\\n            _...\n  DUP2 \t\t\t   \n  DUP2 \t\t\t) {\\r\\n\n  LT \t\t\t> 0) {\\r\\n      \n  ISZERO \t\t\tAmount > 0) {\\r\\n            _...\n  PUSH [tag] 152\t\t\tAmount > 0) {\\r\\n            _...\n  JUMPI \t\t\tAmount > 0) {\\r\\n            _...\n  PUSH [tag] 153\t\t\t if (devAmount > 0) {\\r\\n     ...\n  PUSH 0\t\t\tp\n  DUP3 \t\t\t     \n  PUSH [tag] 97\t\t\t if (devAmount > 0) {\\r\\n     ...\n  JUMP \t\t\t if (devAmount > 0) {\\r\\n     ...\ntag 153\t\t\t if (devAmount > 0) {\\r\\n     ...\n  JUMPDEST \t\t\t if (devAmount > 0) {\\r\\n     ...\n  PUSH 1\t\t\tm\n  DUP2 \t\t\t, bur\n  ADD \t\t\tfrom, burnAmo\n  SWAP1 \t\t\t   _burn(from, burnAmo\n  POP \t\t\t   _burn(from, burnAmo\n  PUSH [tag] 150\t\t\tAmount > 0) {\\r\\n            _...\n  JUMP \t\t\tAmount > 0) {\\r\\n            _...\ntag 152\t\t\tAmount > 0) {\\r\\n            _...\n  JUMPDEST \t\t\tAmount > 0) {\\r\\n            _...\n  POP \t\t\tardAmount - devAmount - liquid...\n  POP \t\t\tardAmount - devAmount - liquid...\n  JUMP \t\t\tardAmount - devAmount - liquid...\ntag 99\t\t\tlet, devAmount);\\r\\n        }\\...\n  JUMPDEST \t\t\tlet, devAmount);\\r\\n        }\\...\n  PUSH 1F\t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 155\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 156\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 87\t\t\t\n  JUMP \t\t\t\ntag 156\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 157\t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 88\t\t\t\n  JUMP \t\t\t\ntag 157\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  PUSH 20\t\t\t\n  DUP6 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 158\t\t\t\n  JUMPI \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 158\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 159\t\t\t\n  PUSH [tag] 160\t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 88\t\t\t\n  JUMP \t\t\t\ntag 160\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 98\t\t\t\n  JUMP \t\t\t\ntag 159\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 155\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\tlet, devAmount);\\r\\n        }\\...\n  POP \t\t\tlet, devAmount);\\r\\n        }\\...\n  POP \t\t\tlet, devAmount);\\r\\n        }\\...\n  JUMP \t\t\tlet, devAmount);\\r\\n        }\\...\ntag 100\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SHR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 101\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 163\t\t\t\n  PUSH 0\t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  PUSH 8\t\t\t\n  MUL \t\t\t\n  PUSH [tag] 100\t\t\t\n  JUMP \t\t\t\ntag 163\t\t\t\n  JUMPDEST \t\t\t\n  NOT \t\t\t\n  DUP1 \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 102\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 165\t\t\t\n  DUP4 \t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 101\t\t\t\n  JUMP \t\t\t\ntag 165\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  PUSH 2\t\t\t\n  MUL \t\t\t\n  DUP3 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 7\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 167\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 83\t\t\t\n  JUMP \t\t\t\ntag 167\t\t\t\n  JUMPDEST \t\t\t\n  PUSH FFFFFFFFFFFFFFFF\t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 168\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 169\t\t\t\n  PUSH [tag] 84\t\t\t\n  JUMP \t\t\t\ntag 169\t\t\t\n  JUMPDEST \t\t\t\ntag 168\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 170\t\t\t\n  DUP3 \t\t\t\n  SLOAD \t\t\t\n  PUSH [tag] 86\t\t\t\n  JUMP \t\t\t\ntag 170\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 171\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 99\t\t\t\n  JUMP \t\t\t\ntag 171\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH 1F\t\t\t\n  DUP4 \t\t\t\n  GT \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 173\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP5 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 174\t\t\t\n  JUMPI \t\t\t\n  DUP3 \t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 174\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 175\t\t\t\n  DUP6 \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 102\t\t\t\n  JUMP \t\t\t\ntag 175\t\t\t\n  JUMPDEST \t\t\t\n  DUP7 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  PUSH [tag] 172\t\t\t\n  JUMP \t\t\t\ntag 173\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  PUSH [tag] 176\t\t\t\n  DUP7 \t\t\t\n  PUSH [tag] 87\t\t\t\n  JUMP \t\t\t\ntag 176\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\ntag 177\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  DUP2 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 179\t\t\t\n  JUMPI \t\t\t\n  DUP5 \t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  DUP3 \t\t\t\n  SSTORE \t\t\t\n  PUSH 1\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP6 \t\t\t\n  ADD \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 177\t\t\t\n  JUMP \t\t\t\ntag 179\t\t\t\n  JUMPDEST \t\t\t\n  DUP7 \t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 180\t\t\t\n  JUMPI \t\t\t\n  DUP5 \t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 181\t\t\t\n  PUSH 1F\t\t\t\n  DUP10 \t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 101\t\t\t\n  JUMP \t\t\t\ntag 181\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\ntag 180\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  PUSH 2\t\t\t\n  DUP9 \t\t\t\n  MUL \t\t\t\n  ADD \t\t\t\n  DUP9 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\ntag 172\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 103\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 104\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 184\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 103\t\t\t\n  JUMP \t\t\t\ntag 184\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 105\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 186\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 104\t\t\t\n  JUMP \t\t\t\ntag 186\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 12\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 188\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 105\t\t\t\n  JUMP \t\t\t\ntag 188\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 106\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 11\t\t\t\n  PUSH 4\t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 107\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP2 \t\t\t\n  PUSH 1\t\t\t\n  SHR \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 108\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP4 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 192\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  DUP6 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 194\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  DUP7 \t\t\t\n  DIV \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 195\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 196\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 196\t\t\t\n  JUMPDEST \t\t\t\ntag 195\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  DUP6 \t\t\t\n  AND \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 197\t\t\t\n  JUMPI \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  MUL \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\ntag 197\t\t\t\n  JUMPDEST \t\t\t\n  DUP1 \t\t\t\n  DUP2 \t\t\t\n  MUL \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 198\t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 107\t\t\t\n  JUMP \t\t\t\ntag 198\t\t\t\n  JUMPDEST \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 192\t\t\t\n  JUMP \t\t\t\ntag 194\t\t\t\n  JUMPDEST \t\t\t\n  SWAP5 \t\t\t\n  POP \t\t\t\n  SWAP5 \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 109\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 200\t\t\t\n  JUMPI \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 199\t\t\t\n  JUMP \t\t\t\ntag 200\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 201\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 199\t\t\t\n  JUMP \t\t\t\ntag 201\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 203\t\t\t\n  JUMPI \t\t\t\n  PUSH 2\t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 204\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 202\t\t\t\n  JUMP \t\t\t\ntag 203\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH [tag] 199\t\t\t\n  JUMP \t\t\t\ntag 204\t\t\t\n  JUMPDEST \t\t\t\n  PUSH FF\t\t\t\n  DUP5 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 205\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 206\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 206\t\t\t\n  JUMPDEST \t\t\t\ntag 205\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  PUSH 2\t\t\t\n  EXP \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP5 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 207\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 208\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 208\t\t\t\n  JUMPDEST \t\t\t\ntag 207\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH [tag] 199\t\t\t\n  JUMP \t\t\t\ntag 202\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH 20\t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  PUSH 133\t\t\t\n  DUP4 \t\t\t\n  LT \t\t\t\n  AND \t\t\t\n  PUSH 4E\t\t\t\n  DUP5 \t\t\t\n  LT \t\t\t\n  PUSH B\t\t\t\n  DUP5 \t\t\t\n  LT \t\t\t\n  AND \t\t\t\n  OR \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 209\t\t\t\n  JUMPI \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  EXP \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP4 \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 210\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 211\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 211\t\t\t\n  JUMPDEST \t\t\t\ntag 210\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 199\t\t\t\n  JUMP \t\t\t\ntag 209\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 212\t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  PUSH 1\t\t\t\n  PUSH [tag] 108\t\t\t\n  JUMP \t\t\t\ntag 212\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP5 \t\t\t\n  DIV \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 213\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 214\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 214\t\t\t\n  JUMPDEST \t\t\t\ntag 213\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  MUL \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\ntag 199\t\t\t\n  JUMPDEST \t\t\t\n  SWAP4 \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 110\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH FF\t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 19\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 217\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 217\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 218\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 110\t\t\t\n  JUMP \t\t\t\ntag 218\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 219\t\t\t\n  PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n  DUP5 \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 109\t\t\t\n  JUMP \t\t\t\ntag 219\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 21\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 221\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 221\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 222\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 222\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  MUL \t\t\t\n  PUSH [tag] 223\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 223\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DIV \t\t\t\n  DUP5 \t\t\t\n  EQ \t\t\t\n  DUP4 \t\t\t\n  ISZERO \t\t\t\n  OR \t\t\t\n  PUSH [tag] 224\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 225\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 225\t\t\t\n  JUMPDEST \t\t\t\ntag 224\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 111\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 12\t\t\t\n  PUSH 4\t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 25\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 228\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 228\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 229\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 229\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 230\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 231\t\t\t\n  PUSH [tag] 111\t\t\t\n  JUMP \t\t\t\ntag 231\t\t\t\n  JUMPDEST \t\t\t\ntag 230\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  DIV \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 112\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 113\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 4164647265737320697320626C61636B6C697374656400000000000000000000\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 114\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 235\t\t\t\n  PUSH 16\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 112\t\t\t\n  JUMP \t\t\t\ntag 235\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 236\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 113\t\t\t\n  JUMP \t\t\t\ntag 236\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 38\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  SUB \t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH [tag] 238\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 114\t\t\t\n  JUMP \t\t\t\ntag 238\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 115\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 54726164696E67206973206E6F7420656E61626C656420796574000000000000\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 116\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 241\t\t\t\n  PUSH 1A\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 112\t\t\t\n  JUMP \t\t\t\ntag 241\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 242\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 115\t\t\t\n  JUMP \t\t\t\ntag 242\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 42\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  SUB \t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH [tag] 244\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 116\t\t\t\n  JUMP \t\t\t\ntag 244\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 117\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 5472616E7366657220616D6F756E742065786365656473206D6178206C696D69\t\t\t\n  PUSH 0\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 7400000000000000000000000000000000000000000000000000000000000000\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 118\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 247\t\t\t\n  PUSH 21\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 112\t\t\t\n  JUMP \t\t\t\ntag 247\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 248\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 117\t\t\t\n  JUMP \t\t\t\ntag 248\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 46\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  SUB \t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH [tag] 250\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 118\t\t\t\n  JUMP \t\t\t\ntag 250\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 56\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 252\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 252\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 253\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 253\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 254\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 255\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 255\t\t\t\n  JUMPDEST \t\t\t\ntag 254\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 74\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH [tag] 257\t\t\t\n  DUP3 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 257\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 258\t\t\t\n  DUP4 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 258\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 259\t\t\t\n  JUMPI \t\t\t\n  PUSH [tag] 260\t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMP \t\t\t\ntag 260\t\t\t\n  JUMPDEST \t\t\t\ntag 259\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 119\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 262\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 91\t\t\t\n  JUMP \t\t\t\ntag 262\t\t\t\n  JUMPDEST \t\t\t\n  DUP3 \t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 78\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 60\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 264\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP7 \t\t\t\n  PUSH [tag] 105\t\t\t\n  JUMP \t\t\t\ntag 264\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 265\t\t\t\n  PUSH 20\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP6 \t\t\t\n  PUSH [tag] 119\t\t\t\n  JUMP \t\t\t\ntag 265\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 266\t\t\t\n  PUSH 40\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 119\t\t\t\n  JUMP \t\t\t\ntag 266\t\t\t\n  JUMPDEST \t\t\t\n  SWAP5 \t\t\t\n  SWAP4 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 82\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 268\t\t\t\n  PUSH 0\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  DUP5 \t\t\t\n  PUSH [tag] 119\t\t\t\n  JUMP \t\t\t\ntag 268\t\t\t\n  JUMPDEST \t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\t\ntag 26\t\t\tcontract ZiggiToken is ERC20, ...\n  JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract ZiggiToken is ERC20, ...\n  DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract ZiggiToken is ERC20, ...\n  PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n  CODECOPY \t\t\tcontract ZiggiToken is ERC20, ...\n  PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n  RETURN \t\t\tcontract ZiggiToken is ERC20, ...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 40\t\t\tcontract ZiggiToken is ERC20, ...\n      MSTORE \t\t\tcontract ZiggiToken is ERC20, ...\n      CALLVALUE \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      ISZERO \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 1\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n      REVERT \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 1\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n      POP \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 4\t\t\tcontract ZiggiToken is ERC20, ...\n      CALLDATASIZE \t\t\tcontract ZiggiToken is ERC20, ...\n      LT \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n      CALLDATALOAD \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH E0\t\t\tcontract ZiggiToken is ERC20, ...\n      SHR \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 8A8C523C\t\t\tcontract ZiggiToken is ERC20, ...\n      GT \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 28\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 98118CB4\t\t\tcontract ZiggiToken is ERC20, ...\n      GT \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 29\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH DD62ED3E\t\t\tcontract ZiggiToken is ERC20, ...\n      GT \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 30\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH DD62ED3E\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 24\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH EC28438A\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 25\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH F2FDE38B\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 26\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH FCE589D8\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 27\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMP \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 30\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 98118CB4\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 21\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH A9059CBB\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 22\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH C0246668\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 23\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMP \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 29\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 8A8C523C\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 15\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 8B424267\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 16\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 8C0B5E22\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 17\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 8DA5CB5B\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 18\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 8EA5220F\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 19\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 95D89B41\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 20\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMP \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 28\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 313CE567\t\t\tcontract ZiggiToken is ERC20, ...\n      GT \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 31\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 313CE567\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 9\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 4ADA218B\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 10\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 6827E764\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 11\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 6FCBA377\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 12\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 70A08231\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 13\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 715018A6\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 14\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 2\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMP \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 31\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 6FDDE03\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 3\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 95EA7B3\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 4\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 153B0D1E\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 5\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 18160DDD\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 6\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 1F53AC02\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 7\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n      DUP1 \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 23B872DD\t\t\tcontract ZiggiToken is ERC20, ...\n      EQ \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH [tag] 8\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPI \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 2\t\t\tcontract ZiggiToken is ERC20, ...\n      JUMPDEST \t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n      PUSH 0\t\t\tcontract ZiggiToken is ERC20, ...\n      REVERT \t\t\tcontract ZiggiToken is ERC20, ...\n    tag 3\t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMPDEST \t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH [tag] 32\t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH [tag] 33\t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMP \t\t\tnlyOwner {\\r\\n        devWalle...\n    tag 32\t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMPDEST \t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH 40\t\t\tnlyOwner {\\r\\n        devWalle...\n      MLOAD \t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH [tag] 34\t\t\tnlyOwner {\\r\\n        devWalle...\n      SWAP2 \t\t\tnlyOwner {\\r\\n        devWalle...\n      SWAP1 \t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH [tag] 35\t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMP \t\t\tnlyOwner {\\r\\n        devWalle...\n    tag 34\t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMPDEST \t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH 40\t\t\tnlyOwner {\\r\\n        devWalle...\n      MLOAD \t\t\tnlyOwner {\\r\\n        devWalle...\n      DUP1 \t\t\tnlyOwner {\\r\\n        devWalle...\n      SWAP2 \t\t\tnlyOwner {\\r\\n        devWalle...\n      SUB \t\t\tnlyOwner {\\r\\n        devWalle...\n      SWAP1 \t\t\tnlyOwner {\\r\\n        devWalle...\n      RETURN \t\t\tnlyOwner {\\r\\n        devWalle...\n    tag 4\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 36\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 37\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 38\t\t\t\n      JUMP \t\t\t\n    tag 37\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 39\t\t\t\n      JUMP \t\t\t\n    tag 36\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 40\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 41\t\t\t\n      JUMP \t\t\t\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 5\t\t\tfunction setBlacklist(address ...\n      JUMPDEST \t\t\tfunction setBlacklist(address ...\n      PUSH [tag] 42\t\t\tfunction setBlacklist(address ...\n      PUSH 4\t\t\tfunction setBlacklist(address ...\n      DUP1 \t\t\tfunction setBlacklist(address ...\n      CALLDATASIZE \t\t\tfunction setBlacklist(address ...\n      SUB \t\t\tfunction setBlacklist(address ...\n      DUP2 \t\t\tfunction setBlacklist(address ...\n      ADD \t\t\tfunction setBlacklist(address ...\n      SWAP1 \t\t\tfunction setBlacklist(address ...\n      PUSH [tag] 43\t\t\tfunction setBlacklist(address ...\n      SWAP2 \t\t\tfunction setBlacklist(address ...\n      SWAP1 \t\t\tfunction setBlacklist(address ...\n      PUSH [tag] 44\t\t\tfunction setBlacklist(address ...\n      JUMP \t\t\tfunction setBlacklist(address ...\n    tag 43\t\t\tfunction setBlacklist(address ...\n      JUMPDEST \t\t\tfunction setBlacklist(address ...\n      PUSH [tag] 45\t\t\tfunction setBlacklist(address ...\n      JUMP \t\t\tfunction setBlacklist(address ...\n    tag 42\t\t\tfunction setBlacklist(address ...\n      JUMPDEST \t\t\tfunction setBlacklist(address ...\n      STOP \t\t\tfunction setBlacklist(address ...\n    tag 6\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 46\t\t\t\n      PUSH [tag] 47\t\t\t\n      JUMP \t\t\t\n    tag 46\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 48\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 48\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 7\t\t\tfunction setDevWallet(address ...\n      JUMPDEST \t\t\tfunction setDevWallet(address ...\n      PUSH [tag] 50\t\t\tfunction setDevWallet(address ...\n      PUSH 4\t\t\tfunction setDevWallet(address ...\n      DUP1 \t\t\tfunction setDevWallet(address ...\n      CALLDATASIZE \t\t\tfunction setDevWallet(address ...\n      SUB \t\t\tfunction setDevWallet(address ...\n      DUP2 \t\t\tfunction setDevWallet(address ...\n      ADD \t\t\tfunction setDevWallet(address ...\n      SWAP1 \t\t\tfunction setDevWallet(address ...\n      PUSH [tag] 51\t\t\tfunction setDevWallet(address ...\n      SWAP2 \t\t\tfunction setDevWallet(address ...\n      SWAP1 \t\t\tfunction setDevWallet(address ...\n      PUSH [tag] 52\t\t\tfunction setDevWallet(address ...\n      JUMP \t\t\tfunction setDevWallet(address ...\n    tag 51\t\t\tfunction setDevWallet(address ...\n      JUMPDEST \t\t\tfunction setDevWallet(address ...\n      PUSH [tag] 53\t\t\tfunction setDevWallet(address ...\n      JUMP \t\t\tfunction setDevWallet(address ...\n    tag 50\t\t\tfunction setDevWallet(address ...\n      JUMPDEST \t\t\tfunction setDevWallet(address ...\n      STOP \t\t\tfunction setDevWallet(address ...\n    tag 8\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 54\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 55\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 56\t\t\t\n      JUMP \t\t\t\n    tag 55\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 57\t\t\t\n      JUMP \t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 58\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 41\t\t\t\n      JUMP \t\t\t\n    tag 58\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 9\t\t\t      }\\r\\n\\r\\n        super._...\n      JUMPDEST \t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH [tag] 59\t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH [tag] 60\t\t\t      }\\r\\n\\r\\n        super._...\n      JUMP \t\t\t      }\\r\\n\\r\\n        super._...\n    tag 59\t\t\t      }\\r\\n\\r\\n        super._...\n      JUMPDEST \t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH 40\t\t\t      }\\r\\n\\r\\n        super._...\n      MLOAD \t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH [tag] 61\t\t\t      }\\r\\n\\r\\n        super._...\n      SWAP2 \t\t\t      }\\r\\n\\r\\n        super._...\n      SWAP1 \t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH [tag] 62\t\t\t      }\\r\\n\\r\\n        super._...\n      JUMP \t\t\t      }\\r\\n\\r\\n        super._...\n    tag 61\t\t\t      }\\r\\n\\r\\n        super._...\n      JUMPDEST \t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH 40\t\t\t      }\\r\\n\\r\\n        super._...\n      MLOAD \t\t\t      }\\r\\n\\r\\n        super._...\n      DUP1 \t\t\t      }\\r\\n\\r\\n        super._...\n      SWAP2 \t\t\t      }\\r\\n\\r\\n        super._...\n      SUB \t\t\t      }\\r\\n\\r\\n        super._...\n      SWAP1 \t\t\t      }\\r\\n\\r\\n        super._...\n      RETURN \t\t\t      }\\r\\n\\r\\n        super._...\n    tag 10\t\t\tbool public tradingEnabled = f...\n      JUMPDEST \t\t\tbool public tradingEnabled = f...\n      PUSH [tag] 63\t\t\tbool public tradingEnabled = f...\n      PUSH [tag] 64\t\t\tbool public tradingEnabled = f...\n      JUMP \t\t\tbool public tradingEnabled = f...\n    tag 63\t\t\tbool public tradingEnabled = f...\n      JUMPDEST \t\t\tbool public tradingEnabled = f...\n      PUSH 40\t\t\tbool public tradingEnabled = f...\n      MLOAD \t\t\tbool public tradingEnabled = f...\n      PUSH [tag] 65\t\t\tbool public tradingEnabled = f...\n      SWAP2 \t\t\tbool public tradingEnabled = f...\n      SWAP1 \t\t\tbool public tradingEnabled = f...\n      PUSH [tag] 41\t\t\tbool public tradingEnabled = f...\n      JUMP \t\t\tbool public tradingEnabled = f...\n    tag 65\t\t\tbool public tradingEnabled = f...\n      JUMPDEST \t\t\tbool public tradingEnabled = f...\n      PUSH 40\t\t\tbool public tradingEnabled = f...\n      MLOAD \t\t\tbool public tradingEnabled = f...\n      DUP1 \t\t\tbool public tradingEnabled = f...\n      SWAP2 \t\t\tbool public tradingEnabled = f...\n      SUB \t\t\tbool public tradingEnabled = f...\n      SWAP1 \t\t\tbool public tradingEnabled = f...\n      RETURN \t\t\tbool public tradingEnabled = f...\n    tag 11\t\t\tuint256 public devFee = 1\n      JUMPDEST \t\t\tuint256 public devFee = 1\n      PUSH [tag] 66\t\t\tuint256 public devFee = 1\n      PUSH [tag] 67\t\t\tuint256 public devFee = 1\n      JUMP \t\t\tuint256 public devFee = 1\n    tag 66\t\t\tuint256 public devFee = 1\n      JUMPDEST \t\t\tuint256 public devFee = 1\n      PUSH 40\t\t\tuint256 public devFee = 1\n      MLOAD \t\t\tuint256 public devFee = 1\n      PUSH [tag] 68\t\t\tuint256 public devFee = 1\n      SWAP2 \t\t\tuint256 public devFee = 1\n      SWAP1 \t\t\tuint256 public devFee = 1\n      PUSH [tag] 49\t\t\tuint256 public devFee = 1\n      JUMP \t\t\tuint256 public devFee = 1\n    tag 68\t\t\tuint256 public devFee = 1\n      JUMPDEST \t\t\tuint256 public devFee = 1\n      PUSH 40\t\t\tuint256 public devFee = 1\n      MLOAD \t\t\tuint256 public devFee = 1\n      DUP1 \t\t\tuint256 public devFee = 1\n      SWAP2 \t\t\tuint256 public devFee = 1\n      SUB \t\t\tuint256 public devFee = 1\n      SWAP1 \t\t\tuint256 public devFee = 1\n      RETURN \t\t\tuint256 public devFee = 1\n    tag 12\t\t\tfunction setFees(uint256 _burn...\n      JUMPDEST \t\t\tfunction setFees(uint256 _burn...\n      PUSH [tag] 69\t\t\tfunction setFees(uint256 _burn...\n      PUSH 4\t\t\tfunction setFees(uint256 _burn...\n      DUP1 \t\t\tfunction setFees(uint256 _burn...\n      CALLDATASIZE \t\t\tfunction setFees(uint256 _burn...\n      SUB \t\t\tfunction setFees(uint256 _burn...\n      DUP2 \t\t\tfunction setFees(uint256 _burn...\n      ADD \t\t\tfunction setFees(uint256 _burn...\n      SWAP1 \t\t\tfunction setFees(uint256 _burn...\n      PUSH [tag] 70\t\t\tfunction setFees(uint256 _burn...\n      SWAP2 \t\t\tfunction setFees(uint256 _burn...\n      SWAP1 \t\t\tfunction setFees(uint256 _burn...\n      PUSH [tag] 71\t\t\tfunction setFees(uint256 _burn...\n      JUMP \t\t\tfunction setFees(uint256 _burn...\n    tag 70\t\t\tfunction setFees(uint256 _burn...\n      JUMPDEST \t\t\tfunction setFees(uint256 _burn...\n      PUSH [tag] 72\t\t\tfunction setFees(uint256 _burn...\n      JUMP \t\t\tfunction setFees(uint256 _burn...\n    tag 69\t\t\tfunction setFees(uint256 _burn...\n      JUMPDEST \t\t\tfunction setFees(uint256 _burn...\n      STOP \t\t\tfunction setFees(uint256 _burn...\n    tag 13\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 73\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 74\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 52\t\t\t\n      JUMP \t\t\t\n    tag 74\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 75\t\t\t\n      JUMP \t\t\t\n    tag 73\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 76\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 76\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 14\t\t\tamount * rewardFee) / 100;\\r\\n...\n      JUMPDEST \t\t\tamount * rewardFee) / 100;\\r\\n...\n      PUSH [tag] 77\t\t\tamount * rewardFee) / 100;\\r\\n...\n      PUSH [tag] 78\t\t\tamount * rewardFee) / 100;\\r\\n...\n      JUMP \t\t\tamount * rewardFee) / 100;\\r\\n...\n    tag 77\t\t\tamount * rewardFee) / 100;\\r\\n...\n      JUMPDEST \t\t\tamount * rewardFee) / 100;\\r\\n...\n      STOP \t\t\tamount * rewardFee) / 100;\\r\\n...\n    tag 15\t\t\tfunction enableTrading() exter...\n      JUMPDEST \t\t\tfunction enableTrading() exter...\n      PUSH [tag] 79\t\t\tfunction enableTrading() exter...\n      PUSH [tag] 80\t\t\tfunction enableTrading() exter...\n      JUMP \t\t\tfunction enableTrading() exter...\n    tag 79\t\t\tfunction enableTrading() exter...\n      JUMPDEST \t\t\tfunction enableTrading() exter...\n      STOP \t\t\tfunction enableTrading() exter...\n    tag 16\t\t\tuint256 public rewardFee = 1\n      JUMPDEST \t\t\tuint256 public rewardFee = 1\n      PUSH [tag] 81\t\t\tuint256 public rewardFee = 1\n      PUSH [tag] 82\t\t\tuint256 public rewardFee = 1\n      JUMP \t\t\tuint256 public rewardFee = 1\n    tag 81\t\t\tuint256 public rewardFee = 1\n      JUMPDEST \t\t\tuint256 public rewardFee = 1\n      PUSH 40\t\t\tuint256 public rewardFee = 1\n      MLOAD \t\t\tuint256 public rewardFee = 1\n      PUSH [tag] 83\t\t\tuint256 public rewardFee = 1\n      SWAP2 \t\t\tuint256 public rewardFee = 1\n      SWAP1 \t\t\tuint256 public rewardFee = 1\n      PUSH [tag] 49\t\t\tuint256 public rewardFee = 1\n      JUMP \t\t\tuint256 public rewardFee = 1\n    tag 83\t\t\tuint256 public rewardFee = 1\n      JUMPDEST \t\t\tuint256 public rewardFee = 1\n      PUSH 40\t\t\tuint256 public rewardFee = 1\n      MLOAD \t\t\tuint256 public rewardFee = 1\n      DUP1 \t\t\tuint256 public rewardFee = 1\n      SWAP2 \t\t\tuint256 public rewardFee = 1\n      SUB \t\t\tuint256 public rewardFee = 1\n      SWAP1 \t\t\tuint256 public rewardFee = 1\n      RETURN \t\t\tuint256 public rewardFee = 1\n    tag 17\t\t\tuint256 public maxTxAmount\n      JUMPDEST \t\t\tuint256 public maxTxAmount\n      PUSH [tag] 84\t\t\tuint256 public maxTxAmount\n      PUSH [tag] 85\t\t\tuint256 public maxTxAmount\n      JUMP \t\t\tuint256 public maxTxAmount\n    tag 84\t\t\tuint256 public maxTxAmount\n      JUMPDEST \t\t\tuint256 public maxTxAmount\n      PUSH 40\t\t\tuint256 public maxTxAmount\n      MLOAD \t\t\tuint256 public maxTxAmount\n      PUSH [tag] 86\t\t\tuint256 public maxTxAmount\n      SWAP2 \t\t\tuint256 public maxTxAmount\n      SWAP1 \t\t\tuint256 public maxTxAmount\n      PUSH [tag] 49\t\t\tuint256 public maxTxAmount\n      JUMP \t\t\tuint256 public maxTxAmount\n    tag 86\t\t\tuint256 public maxTxAmount\n      JUMPDEST \t\t\tuint256 public maxTxAmount\n      PUSH 40\t\t\tuint256 public maxTxAmount\n      MLOAD \t\t\tuint256 public maxTxAmount\n      DUP1 \t\t\tuint256 public maxTxAmount\n      SWAP2 \t\t\tuint256 public maxTxAmount\n      SUB \t\t\tuint256 public maxTxAmount\n      SWAP1 \t\t\tuint256 public maxTxAmount\n      RETURN \t\t\tuint256 public maxTxAmount\n    tag 18\t\t\t56 _maxTxAmount) external only...\n      JUMPDEST \t\t\t56 _maxTxAmount) external only...\n      PUSH [tag] 87\t\t\t56 _maxTxAmount) external only...\n      PUSH [tag] 88\t\t\t56 _maxTxAmount) external only...\n      JUMP \t\t\t56 _maxTxAmount) external only...\n    tag 87\t\t\t56 _maxTxAmount) external only...\n      JUMPDEST \t\t\t56 _maxTxAmount) external only...\n      PUSH 40\t\t\t56 _maxTxAmount) external only...\n      MLOAD \t\t\t56 _maxTxAmount) external only...\n      PUSH [tag] 89\t\t\t56 _maxTxAmount) external only...\n      SWAP2 \t\t\t56 _maxTxAmount) external only...\n      SWAP1 \t\t\t56 _maxTxAmount) external only...\n      PUSH [tag] 90\t\t\t56 _maxTxAmount) external only...\n      JUMP \t\t\t56 _maxTxAmount) external only...\n    tag 89\t\t\t56 _maxTxAmount) external only...\n      JUMPDEST \t\t\t56 _maxTxAmount) external only...\n      PUSH 40\t\t\t56 _maxTxAmount) external only...\n      MLOAD \t\t\t56 _maxTxAmount) external only...\n      DUP1 \t\t\t56 _maxTxAmount) external only...\n      SWAP2 \t\t\t56 _maxTxAmount) external only...\n      SUB \t\t\t56 _maxTxAmount) external only...\n      SWAP1 \t\t\t56 _maxTxAmount) external only...\n      RETURN \t\t\t56 _maxTxAmount) external only...\n    tag 19\t\t\taddress public devWallet\n      JUMPDEST \t\t\taddress public devWallet\n      PUSH [tag] 91\t\t\taddress public devWallet\n      PUSH [tag] 92\t\t\taddress public devWallet\n      JUMP \t\t\taddress public devWallet\n    tag 91\t\t\taddress public devWallet\n      JUMPDEST \t\t\taddress public devWallet\n      PUSH 40\t\t\taddress public devWallet\n      MLOAD \t\t\taddress public devWallet\n      PUSH [tag] 93\t\t\taddress public devWallet\n      SWAP2 \t\t\taddress public devWallet\n      SWAP1 \t\t\taddress public devWallet\n      PUSH [tag] 90\t\t\taddress public devWallet\n      JUMP \t\t\taddress public devWallet\n    tag 93\t\t\taddress public devWallet\n      JUMPDEST \t\t\taddress public devWallet\n      PUSH 40\t\t\taddress public devWallet\n      MLOAD \t\t\taddress public devWallet\n      DUP1 \t\t\taddress public devWallet\n      SWAP2 \t\t\taddress public devWallet\n      SUB \t\t\taddress public devWallet\n      SWAP1 \t\t\taddress public devWallet\n      RETURN \t\t\taddress public devWallet\n    tag 20\t\t\tress is blacklisted\");\\r\\n    ...\n      JUMPDEST \t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH [tag] 94\t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH [tag] 95\t\t\tress is blacklisted\");\\r\\n    ...\n      JUMP \t\t\tress is blacklisted\");\\r\\n    ...\n    tag 94\t\t\tress is blacklisted\");\\r\\n    ...\n      JUMPDEST \t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH 40\t\t\tress is blacklisted\");\\r\\n    ...\n      MLOAD \t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH [tag] 96\t\t\tress is blacklisted\");\\r\\n    ...\n      SWAP2 \t\t\tress is blacklisted\");\\r\\n    ...\n      SWAP1 \t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH [tag] 35\t\t\tress is blacklisted\");\\r\\n    ...\n      JUMP \t\t\tress is blacklisted\");\\r\\n    ...\n    tag 96\t\t\tress is blacklisted\");\\r\\n    ...\n      JUMPDEST \t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH 40\t\t\tress is blacklisted\");\\r\\n    ...\n      MLOAD \t\t\tress is blacklisted\");\\r\\n    ...\n      DUP1 \t\t\tress is blacklisted\");\\r\\n    ...\n      SWAP2 \t\t\tress is blacklisted\");\\r\\n    ...\n      SUB \t\t\tress is blacklisted\");\\r\\n    ...\n      SWAP1 \t\t\tress is blacklisted\");\\r\\n    ...\n      RETURN \t\t\tress is blacklisted\");\\r\\n    ...\n    tag 21\t\t\tuint256 public liquidityFee = ...\n      JUMPDEST \t\t\tuint256 public liquidityFee = ...\n      PUSH [tag] 97\t\t\tuint256 public liquidityFee = ...\n      PUSH [tag] 98\t\t\tuint256 public liquidityFee = ...\n      JUMP \t\t\tuint256 public liquidityFee = ...\n    tag 97\t\t\tuint256 public liquidityFee = ...\n      JUMPDEST \t\t\tuint256 public liquidityFee = ...\n      PUSH 40\t\t\tuint256 public liquidityFee = ...\n      MLOAD \t\t\tuint256 public liquidityFee = ...\n      PUSH [tag] 99\t\t\tuint256 public liquidityFee = ...\n      SWAP2 \t\t\tuint256 public liquidityFee = ...\n      SWAP1 \t\t\tuint256 public liquidityFee = ...\n      PUSH [tag] 49\t\t\tuint256 public liquidityFee = ...\n      JUMP \t\t\tuint256 public liquidityFee = ...\n    tag 99\t\t\tuint256 public liquidityFee = ...\n      JUMPDEST \t\t\tuint256 public liquidityFee = ...\n      PUSH 40\t\t\tuint256 public liquidityFee = ...\n      MLOAD \t\t\tuint256 public liquidityFee = ...\n      DUP1 \t\t\tuint256 public liquidityFee = ...\n      SWAP2 \t\t\tuint256 public liquidityFee = ...\n      SUB \t\t\tuint256 public liquidityFee = ...\n      SWAP1 \t\t\tuint256 public liquidityFee = ...\n      RETURN \t\t\tuint256 public liquidityFee = ...\n    tag 22\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 100\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 101\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 38\t\t\t\n      JUMP \t\t\t\n    tag 101\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 102\t\t\t\n      JUMP \t\t\t\n    tag 100\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 103\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 41\t\t\t\n      JUMP \t\t\t\n    tag 103\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 23\t\t\tfunction excludeFromFees(addre...\n      JUMPDEST \t\t\tfunction excludeFromFees(addre...\n      PUSH [tag] 104\t\t\tfunction excludeFromFees(addre...\n      PUSH 4\t\t\tfunction excludeFromFees(addre...\n      DUP1 \t\t\tfunction excludeFromFees(addre...\n      CALLDATASIZE \t\t\tfunction excludeFromFees(addre...\n      SUB \t\t\tfunction excludeFromFees(addre...\n      DUP2 \t\t\tfunction excludeFromFees(addre...\n      ADD \t\t\tfunction excludeFromFees(addre...\n      SWAP1 \t\t\tfunction excludeFromFees(addre...\n      PUSH [tag] 105\t\t\tfunction excludeFromFees(addre...\n      SWAP2 \t\t\tfunction excludeFromFees(addre...\n      SWAP1 \t\t\tfunction excludeFromFees(addre...\n      PUSH [tag] 44\t\t\tfunction excludeFromFees(addre...\n      JUMP \t\t\tfunction excludeFromFees(addre...\n    tag 105\t\t\tfunction excludeFromFees(addre...\n      JUMPDEST \t\t\tfunction excludeFromFees(addre...\n      PUSH [tag] 106\t\t\tfunction excludeFromFees(addre...\n      JUMP \t\t\tfunction excludeFromFees(addre...\n    tag 104\t\t\tfunction excludeFromFees(addre...\n      JUMPDEST \t\t\tfunction excludeFromFees(addre...\n      STOP \t\t\tfunction excludeFromFees(addre...\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 107\t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      CALLDATASIZE \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 108\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 109\t\t\t\n      JUMP \t\t\t\n    tag 108\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 110\t\t\t\n      JUMP \t\t\t\n    tag 107\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 111\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 111\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      RETURN \t\t\t\n    tag 25\t\t\tfunction setMaxTxAmount(uint25...\n      JUMPDEST \t\t\tfunction setMaxTxAmount(uint25...\n      PUSH [tag] 112\t\t\tfunction setMaxTxAmount(uint25...\n      PUSH 4\t\t\tfunction setMaxTxAmount(uint25...\n      DUP1 \t\t\tfunction setMaxTxAmount(uint25...\n      CALLDATASIZE \t\t\tfunction setMaxTxAmount(uint25...\n      SUB \t\t\tfunction setMaxTxAmount(uint25...\n      DUP2 \t\t\tfunction setMaxTxAmount(uint25...\n      ADD \t\t\tfunction setMaxTxAmount(uint25...\n      SWAP1 \t\t\tfunction setMaxTxAmount(uint25...\n      PUSH [tag] 113\t\t\tfunction setMaxTxAmount(uint25...\n      SWAP2 \t\t\tfunction setMaxTxAmount(uint25...\n      SWAP1 \t\t\tfunction setMaxTxAmount(uint25...\n      PUSH [tag] 114\t\t\tfunction setMaxTxAmount(uint25...\n      JUMP \t\t\tfunction setMaxTxAmount(uint25...\n    tag 113\t\t\tfunction setMaxTxAmount(uint25...\n      JUMPDEST \t\t\tfunction setMaxTxAmount(uint25...\n      PUSH [tag] 115\t\t\tfunction setMaxTxAmount(uint25...\n      JUMP \t\t\tfunction setMaxTxAmount(uint25...\n    tag 112\t\t\tfunction setMaxTxAmount(uint25...\n      JUMPDEST \t\t\tfunction setMaxTxAmount(uint25...\n      STOP \t\t\tfunction setMaxTxAmount(uint25...\n    tag 26\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMPDEST \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      PUSH [tag] 116\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      PUSH 4\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      DUP1 \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      CALLDATASIZE \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      SUB \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      DUP2 \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      ADD \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      SWAP1 \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      PUSH [tag] 117\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      SWAP2 \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      SWAP1 \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      PUSH [tag] 52\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMP \t\t\t    if (burnAmount > 0) {\\r\\n ...\n    tag 117\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMPDEST \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      PUSH [tag] 118\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMP \t\t\t    if (burnAmount > 0) {\\r\\n ...\n    tag 116\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMPDEST \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      STOP \t\t\t    if (burnAmount > 0) {\\r\\n ...\n    tag 27\t\t\tuint256 public burnFee = 2\n      JUMPDEST \t\t\tuint256 public burnFee = 2\n      PUSH [tag] 119\t\t\tuint256 public burnFee = 2\n      PUSH [tag] 120\t\t\tuint256 public burnFee = 2\n      JUMP \t\t\tuint256 public burnFee = 2\n    tag 119\t\t\tuint256 public burnFee = 2\n      JUMPDEST \t\t\tuint256 public burnFee = 2\n      PUSH 40\t\t\tuint256 public burnFee = 2\n      MLOAD \t\t\tuint256 public burnFee = 2\n      PUSH [tag] 121\t\t\tuint256 public burnFee = 2\n      SWAP2 \t\t\tuint256 public burnFee = 2\n      SWAP1 \t\t\tuint256 public burnFee = 2\n      PUSH [tag] 49\t\t\tuint256 public burnFee = 2\n      JUMP \t\t\tuint256 public burnFee = 2\n    tag 121\t\t\tuint256 public burnFee = 2\n      JUMPDEST \t\t\tuint256 public burnFee = 2\n      PUSH 40\t\t\tuint256 public burnFee = 2\n      MLOAD \t\t\tuint256 public burnFee = 2\n      DUP1 \t\t\tuint256 public burnFee = 2\n      SWAP2 \t\t\tuint256 public burnFee = 2\n      SUB \t\t\tuint256 public burnFee = 2\n      SWAP1 \t\t\tuint256 public burnFee = 2\n      RETURN \t\t\tuint256 public burnFee = 2\n    tag 33\t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMPDEST \t\t\tnlyOwner {\\r\\n        devWalle...\n      PUSH 60\t\t\t    }\\r\\n\\r\\n    \n      PUSH 3\t\t\tdress\n      DUP1 \t\t\tdate(address\n      SLOAD \t\t\tdate(address\n      PUSH [tag] 123\t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      PUSH [tag] 124\t\t\tdate(address\n      JUMP \t\t\tdate(address\n    tag 123\t\t\tdate(address\n      JUMPDEST \t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      PUSH 1F\t\t\tdate(address\n      ADD \t\t\tdate(address\n      PUSH 20\t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      SWAP2 \t\t\tdate(address\n      DIV \t\t\tdate(address\n      MUL \t\t\tdate(address\n      PUSH 20\t\t\tdate(address\n      ADD \t\t\tdate(address\n      PUSH 40\t\t\tdate(address\n      MLOAD \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      DUP2 \t\t\tdate(address\n      ADD \t\t\tdate(address\n      PUSH 40\t\t\tdate(address\n      MSTORE \t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      SWAP3 \t\t\tdate(address\n      SWAP2 \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      DUP2 \t\t\tdate(address\n      DUP2 \t\t\tdate(address\n      MSTORE \t\t\tdate(address\n      PUSH 20\t\t\tdate(address\n      ADD \t\t\tdate(address\n      DUP3 \t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      SLOAD \t\t\tdate(address\n      PUSH [tag] 125\t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      PUSH [tag] 124\t\t\tdate(address\n      JUMP \t\t\tdate(address\n    tag 125\t\t\tdate(address\n      JUMPDEST \t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      ISZERO \t\t\tdate(address\n      PUSH [tag] 126\t\t\tdate(address\n      JUMPI \t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      PUSH 1F\t\t\tdate(address\n      LT \t\t\tdate(address\n      PUSH [tag] 127\t\t\tdate(address\n      JUMPI \t\t\tdate(address\n      PUSH 100\t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      DUP4 \t\t\tdate(address\n      SLOAD \t\t\tdate(address\n      DIV \t\t\tdate(address\n      MUL \t\t\tdate(address\n      DUP4 \t\t\tdate(address\n      MSTORE \t\t\tdate(address\n      SWAP2 \t\t\tdate(address\n      PUSH 20\t\t\tdate(address\n      ADD \t\t\tdate(address\n      SWAP2 \t\t\tdate(address\n      PUSH [tag] 126\t\t\tdate(address\n      JUMP \t\t\tdate(address\n    tag 127\t\t\tdate(address\n      JUMPDEST \t\t\tdate(address\n      DUP3 \t\t\tdate(address\n      ADD \t\t\tdate(address\n      SWAP2 \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      PUSH 0\t\t\tdate(address\n      MSTORE \t\t\tdate(address\n      PUSH 20\t\t\tdate(address\n      PUSH 0\t\t\tdate(address\n      KECCAK256 \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n    tag 128\t\t\tdate(address\n      JUMPDEST \t\t\tdate(address\n      DUP2 \t\t\tdate(address\n      SLOAD \t\t\tdate(address\n      DUP2 \t\t\tdate(address\n      MSTORE \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      PUSH 1\t\t\tdate(address\n      ADD \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      PUSH 20\t\t\tdate(address\n      ADD \t\t\tdate(address\n      DUP1 \t\t\tdate(address\n      DUP4 \t\t\tdate(address\n      GT \t\t\tdate(address\n      PUSH [tag] 128\t\t\tdate(address\n      JUMPI \t\t\tdate(address\n      DUP3 \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      SUB \t\t\tdate(address\n      PUSH 1F\t\t\tdate(address\n      AND \t\t\tdate(address\n      DUP3 \t\t\tdate(address\n      ADD \t\t\tdate(address\n      SWAP2 \t\t\tdate(address\n    tag 126\t\t\tdate(address\n      JUMPDEST \t\t\tdate(address\n      POP \t\t\tdate(address\n      POP \t\t\tdate(address\n      POP \t\t\tdate(address\n      POP \t\t\tdate(address\n      POP \t\t\tdate(address\n      SWAP1 \t\t\tdate(address\n      POP \t\t\tdate(address\n      SWAP1 \t\t\tnlyOwner {\\r\\n        devWalle...\n      JUMP \t\t\tnlyOwner {\\r\\n        devWalle...\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 130\t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 130\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 132\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 133\t\t\t\n      JUMP \t\t\t\n    tag 132\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 45\t\t\tfunction setBlacklist(address ...\n      JUMPDEST \t\t\tfunction setBlacklist(address ...\n      PUSH [tag] 135\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 135\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      DUP1 \t\t\tstatus\n      PUSH 6\t\t\tisBlacklisted\n      PUSH 0\t\t\tisBlacklisted[account]\n      DUP5 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[account]\n      AND \t\t\tisBlacklisted[account]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[account]\n      AND \t\t\tisBlacklisted[account]\n      DUP2 \t\t\tisBlacklisted[account]\n      MSTORE \t\t\tisBlacklisted[account]\n      PUSH 20\t\t\tisBlacklisted[account]\n      ADD \t\t\tisBlacklisted[account]\n      SWAP1 \t\t\tisBlacklisted[account]\n      DUP2 \t\t\tisBlacklisted[account]\n      MSTORE \t\t\tisBlacklisted[account]\n      PUSH 20\t\t\tisBlacklisted[account]\n      ADD \t\t\tisBlacklisted[account]\n      PUSH 0\t\t\tisBlacklisted[account]\n      KECCAK256 \t\t\tisBlacklisted[account]\n      PUSH 0\t\t\tisBlacklisted[account]\n      PUSH 100\t\t\tisBlacklisted[account] = statu...\n      EXP \t\t\tisBlacklisted[account] = statu...\n      DUP2 \t\t\tisBlacklisted[account] = statu...\n      SLOAD \t\t\tisBlacklisted[account] = statu...\n      DUP2 \t\t\tisBlacklisted[account] = statu...\n      PUSH FF\t\t\tisBlacklisted[account] = statu...\n      MUL \t\t\tisBlacklisted[account] = statu...\n      NOT \t\t\tisBlacklisted[account] = statu...\n      AND \t\t\tisBlacklisted[account] = statu...\n      SWAP1 \t\t\tisBlacklisted[account] = statu...\n      DUP4 \t\t\tisBlacklisted[account] = statu...\n      ISZERO \t\t\tisBlacklisted[account] = statu...\n      ISZERO \t\t\tisBlacklisted[account] = statu...\n      MUL \t\t\tisBlacklisted[account] = statu...\n      OR \t\t\tisBlacklisted[account] = statu...\n      SWAP1 \t\t\tisBlacklisted[account] = statu...\n      SSTORE \t\t\tisBlacklisted[account] = statu...\n      POP \t\t\tisBlacklisted[account] = statu...\n      POP \t\t\tfunction setBlacklist(address ...\n      POP \t\t\tfunction setBlacklist(address ...\n      JUMP \t\t\tfunction setBlacklist(address ...\n    tag 47\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 2\t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 53\t\t\tfunction setDevWallet(address ...\n      JUMPDEST \t\t\tfunction setDevWallet(address ...\n      PUSH [tag] 140\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 140\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      DUP1 \t\t\t_devWallet\n      PUSH D\t\t\tdevWallet\n      PUSH 1\t\t\tdevWallet\n      PUSH 100\t\t\tdevWallet = _devWallet\n      EXP \t\t\tdevWallet = _devWallet\n      DUP2 \t\t\tdevWallet = _devWallet\n      SLOAD \t\t\tdevWallet = _devWallet\n      DUP2 \t\t\tdevWallet = _devWallet\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdevWallet = _devWallet\n      MUL \t\t\tdevWallet = _devWallet\n      NOT \t\t\tdevWallet = _devWallet\n      AND \t\t\tdevWallet = _devWallet\n      SWAP1 \t\t\tdevWallet = _devWallet\n      DUP4 \t\t\tdevWallet = _devWallet\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdevWallet = _devWallet\n      AND \t\t\tdevWallet = _devWallet\n      MUL \t\t\tdevWallet = _devWallet\n      OR \t\t\tdevWallet = _devWallet\n      SWAP1 \t\t\tdevWallet = _devWallet\n      SSTORE \t\t\tdevWallet = _devWallet\n      POP \t\t\tdevWallet = _devWallet\n      POP \t\t\tfunction setDevWallet(address ...\n      JUMP \t\t\tfunction setDevWallet(address ...\n    tag 57\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 143\t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 143\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 144\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 145\t\t\t\n      JUMP \t\t\t\n    tag 144\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 146\t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 147\t\t\t\n      JUMP \t\t\t\n    tag 146\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 60\t\t\t      }\\r\\n\\r\\n        super._...\n      JUMPDEST \t\t\t      }\\r\\n\\r\\n        super._...\n      PUSH 0\t\t\tount)\n      PUSH 12\t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t      }\\r\\n\\r\\n        super._...\n      JUMP \t\t\t      }\\r\\n\\r\\n        super._...\n    tag 64\t\t\tbool public tradingEnabled = f...\n      JUMPDEST \t\t\tbool public tradingEnabled = f...\n      PUSH D\t\t\tbool public tradingEnabled = f...\n      PUSH 0\t\t\tbool public tradingEnabled = f...\n      SWAP1 \t\t\tbool public tradingEnabled = f...\n      SLOAD \t\t\tbool public tradingEnabled = f...\n      SWAP1 \t\t\tbool public tradingEnabled = f...\n      PUSH 100\t\t\tbool public tradingEnabled = f...\n      EXP \t\t\tbool public tradingEnabled = f...\n      SWAP1 \t\t\tbool public tradingEnabled = f...\n      DIV \t\t\tbool public tradingEnabled = f...\n      PUSH FF\t\t\tbool public tradingEnabled = f...\n      AND \t\t\tbool public tradingEnabled = f...\n      DUP2 \t\t\tbool public tradingEnabled = f...\n      JUMP \t\t\tbool public tradingEnabled = f...\n    tag 67\t\t\tuint256 public devFee = 1\n      JUMPDEST \t\t\tuint256 public devFee = 1\n      PUSH A\t\t\tuint256 public devFee = 1\n      SLOAD \t\t\tuint256 public devFee = 1\n      DUP2 \t\t\tuint256 public devFee = 1\n      JUMP \t\t\tuint256 public devFee = 1\n    tag 72\t\t\tfunction setFees(uint256 _burn...\n      JUMPDEST \t\t\tfunction setFees(uint256 _burn...\n      PUSH [tag] 150\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 150\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      DUP4 \t\t\t_burnFee\n      PUSH 8\t\t\tburnFee\n      DUP2 \t\t\tburnFee = _burnFee\n      SWAP1 \t\t\tburnFee = _burnFee\n      SSTORE \t\t\tburnFee = _burnFee\n      POP \t\t\tburnFee = _burnFee\n      DUP3 \t\t\t_rewardFee\n      PUSH 9\t\t\trewardFee\n      DUP2 \t\t\trewardFee = _rewardFee\n      SWAP1 \t\t\trewardFee = _rewardFee\n      SSTORE \t\t\trewardFee = _rewardFee\n      POP \t\t\trewardFee = _rewardFee\n      DUP2 \t\t\t_devFee\n      PUSH A\t\t\tdevFee\n      DUP2 \t\t\tdevFee = _devFee\n      SWAP1 \t\t\tdevFee = _devFee\n      SSTORE \t\t\tdevFee = _devFee\n      POP \t\t\tdevFee = _devFee\n      DUP1 \t\t\t_liquidityFee\n      PUSH B\t\t\tliquidityFee\n      DUP2 \t\t\tliquidityFee = _liquidityFee\n      SWAP1 \t\t\tliquidityFee = _liquidityFee\n      SSTORE \t\t\tliquidityFee = _liquidityFee\n      POP \t\t\tliquidityFee = _liquidityFee\n      POP \t\t\tfunction setFees(uint256 _burn...\n      POP \t\t\tfunction setFees(uint256 _burn...\n      POP \t\t\tfunction setFees(uint256 _burn...\n      POP \t\t\tfunction setFees(uint256 _burn...\n      JUMP \t\t\tfunction setFees(uint256 _burn...\n    tag 75\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 78\t\t\tamount * rewardFee) / 100;\\r\\n...\n      JUMPDEST \t\t\tamount * rewardFee) / 100;\\r\\n...\n      PUSH [tag] 154\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 154\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      PUSH [tag] 156\t\t\t* devFee) / 100;\\r\\n        ui...\n      PUSH 0\t\t\ti\n      PUSH [tag] 157\t\t\t* devFee) / 100;\\r\\n\n      JUMP \t\t\t* devFee) / 100;\\r\\n        ui...\n    tag 156\t\t\t* devFee) / 100;\\r\\n        ui...\n      JUMPDEST \t\t\t* devFee) / 100;\\r\\n        ui...\n      JUMP \t\t\tamount * rewardFee) / 100;\\r\\n...\n    tag 80\t\t\tfunction enableTrading() exter...\n      JUMPDEST \t\t\tfunction enableTrading() exter...\n      PUSH [tag] 159\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 159\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      PUSH 1\t\t\ttrue\n      PUSH D\t\t\ttradingEnabled\n      PUSH 0\t\t\ttradingEnabled\n      PUSH 100\t\t\ttradingEnabled = true\n      EXP \t\t\ttradingEnabled = true\n      DUP2 \t\t\ttradingEnabled = true\n      SLOAD \t\t\ttradingEnabled = true\n      DUP2 \t\t\ttradingEnabled = true\n      PUSH FF\t\t\ttradingEnabled = true\n      MUL \t\t\ttradingEnabled = true\n      NOT \t\t\ttradingEnabled = true\n      AND \t\t\ttradingEnabled = true\n      SWAP1 \t\t\ttradingEnabled = true\n      DUP4 \t\t\ttradingEnabled = true\n      ISZERO \t\t\ttradingEnabled = true\n      ISZERO \t\t\ttradingEnabled = true\n      MUL \t\t\ttradingEnabled = true\n      OR \t\t\ttradingEnabled = true\n      SWAP1 \t\t\ttradingEnabled = true\n      SSTORE \t\t\ttradingEnabled = true\n      POP \t\t\ttradingEnabled = true\n      JUMP \t\t\tfunction enableTrading() exter...\n    tag 82\t\t\tuint256 public rewardFee = 1\n      JUMPDEST \t\t\tuint256 public rewardFee = 1\n      PUSH 9\t\t\tuint256 public rewardFee = 1\n      SLOAD \t\t\tuint256 public rewardFee = 1\n      DUP2 \t\t\tuint256 public rewardFee = 1\n      JUMP \t\t\tuint256 public rewardFee = 1\n    tag 85\t\t\tuint256 public maxTxAmount\n      JUMPDEST \t\t\tuint256 public maxTxAmount\n      PUSH C\t\t\tuint256 public maxTxAmount\n      SLOAD \t\t\tuint256 public maxTxAmount\n      DUP2 \t\t\tuint256 public maxTxAmount\n      JUMP \t\t\tuint256 public maxTxAmount\n    tag 88\t\t\t56 _maxTxAmount) external only...\n      JUMPDEST \t\t\t56 _maxTxAmount) external only...\n      PUSH 0\t\t\t maxTxA\n      PUSH 5\t\t\tt;\\r\\n  \n      PUSH 0\t\t\tt;\\r\\n  \n      SWAP1 \t\t\tt;\\r\\n  \n      SLOAD \t\t\tt;\\r\\n  \n      SWAP1 \t\t\tt;\\r\\n  \n      PUSH 100\t\t\tt;\\r\\n  \n      EXP \t\t\tt;\\r\\n  \n      SWAP1 \t\t\tt;\\r\\n  \n      DIV \t\t\tt;\\r\\n  \n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tt;\\r\\n  \n      AND \t\t\tt;\\r\\n  \n      SWAP1 \t\t\tTxAmount;\\r\\n  \n      POP \t\t\tTxAmount;\\r\\n  \n      SWAP1 \t\t\t56 _maxTxAmount) external only...\n      JUMP \t\t\t56 _maxTxAmount) external only...\n    tag 92\t\t\taddress public devWallet\n      JUMPDEST \t\t\taddress public devWallet\n      PUSH D\t\t\taddress public devWallet\n      PUSH 1\t\t\taddress public devWallet\n      SWAP1 \t\t\taddress public devWallet\n      SLOAD \t\t\taddress public devWallet\n      SWAP1 \t\t\taddress public devWallet\n      PUSH 100\t\t\taddress public devWallet\n      EXP \t\t\taddress public devWallet\n      SWAP1 \t\t\taddress public devWallet\n      DIV \t\t\taddress public devWallet\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\taddress public devWallet\n      AND \t\t\taddress public devWallet\n      DUP2 \t\t\taddress public devWallet\n      JUMP \t\t\taddress public devWallet\n    tag 95\t\t\tress is blacklisted\");\\r\\n    ...\n      JUMPDEST \t\t\tress is blacklisted\");\\r\\n    ...\n      PUSH 60\t\t\tEnabled || is\n      PUSH 4\t\t\tom], \"T\n      DUP1 \t\t\tFees[from], \"T\n      SLOAD \t\t\tFees[from], \"T\n      PUSH [tag] 163\t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      PUSH [tag] 124\t\t\tFees[from], \"T\n      JUMP \t\t\tFees[from], \"T\n    tag 163\t\t\tFees[from], \"T\n      JUMPDEST \t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      PUSH 1F\t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      PUSH 20\t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      SWAP2 \t\t\tFees[from], \"T\n      DIV \t\t\tFees[from], \"T\n      MUL \t\t\tFees[from], \"T\n      PUSH 20\t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      PUSH 40\t\t\tFees[from], \"T\n      MLOAD \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      DUP2 \t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      PUSH 40\t\t\tFees[from], \"T\n      MSTORE \t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      SWAP3 \t\t\tFees[from], \"T\n      SWAP2 \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      DUP2 \t\t\tFees[from], \"T\n      DUP2 \t\t\tFees[from], \"T\n      MSTORE \t\t\tFees[from], \"T\n      PUSH 20\t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      DUP3 \t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      SLOAD \t\t\tFees[from], \"T\n      PUSH [tag] 164\t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      PUSH [tag] 124\t\t\tFees[from], \"T\n      JUMP \t\t\tFees[from], \"T\n    tag 164\t\t\tFees[from], \"T\n      JUMPDEST \t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      ISZERO \t\t\tFees[from], \"T\n      PUSH [tag] 165\t\t\tFees[from], \"T\n      JUMPI \t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      PUSH 1F\t\t\tFees[from], \"T\n      LT \t\t\tFees[from], \"T\n      PUSH [tag] 166\t\t\tFees[from], \"T\n      JUMPI \t\t\tFees[from], \"T\n      PUSH 100\t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      DUP4 \t\t\tFees[from], \"T\n      SLOAD \t\t\tFees[from], \"T\n      DIV \t\t\tFees[from], \"T\n      MUL \t\t\tFees[from], \"T\n      DUP4 \t\t\tFees[from], \"T\n      MSTORE \t\t\tFees[from], \"T\n      SWAP2 \t\t\tFees[from], \"T\n      PUSH 20\t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      SWAP2 \t\t\tFees[from], \"T\n      PUSH [tag] 165\t\t\tFees[from], \"T\n      JUMP \t\t\tFees[from], \"T\n    tag 166\t\t\tFees[from], \"T\n      JUMPDEST \t\t\tFees[from], \"T\n      DUP3 \t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      SWAP2 \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      PUSH 0\t\t\tFees[from], \"T\n      MSTORE \t\t\tFees[from], \"T\n      PUSH 20\t\t\tFees[from], \"T\n      PUSH 0\t\t\tFees[from], \"T\n      KECCAK256 \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n    tag 167\t\t\tFees[from], \"T\n      JUMPDEST \t\t\tFees[from], \"T\n      DUP2 \t\t\tFees[from], \"T\n      SLOAD \t\t\tFees[from], \"T\n      DUP2 \t\t\tFees[from], \"T\n      MSTORE \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      PUSH 1\t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      PUSH 20\t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      DUP1 \t\t\tFees[from], \"T\n      DUP4 \t\t\tFees[from], \"T\n      GT \t\t\tFees[from], \"T\n      PUSH [tag] 167\t\t\tFees[from], \"T\n      JUMPI \t\t\tFees[from], \"T\n      DUP3 \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      SUB \t\t\tFees[from], \"T\n      PUSH 1F\t\t\tFees[from], \"T\n      AND \t\t\tFees[from], \"T\n      DUP3 \t\t\tFees[from], \"T\n      ADD \t\t\tFees[from], \"T\n      SWAP2 \t\t\tFees[from], \"T\n    tag 165\t\t\tFees[from], \"T\n      JUMPDEST \t\t\tFees[from], \"T\n      POP \t\t\tFees[from], \"T\n      POP \t\t\tFees[from], \"T\n      POP \t\t\tFees[from], \"T\n      POP \t\t\tFees[from], \"T\n      POP \t\t\tFees[from], \"T\n      SWAP1 \t\t\tFees[from], \"T\n      POP \t\t\tFees[from], \"T\n      SWAP1 \t\t\tress is blacklisted\");\\r\\n    ...\n      JUMP \t\t\tress is blacklisted\");\\r\\n    ...\n    tag 98\t\t\tuint256 public liquidityFee = ...\n      JUMPDEST \t\t\tuint256 public liquidityFee = ...\n      PUSH B\t\t\tuint256 public liquidityFee = ...\n      SLOAD \t\t\tuint256 public liquidityFee = ...\n      DUP2 \t\t\tuint256 public liquidityFee = ...\n      JUMP \t\t\tuint256 public liquidityFee = ...\n    tag 102\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 169\t\t\t\n      PUSH [tag] 131\t\t\t\n      JUMP \t\t\t\n    tag 169\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 170\t\t\t\n      DUP2 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 147\t\t\t\n      JUMP \t\t\t\n    tag 170\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 106\t\t\tfunction excludeFromFees(addre...\n      JUMPDEST \t\t\tfunction excludeFromFees(addre...\n      PUSH [tag] 172\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 172\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      DUP1 \t\t\tstatus\n      PUSH 7\t\t\tisExcludedFromFees\n      PUSH 0\t\t\tisExcludedFromFees[account]\n      DUP5 \t\t\taccount\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[account]\n      AND \t\t\tisExcludedFromFees[account]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[account]\n      AND \t\t\tisExcludedFromFees[account]\n      DUP2 \t\t\tisExcludedFromFees[account]\n      MSTORE \t\t\tisExcludedFromFees[account]\n      PUSH 20\t\t\tisExcludedFromFees[account]\n      ADD \t\t\tisExcludedFromFees[account]\n      SWAP1 \t\t\tisExcludedFromFees[account]\n      DUP2 \t\t\tisExcludedFromFees[account]\n      MSTORE \t\t\tisExcludedFromFees[account]\n      PUSH 20\t\t\tisExcludedFromFees[account]\n      ADD \t\t\tisExcludedFromFees[account]\n      PUSH 0\t\t\tisExcludedFromFees[account]\n      KECCAK256 \t\t\tisExcludedFromFees[account]\n      PUSH 0\t\t\tisExcludedFromFees[account]\n      PUSH 100\t\t\tisExcludedFromFees[account] = ...\n      EXP \t\t\tisExcludedFromFees[account] = ...\n      DUP2 \t\t\tisExcludedFromFees[account] = ...\n      SLOAD \t\t\tisExcludedFromFees[account] = ...\n      DUP2 \t\t\tisExcludedFromFees[account] = ...\n      PUSH FF\t\t\tisExcludedFromFees[account] = ...\n      MUL \t\t\tisExcludedFromFees[account] = ...\n      NOT \t\t\tisExcludedFromFees[account] = ...\n      AND \t\t\tisExcludedFromFees[account] = ...\n      SWAP1 \t\t\tisExcludedFromFees[account] = ...\n      DUP4 \t\t\tisExcludedFromFees[account] = ...\n      ISZERO \t\t\tisExcludedFromFees[account] = ...\n      ISZERO \t\t\tisExcludedFromFees[account] = ...\n      MUL \t\t\tisExcludedFromFees[account] = ...\n      OR \t\t\tisExcludedFromFees[account] = ...\n      SWAP1 \t\t\tisExcludedFromFees[account] = ...\n      SSTORE \t\t\tisExcludedFromFees[account] = ...\n      POP \t\t\tisExcludedFromFees[account] = ...\n      POP \t\t\tfunction excludeFromFees(addre...\n      POP \t\t\tfunction excludeFromFees(addre...\n      JUMP \t\t\tfunction excludeFromFees(addre...\n    tag 110\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 1\t\t\t\n      PUSH 0\t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 115\t\t\tfunction setMaxTxAmount(uint25...\n      JUMPDEST \t\t\tfunction setMaxTxAmount(uint25...\n      PUSH [tag] 176\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 176\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      DUP1 \t\t\t_maxTxAmount\n      PUSH C\t\t\tmaxTxAmount\n      DUP2 \t\t\tmaxTxAmount = _maxTxAmount\n      SWAP1 \t\t\tmaxTxAmount = _maxTxAmount\n      SSTORE \t\t\tmaxTxAmount = _maxTxAmount\n      POP \t\t\tmaxTxAmount = _maxTxAmount\n      POP \t\t\tfunction setMaxTxAmount(uint25...\n      JUMP \t\t\tfunction setMaxTxAmount(uint25...\n    tag 118\t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMPDEST \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      PUSH [tag] 179\t\t\t       devFee\n      PUSH [tag] 136\t\t\t       devF\n      JUMP \t\t\t       devFee\n    tag 179\t\t\t       devFee\n      JUMPDEST \t\t\t       devFee\n      PUSH 0\t\t\t\\r\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tif (devAmount > 0) {\\r\\n\n      AND \t\t\tif (devAmount > 0) {\\r\\n\n      DUP2 \t\t\tif (devA\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tif (devAmount > 0) {\\r\\n\n      AND \t\t\tif (devAmount > 0) {\\r\\n\n      SUB \t\t\tif (devAmount > 0) {\\r\\n\n      PUSH [tag] 181\t\t\t    if (devAmount > 0) {\\r\\n  ...\n      JUMPI \t\t\t    if (devAmount > 0) {\\r\\n  ...\n      PUSH 0\t\t\tt\n      PUSH 40\t\t\tte(from, devWallet, devAmount)...\n      MLOAD \t\t\tte(from, devWallet, devAmount)...\n      PUSH 1E4FBDF700000000000000000000000000000000000000000000000000000000\t\t\tte(from, devWallet, devAmount)...\n      DUP2 \t\t\tte(from, devWallet, devAmount)...\n      MSTORE \t\t\tte(from, devWallet, devAmount)...\n      PUSH 4\t\t\tte(from, devWallet, devAmount)...\n      ADD \t\t\tte(from, devWallet, devAmount)...\n      PUSH [tag] 182\t\t\tte(from, devWallet, devAmount)...\n      SWAP2 \t\t\tte(from, devWallet, devAmount)...\n      SWAP1 \t\t\tte(from, devWallet, devAmount)...\n      PUSH [tag] 90\t\t\tte(from, devWallet, devAmount)...\n      JUMP \t\t\tte(from, devWallet, devAmount)...\n    tag 182\t\t\tte(from, devWallet, devAmount)...\n      JUMPDEST \t\t\tte(from, devWallet, devAmount)...\n      PUSH 40\t\t\tte(from, devWallet, devAmount)...\n      MLOAD \t\t\tte(from, devWallet, devAmount)...\n      DUP1 \t\t\tte(from, devWallet, devAmount)...\n      SWAP2 \t\t\tte(from, devWallet, devAmount)...\n      SUB \t\t\tte(from, devWallet, devAmount)...\n      SWAP1 \t\t\tte(from, devWallet, devAmount)...\n      REVERT \t\t\tte(from, devWallet, devAmount)...\n    tag 181\t\t\t    if (devAmount > 0) {\\r\\n  ...\n      JUMPDEST \t\t\t    if (devAmount > 0) {\\r\\n  ...\n      PUSH [tag] 183\t\t\t   super._update(from, to, s\n      DUP2 \t\t\tom, to, \n      PUSH [tag] 157\t\t\t   super._update(f\n      JUMP \t\t\t   super._update(from, to, s\n    tag 183\t\t\t   super._update(from, to, s\n      JUMPDEST \t\t\t   super._update(from, to, s\n      POP \t\t\t    if (burnAmount > 0) {\\r\\n ...\n      JUMP \t\t\t    if (burnAmount > 0) {\\r\\n ...\n    tag 120\t\t\tuint256 public burnFee = 2\n      JUMPDEST \t\t\tuint256 public burnFee = 2\n      PUSH 8\t\t\tuint256 public burnFee = 2\n      SLOAD \t\t\tuint256 public burnFee = 2\n      DUP2 \t\t\tuint256 public burnFee = 2\n      JUMP \t\t\tuint256 public burnFee = 2\n    tag 131\t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      JUMPDEST \t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      PUSH 0\t\t\t Ownabl\n      CALLER \t\t\t      uint\n      SWAP1 \t\t\t) {\\r\\n        uint\n      POP \t\t\t) {\\r\\n        uint\n      SWAP1 \t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      JUMP \t\t\tvWallet;\\r\\n\\r\\n    constructo...\n    tag 133\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 186\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH [tag] 187\t\t\t\n      JUMP \t\t\t\n    tag 186\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 136\t\t\t   devWallet = _devWallet;\\r\\n...\n      JUMPDEST \t\t\t   devWallet = _devWallet;\\r\\n...\n      PUSH [tag] 189\t\t\t, address to\n      PUSH [tag] 131\t\t\t, address \n      JUMP \t\t\t, address to\n    tag 189\t\t\t, address to\n      JUMPDEST \t\t\t, address to\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tddress from, address to\n      AND \t\t\tddress from, address to\n      PUSH [tag] 190\t\t\tddress \n      PUSH [tag] 88\t\t\tddres\n      JUMP \t\t\tddress \n    tag 190\t\t\tddress \n      JUMPDEST \t\t\tddress \n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tddress from, address to\n      AND \t\t\tddress from, address to\n      EQ \t\t\tddress from, address to\n      PUSH [tag] 191\t\t\tte(address from, address to, u...\n      JUMPI \t\t\tte(address from, address to, u...\n      PUSH [tag] 192\t\t\tuire(!isBlac\n      PUSH [tag] 131\t\t\tuire(!isBl\n      JUMP \t\t\tuire(!isBlac\n    tag 192\t\t\tuire(!isBlac\n      JUMPDEST \t\t\tuire(!isBlac\n      PUSH 40\t\t\tnal override {\\r\\n        requ...\n      MLOAD \t\t\tnal override {\\r\\n        requ...\n      PUSH 118CDAA700000000000000000000000000000000000000000000000000000000\t\t\tnal override {\\r\\n        requ...\n      DUP2 \t\t\tnal override {\\r\\n        requ...\n      MSTORE \t\t\tnal override {\\r\\n        requ...\n      PUSH 4\t\t\tnal override {\\r\\n        requ...\n      ADD \t\t\tnal override {\\r\\n        requ...\n      PUSH [tag] 193\t\t\tnal override {\\r\\n        requ...\n      SWAP2 \t\t\tnal override {\\r\\n        requ...\n      SWAP1 \t\t\tnal override {\\r\\n        requ...\n      PUSH [tag] 90\t\t\tnal override {\\r\\n        requ...\n      JUMP \t\t\tnal override {\\r\\n        requ...\n    tag 193\t\t\tnal override {\\r\\n        requ...\n      JUMPDEST \t\t\tnal override {\\r\\n        requ...\n      PUSH 40\t\t\tnal override {\\r\\n        requ...\n      MLOAD \t\t\tnal override {\\r\\n        requ...\n      DUP1 \t\t\tnal override {\\r\\n        requ...\n      SWAP2 \t\t\tnal override {\\r\\n        requ...\n      SUB \t\t\tnal override {\\r\\n        requ...\n      SWAP1 \t\t\tnal override {\\r\\n        requ...\n      REVERT \t\t\tnal override {\\r\\n        requ...\n    tag 191\t\t\tte(address from, address to, u...\n      JUMPDEST \t\t\tte(address from, address to, u...\n      JUMP \t\t\t   devWallet = _devWallet;\\r\\n...\n    tag 145\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 195\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 110\t\t\t\n      JUMP \t\t\t\n    tag 195\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 196\t\t\t\n      JUMPI \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 197\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH FB8F41B200000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 198\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 199\t\t\t\n      JUMP \t\t\t\n    tag 198\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 197\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 200\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 187\t\t\t\n      JUMP \t\t\t\n    tag 200\t\t\t\n      JUMPDEST \t\t\t\n    tag 196\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 147\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 202\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 96C6FD1E00000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 203\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 90\t\t\t\n      JUMP \t\t\t\n    tag 203\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 202\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH EC442F0500000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 205\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 90\t\t\t\n      JUMP \t\t\t\n    tag 205\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 204\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 206\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 207\t\t\t\n      JUMP \t\t\t\n    tag 206\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 157\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 5\t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      PUSH 5\t\t\t\n      PUSH 0\t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      MUL \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      MUL \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 187\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 210\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH E602DF0500000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 211\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 90\t\t\t\n      JUMP \t\t\t\n    tag 211\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 210\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 212\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 94280D6200000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 213\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 90\t\t\t\n      JUMP \t\t\t\n    tag 213\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 212\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 0\t\t\t\n      DUP7 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 214\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\t\n      DUP5 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 215\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 215\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n    tag 214\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 207\t\t\tfunction _update(address from,...\n      JUMPDEST \t\t\tfunction _update(address from,...\n      PUSH 6\t\t\tisBlacklisted\n      PUSH 0\t\t\tisBlacklisted[from]\n      DUP5 \t\t\tfrom\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[from]\n      AND \t\t\tisBlacklisted[from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[from]\n      AND \t\t\tisBlacklisted[from]\n      DUP2 \t\t\tisBlacklisted[from]\n      MSTORE \t\t\tisBlacklisted[from]\n      PUSH 20\t\t\tisBlacklisted[from]\n      ADD \t\t\tisBlacklisted[from]\n      SWAP1 \t\t\tisBlacklisted[from]\n      DUP2 \t\t\tisBlacklisted[from]\n      MSTORE \t\t\tisBlacklisted[from]\n      PUSH 20\t\t\tisBlacklisted[from]\n      ADD \t\t\tisBlacklisted[from]\n      PUSH 0\t\t\tisBlacklisted[from]\n      KECCAK256 \t\t\tisBlacklisted[from]\n      PUSH 0\t\t\tisBlacklisted[from]\n      SWAP1 \t\t\tisBlacklisted[from]\n      SLOAD \t\t\tisBlacklisted[from]\n      SWAP1 \t\t\tisBlacklisted[from]\n      PUSH 100\t\t\tisBlacklisted[from]\n      EXP \t\t\tisBlacklisted[from]\n      SWAP1 \t\t\tisBlacklisted[from]\n      DIV \t\t\tisBlacklisted[from]\n      PUSH FF\t\t\tisBlacklisted[from]\n      AND \t\t\tisBlacklisted[from]\n      ISZERO \t\t\t!isBlacklisted[from]\n      DUP1 \t\t\t!isBlacklisted[from] && !isBla...\n      ISZERO \t\t\t!isBlacklisted[from] && !isBla...\n      PUSH [tag] 217\t\t\t!isBlacklisted[from] && !isBla...\n      JUMPI \t\t\t!isBlacklisted[from] && !isBla...\n      POP \t\t\t!isBlacklisted[from] && !isBla...\n      PUSH 6\t\t\tisBlacklisted\n      PUSH 0\t\t\tisBlacklisted[to]\n      DUP4 \t\t\tto\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[to]\n      AND \t\t\tisBlacklisted[to]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisBlacklisted[to]\n      AND \t\t\tisBlacklisted[to]\n      DUP2 \t\t\tisBlacklisted[to]\n      MSTORE \t\t\tisBlacklisted[to]\n      PUSH 20\t\t\tisBlacklisted[to]\n      ADD \t\t\tisBlacklisted[to]\n      SWAP1 \t\t\tisBlacklisted[to]\n      DUP2 \t\t\tisBlacklisted[to]\n      MSTORE \t\t\tisBlacklisted[to]\n      PUSH 20\t\t\tisBlacklisted[to]\n      ADD \t\t\tisBlacklisted[to]\n      PUSH 0\t\t\tisBlacklisted[to]\n      KECCAK256 \t\t\tisBlacklisted[to]\n      PUSH 0\t\t\tisBlacklisted[to]\n      SWAP1 \t\t\tisBlacklisted[to]\n      SLOAD \t\t\tisBlacklisted[to]\n      SWAP1 \t\t\tisBlacklisted[to]\n      PUSH 100\t\t\tisBlacklisted[to]\n      EXP \t\t\tisBlacklisted[to]\n      SWAP1 \t\t\tisBlacklisted[to]\n      DIV \t\t\tisBlacklisted[to]\n      PUSH FF\t\t\tisBlacklisted[to]\n      AND \t\t\tisBlacklisted[to]\n      ISZERO \t\t\t!isBlacklisted[to]\n    tag 217\t\t\t!isBlacklisted[from] && !isBla...\n      JUMPDEST \t\t\t!isBlacklisted[from] && !isBla...\n      PUSH [tag] 218\t\t\trequire(!isBlacklisted[from] &...\n      JUMPI \t\t\trequire(!isBlacklisted[from] &...\n      PUSH 40\t\t\trequire(!isBlacklisted[from] &...\n      MLOAD \t\t\trequire(!isBlacklisted[from] &...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(!isBlacklisted[from] &...\n      DUP2 \t\t\trequire(!isBlacklisted[from] &...\n      MSTORE \t\t\trequire(!isBlacklisted[from] &...\n      PUSH 4\t\t\trequire(!isBlacklisted[from] &...\n      ADD \t\t\trequire(!isBlacklisted[from] &...\n      PUSH [tag] 219\t\t\trequire(!isBlacklisted[from] &...\n      SWAP1 \t\t\trequire(!isBlacklisted[from] &...\n      PUSH [tag] 220\t\t\trequire(!isBlacklisted[from] &...\n      JUMP \t\t\trequire(!isBlacklisted[from] &...\n    tag 219\t\t\trequire(!isBlacklisted[from] &...\n      JUMPDEST \t\t\trequire(!isBlacklisted[from] &...\n      PUSH 40\t\t\trequire(!isBlacklisted[from] &...\n      MLOAD \t\t\trequire(!isBlacklisted[from] &...\n      DUP1 \t\t\trequire(!isBlacklisted[from] &...\n      SWAP2 \t\t\trequire(!isBlacklisted[from] &...\n      SUB \t\t\trequire(!isBlacklisted[from] &...\n      SWAP1 \t\t\trequire(!isBlacklisted[from] &...\n      REVERT \t\t\trequire(!isBlacklisted[from] &...\n    tag 218\t\t\trequire(!isBlacklisted[from] &...\n      JUMPDEST \t\t\trequire(!isBlacklisted[from] &...\n      PUSH D\t\t\ttradingEnabled\n      PUSH 0\t\t\ttradingEnabled\n      SWAP1 \t\t\ttradingEnabled\n      SLOAD \t\t\ttradingEnabled\n      SWAP1 \t\t\ttradingEnabled\n      PUSH 100\t\t\ttradingEnabled\n      EXP \t\t\ttradingEnabled\n      SWAP1 \t\t\ttradingEnabled\n      DIV \t\t\ttradingEnabled\n      PUSH FF\t\t\ttradingEnabled\n      AND \t\t\ttradingEnabled\n      DUP1 \t\t\ttradingEnabled || isExcludedFr...\n      PUSH [tag] 221\t\t\ttradingEnabled || isExcludedFr...\n      JUMPI \t\t\ttradingEnabled || isExcludedFr...\n      POP \t\t\ttradingEnabled || isExcludedFr...\n      PUSH 7\t\t\tisExcludedFromFees\n      PUSH 0\t\t\tisExcludedFromFees[from]\n      DUP5 \t\t\tfrom\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n      AND \t\t\tisExcludedFromFees[from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n      AND \t\t\tisExcludedFromFees[from]\n      DUP2 \t\t\tisExcludedFromFees[from]\n      MSTORE \t\t\tisExcludedFromFees[from]\n      PUSH 20\t\t\tisExcludedFromFees[from]\n      ADD \t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      DUP2 \t\t\tisExcludedFromFees[from]\n      MSTORE \t\t\tisExcludedFromFees[from]\n      PUSH 20\t\t\tisExcludedFromFees[from]\n      ADD \t\t\tisExcludedFromFees[from]\n      PUSH 0\t\t\tisExcludedFromFees[from]\n      KECCAK256 \t\t\tisExcludedFromFees[from]\n      PUSH 0\t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      SLOAD \t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      PUSH 100\t\t\tisExcludedFromFees[from]\n      EXP \t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      DIV \t\t\tisExcludedFromFees[from]\n      PUSH FF\t\t\tisExcludedFromFees[from]\n      AND \t\t\tisExcludedFromFees[from]\n    tag 221\t\t\ttradingEnabled || isExcludedFr...\n      JUMPDEST \t\t\ttradingEnabled || isExcludedFr...\n      PUSH [tag] 222\t\t\trequire(tradingEnabled || isEx...\n      JUMPI \t\t\trequire(tradingEnabled || isEx...\n      PUSH 40\t\t\trequire(tradingEnabled || isEx...\n      MLOAD \t\t\trequire(tradingEnabled || isEx...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(tradingEnabled || isEx...\n      DUP2 \t\t\trequire(tradingEnabled || isEx...\n      MSTORE \t\t\trequire(tradingEnabled || isEx...\n      PUSH 4\t\t\trequire(tradingEnabled || isEx...\n      ADD \t\t\trequire(tradingEnabled || isEx...\n      PUSH [tag] 223\t\t\trequire(tradingEnabled || isEx...\n      SWAP1 \t\t\trequire(tradingEnabled || isEx...\n      PUSH [tag] 224\t\t\trequire(tradingEnabled || isEx...\n      JUMP \t\t\trequire(tradingEnabled || isEx...\n    tag 223\t\t\trequire(tradingEnabled || isEx...\n      JUMPDEST \t\t\trequire(tradingEnabled || isEx...\n      PUSH 40\t\t\trequire(tradingEnabled || isEx...\n      MLOAD \t\t\trequire(tradingEnabled || isEx...\n      DUP1 \t\t\trequire(tradingEnabled || isEx...\n      SWAP2 \t\t\trequire(tradingEnabled || isEx...\n      SUB \t\t\trequire(tradingEnabled || isEx...\n      SWAP1 \t\t\trequire(tradingEnabled || isEx...\n      REVERT \t\t\trequire(tradingEnabled || isEx...\n    tag 222\t\t\trequire(tradingEnabled || isEx...\n      JUMPDEST \t\t\trequire(tradingEnabled || isEx...\n      PUSH C\t\t\tmaxTxAmount\n      SLOAD \t\t\tmaxTxAmount\n      DUP2 \t\t\tamount\n      GT \t\t\tamount <= maxTxAmount\n      ISZERO \t\t\tamount <= maxTxAmount\n      DUP1 \t\t\tamount <= maxTxAmount || isExc...\n      PUSH [tag] 225\t\t\tamount <= maxTxAmount || isExc...\n      JUMPI \t\t\tamount <= maxTxAmount || isExc...\n      POP \t\t\tamount <= maxTxAmount || isExc...\n      PUSH 7\t\t\tisExcludedFromFees\n      PUSH 0\t\t\tisExcludedFromFees[from]\n      DUP5 \t\t\tfrom\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n      AND \t\t\tisExcludedFromFees[from]\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tisExcludedFromFees[from]\n      AND \t\t\tisExcludedFromFees[from]\n      DUP2 \t\t\tisExcludedFromFees[from]\n      MSTORE \t\t\tisExcludedFromFees[from]\n      PUSH 20\t\t\tisExcludedFromFees[from]\n      ADD \t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      DUP2 \t\t\tisExcludedFromFees[from]\n      MSTORE \t\t\tisExcludedFromFees[from]\n      PUSH 20\t\t\tisExcludedFromFees[from]\n      ADD \t\t\tisExcludedFromFees[from]\n      PUSH 0\t\t\tisExcludedFromFees[from]\n      KECCAK256 \t\t\tisExcludedFromFees[from]\n      PUSH 0\t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      SLOAD \t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      PUSH 100\t\t\tisExcludedFromFees[from]\n      EXP \t\t\tisExcludedFromFees[from]\n      SWAP1 \t\t\tisExcludedFromFees[from]\n      DIV \t\t\tisExcludedFromFees[from]\n      PUSH FF\t\t\tisExcludedFromFees[from]\n      AND \t\t\tisExcludedFromFees[from]\n    tag 225\t\t\tamount <= maxTxAmount || isExc...\n      JUMPDEST \t\t\tamount <= maxTxAmount || isExc...\n      PUSH [tag] 226\t\t\trequire(amount <= maxTxAmount ...\n      JUMPI \t\t\trequire(amount <= maxTxAmount ...\n      PUSH 40\t\t\trequire(amount <= maxTxAmount ...\n      MLOAD \t\t\trequire(amount <= maxTxAmount ...\n      PUSH 8C379A000000000000000000000000000000000000000000000000000000000\t\t\trequire(amount <= maxTxAmount ...\n      DUP2 \t\t\trequire(amount <= maxTxAmount ...\n      MSTORE \t\t\trequire(amount <= maxTxAmount ...\n      PUSH 4\t\t\trequire(amount <= maxTxAmount ...\n      ADD \t\t\trequire(amount <= maxTxAmount ...\n      PUSH [tag] 227\t\t\trequire(amount <= maxTxAmount ...\n      SWAP1 \t\t\trequire(amount <= maxTxAmount ...\n      PUSH [tag] 228\t\t\trequire(amount <= maxTxAmount ...\n      JUMP \t\t\trequire(amount <= maxTxAmount ...\n    tag 227\t\t\trequire(amount <= maxTxAmount ...\n      JUMPDEST \t\t\trequire(amount <= maxTxAmount ...\n      PUSH 40\t\t\trequire(amount <= maxTxAmount ...\n      MLOAD \t\t\trequire(amount <= maxTxAmount ...\n      DUP1 \t\t\trequire(amount <= maxTxAmount ...\n      SWAP2 \t\t\trequire(amount <= maxTxAmount ...\n      SUB \t\t\trequire(amount <= maxTxAmount ...\n      SWAP1 \t\t\trequire(amount <= maxTxAmount ...\n      REVERT \t\t\trequire(amount <= maxTxAmount ...\n    tag 226\t\t\trequire(amount <= maxTxAmount ...\n      JUMPDEST \t\t\trequire(amount <= maxTxAmount ...\n      PUSH 0\t\t\tuint256 burnAmount\n      PUSH 64\t\t\t100\n      PUSH 8\t\t\tburnFee\n      SLOAD \t\t\tburnFee\n      DUP4 \t\t\tamount\n      PUSH [tag] 229\t\t\tamount * burnFee\n      SWAP2 \t\t\tamount * burnFee\n      SWAP1 \t\t\tamount * burnFee\n      PUSH [tag] 230\t\t\tamount * burnFee\n      JUMP \t\t\tamount * burnFee\n    tag 229\t\t\tamount * burnFee\n      JUMPDEST \t\t\tamount * burnFee\n      PUSH [tag] 231\t\t\t(amount * burnFee) / 100\n      SWAP2 \t\t\t(amount * burnFee) / 100\n      SWAP1 \t\t\t(amount * burnFee) / 100\n      PUSH [tag] 232\t\t\t(amount * burnFee) / 100\n      JUMP \t\t\t(amount * burnFee) / 100\n    tag 231\t\t\t(amount * burnFee) / 100\n      JUMPDEST \t\t\t(amount * burnFee) / 100\n      SWAP1 \t\t\tuint256 burnAmount = (amount *...\n      POP \t\t\tuint256 burnAmount = (amount *...\n      PUSH 0\t\t\tuint256 rewardAmount\n      PUSH 64\t\t\t100\n      PUSH 9\t\t\trewardFee\n      SLOAD \t\t\trewardFee\n      DUP5 \t\t\tamount\n      PUSH [tag] 233\t\t\tamount * rewardFee\n      SWAP2 \t\t\tamount * rewardFee\n      SWAP1 \t\t\tamount * rewardFee\n      PUSH [tag] 230\t\t\tamount * rewardFee\n      JUMP \t\t\tamount * rewardFee\n    tag 233\t\t\tamount * rewardFee\n      JUMPDEST \t\t\tamount * rewardFee\n      PUSH [tag] 234\t\t\t(amount * rewardFee) / 100\n      SWAP2 \t\t\t(amount * rewardFee) / 100\n      SWAP1 \t\t\t(amount * rewardFee) / 100\n      PUSH [tag] 232\t\t\t(amount * rewardFee) / 100\n      JUMP \t\t\t(amount * rewardFee) / 100\n    tag 234\t\t\t(amount * rewardFee) / 100\n      JUMPDEST \t\t\t(amount * rewardFee) / 100\n      SWAP1 \t\t\tuint256 rewardAmount = (amount...\n      POP \t\t\tuint256 rewardAmount = (amount...\n      PUSH 0\t\t\tuint256 devAmount\n      PUSH 64\t\t\t100\n      PUSH A\t\t\tdevFee\n      SLOAD \t\t\tdevFee\n      DUP6 \t\t\tamount\n      PUSH [tag] 235\t\t\tamount * devFee\n      SWAP2 \t\t\tamount * devFee\n      SWAP1 \t\t\tamount * devFee\n      PUSH [tag] 230\t\t\tamount * devFee\n      JUMP \t\t\tamount * devFee\n    tag 235\t\t\tamount * devFee\n      JUMPDEST \t\t\tamount * devFee\n      PUSH [tag] 236\t\t\t(amount * devFee) / 100\n      SWAP2 \t\t\t(amount * devFee) / 100\n      SWAP1 \t\t\t(amount * devFee) / 100\n      PUSH [tag] 232\t\t\t(amount * devFee) / 100\n      JUMP \t\t\t(amount * devFee) / 100\n    tag 236\t\t\t(amount * devFee) / 100\n      JUMPDEST \t\t\t(amount * devFee) / 100\n      SWAP1 \t\t\tuint256 devAmount = (amount * ...\n      POP \t\t\tuint256 devAmount = (amount * ...\n      PUSH 0\t\t\tuint256 liquidityAmount\n      PUSH 64\t\t\t100\n      PUSH B\t\t\tliquidityFee\n      SLOAD \t\t\tliquidityFee\n      DUP7 \t\t\tamount\n      PUSH [tag] 237\t\t\tamount * liquidityFee\n      SWAP2 \t\t\tamount * liquidityFee\n      SWAP1 \t\t\tamount * liquidityFee\n      PUSH [tag] 230\t\t\tamount * liquidityFee\n      JUMP \t\t\tamount * liquidityFee\n    tag 237\t\t\tamount * liquidityFee\n      JUMPDEST \t\t\tamount * liquidityFee\n      PUSH [tag] 238\t\t\t(amount * liquidityFee) / 100\n      SWAP2 \t\t\t(amount * liquidityFee) / 100\n      SWAP1 \t\t\t(amount * liquidityFee) / 100\n      PUSH [tag] 232\t\t\t(amount * liquidityFee) / 100\n      JUMP \t\t\t(amount * liquidityFee) / 100\n    tag 238\t\t\t(amount * liquidityFee) / 100\n      JUMPDEST \t\t\t(amount * liquidityFee) / 100\n      SWAP1 \t\t\tuint256 liquidityAmount = (amo...\n      POP \t\t\tuint256 liquidityAmount = (amo...\n      PUSH 0\t\t\tuint256 sendAmount\n      DUP2 \t\t\tliquidityAmount\n      DUP4 \t\t\tdevAmount\n      DUP6 \t\t\trewardAmount\n      DUP8 \t\t\tburnAmount\n      DUP10 \t\t\tamount\n      PUSH [tag] 239\t\t\tamount - burnAmount\n      SWAP2 \t\t\tamount - burnAmount\n      SWAP1 \t\t\tamount - burnAmount\n      PUSH [tag] 240\t\t\tamount - burnAmount\n      JUMP \t\t\tamount - burnAmount\n    tag 239\t\t\tamount - burnAmount\n      JUMPDEST \t\t\tamount - burnAmount\n      PUSH [tag] 241\t\t\tamount - burnAmount - rewardAm...\n      SWAP2 \t\t\tamount - burnAmount - rewardAm...\n      SWAP1 \t\t\tamount - burnAmount - rewardAm...\n      PUSH [tag] 240\t\t\tamount - burnAmount - rewardAm...\n      JUMP \t\t\tamount - burnAmount - rewardAm...\n    tag 241\t\t\tamount - burnAmount - rewardAm...\n      JUMPDEST \t\t\tamount - burnAmount - rewardAm...\n      PUSH [tag] 242\t\t\tamount - burnAmount - rewardAm...\n      SWAP2 \t\t\tamount - burnAmount - rewardAm...\n      SWAP1 \t\t\tamount - burnAmount - rewardAm...\n      PUSH [tag] 240\t\t\tamount - burnAmount - rewardAm...\n      JUMP \t\t\tamount - burnAmount - rewardAm...\n    tag 242\t\t\tamount - burnAmount - rewardAm...\n      JUMPDEST \t\t\tamount - burnAmount - rewardAm...\n      PUSH [tag] 243\t\t\tamount - burnAmount - rewardAm...\n      SWAP2 \t\t\tamount - burnAmount - rewardAm...\n      SWAP1 \t\t\tamount - burnAmount - rewardAm...\n      PUSH [tag] 240\t\t\tamount - burnAmount - rewardAm...\n      JUMP \t\t\tamount - burnAmount - rewardAm...\n    tag 243\t\t\tamount - burnAmount - rewardAm...\n      JUMPDEST \t\t\tamount - burnAmount - rewardAm...\n      SWAP1 \t\t\tuint256 sendAmount = amount - ...\n      POP \t\t\tuint256 sendAmount = amount - ...\n      PUSH 0\t\t\t0\n      DUP6 \t\t\tburnAmount\n      GT \t\t\tburnAmount > 0\n      ISZERO \t\t\tif (burnAmount > 0) {\\r\\n     ...\n      PUSH [tag] 244\t\t\tif (burnAmount > 0) {\\r\\n     ...\n      JUMPI \t\t\tif (burnAmount > 0) {\\r\\n     ...\n      PUSH [tag] 245\t\t\t_burn(from, burnAmount)\n      DUP9 \t\t\tfrom\n      DUP7 \t\t\tburnAmount\n      PUSH [tag] 246\t\t\t_burn\n      JUMP \t\t\t_burn(from, burnAmount)\n    tag 245\t\t\t_burn(from, burnAmount)\n      JUMPDEST \t\t\t_burn(from, burnAmount)\n    tag 244\t\t\tif (burnAmount > 0) {\\r\\n     ...\n      JUMPDEST \t\t\tif (burnAmount > 0) {\\r\\n     ...\n      PUSH 0\t\t\t0\n      DUP4 \t\t\tdevAmount\n      GT \t\t\tdevAmount > 0\n      ISZERO \t\t\tif (devAmount > 0) {\\r\\n      ...\n      PUSH [tag] 247\t\t\tif (devAmount > 0) {\\r\\n      ...\n      JUMPI \t\t\tif (devAmount > 0) {\\r\\n      ...\n      PUSH [tag] 248\t\t\tsuper._update(from, devWallet,...\n      DUP9 \t\t\tfrom\n      PUSH D\t\t\tdevWallet\n      PUSH 1\t\t\tdevWallet\n      SWAP1 \t\t\tdevWallet\n      SLOAD \t\t\tdevWallet\n      SWAP1 \t\t\tdevWallet\n      PUSH 100\t\t\tdevWallet\n      EXP \t\t\tdevWallet\n      SWAP1 \t\t\tdevWallet\n      DIV \t\t\tdevWallet\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\tdevWallet\n      AND \t\t\tdevWallet\n      DUP6 \t\t\tdevAmount\n      PUSH [tag] 249\t\t\tsuper._update\n      JUMP \t\t\tsuper._update(from, devWallet,...\n    tag 248\t\t\tsuper._update(from, devWallet,...\n      JUMPDEST \t\t\tsuper._update(from, devWallet,...\n    tag 247\t\t\tif (devAmount > 0) {\\r\\n      ...\n      JUMPDEST \t\t\tif (devAmount > 0) {\\r\\n      ...\n      PUSH [tag] 250\t\t\tsuper._update(from, to, sendAm...\n      DUP9 \t\t\tfrom\n      DUP9 \t\t\tto\n      DUP4 \t\t\tsendAmount\n      PUSH [tag] 249\t\t\tsuper._update\n      JUMP \t\t\tsuper._update(from, to, sendAm...\n    tag 250\t\t\tsuper._update(from, to, sendAm...\n      JUMPDEST \t\t\tsuper._update(from, to, sendAm...\n      POP \t\t\t{\\r\\n        require(!isBlackl...\n      POP \t\t\t{\\r\\n        require(!isBlackl...\n      POP \t\t\t{\\r\\n        require(!isBlackl...\n      POP \t\t\t{\\r\\n        require(!isBlackl...\n      POP \t\t\t{\\r\\n        require(!isBlackl...\n      POP \t\t\tfunction _update(address from,...\n      POP \t\t\tfunction _update(address from,...\n      POP \t\t\tfunction _update(address from,...\n      JUMP \t\t\tfunction _update(address from,...\n    tag 246\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 252\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 96C6FD1E00000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 253\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 90\t\t\t\n      JUMP \t\t\t\n    tag 253\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 252\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 254\t\t\t\n      DUP3 \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 207\t\t\t\n      JUMP \t\t\t\n    tag 254\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 249\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 256\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 2\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 257\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 258\t\t\t\n      JUMP \t\t\t\n    tag 257\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 259\t\t\t\n      JUMP \t\t\t\n    tag 256\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 260\t\t\t\n      JUMPI \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH E450D38C00000000000000000000000000000000000000000000000000000000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 261\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 199\t\t\t\n      JUMP \t\t\t\n    tag 261\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 260\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP7 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n    tag 259\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 262\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      PUSH 2\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      SUB \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 263\t\t\t\n      JUMP \t\t\t\n    tag 262\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      DUP5 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SLOAD \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n    tag 263\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF\t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 264\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 49\t\t\t\n      JUMP \t\t\t\n    tag 264\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 265\t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMPDEST \t\t\t-License-Identifier: MIT\\r\\npr...\n      PUSH 0\t\t\t\\r\\nimpo\n      DUP2 \t\t\ttoken\n      MLOAD \t\t\tracts/token/\n      SWAP1 \t\t\tpelin/contracts/token/\n      POP \t\t\tpelin/contracts/token/\n      SWAP2 \t\t\t-License-Identifier: MIT\\r\\npr...\n      SWAP1 \t\t\t-License-Identifier: MIT\\r\\npr...\n      POP \t\t\t-License-Identifier: MIT\\r\\npr...\n      JUMP \t\t\t-License-Identifier: MIT\\r\\npr...\n    tag 266\t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      JUMPDEST \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      PUSH 0\t\t\t ERC20, Own\n      DUP3 \t\t\tress =\n      DUP3 \t\t\tg(a\n      MSTORE \t\t\t mapping(address =>\n      PUSH 20\t\t\t  ma\n      DUP3 \t\t\t;\\r\\n\n      ADD \t\t\tsted;\\r\\n    map\n      SWAP1 \t\t\tivate isBlacklisted;\\r\\n    ma...\n      POP \t\t\tivate isBlacklisted;\\r\\n    ma...\n      SWAP3 \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      SWAP2 \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      POP \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      POP \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n      JUMP \t\t\tol\";\\r\\nimport \"@openzeppelin/...\n    tag 267\t\t\t => bool) private isExcludedFr...\n      JUMPDEST \t\t\t => bool) private isExcludedFr...\n      DUP3 \t\t\t    ui\n      DUP2 \t\t\tFee\n      DUP4 \t\t\tBur\n      MCOPY \t\t\t// 2% Burn Fee\\r\\n    uin\n      PUSH 0\t\t\te\n      DUP4 \t\t\t; // 1\n      DUP4 \t\t\te =\n      ADD \t\t\trdFee = 1; // 1%\n      MSTORE \t\t\tic rewardFee = 1; // 1% Rew\n      POP \t\t\t => bool) private isExcludedFr...\n      POP \t\t\t => bool) private isExcludedFr...\n      POP \t\t\t => bool) private isExcludedFr...\n      JUMP \t\t\t => bool) private isExcludedFr...\n    tag 268\t\t\tuint256 public devFee = 1; // ...\n      JUMPDEST \t\t\tuint256 public devFee = 1; // ...\n      PUSH 0\t\t\t\\n    u\n      PUSH 1F\t\t\tty\n      NOT \t\t\tuidity \n      PUSH 1F\t\t\t% \n      DUP4 \t\t\t5; //\n      ADD \t\t\te = 5; // 5% L\n      AND \t\t\ttyFee = 5; // 5% Liquidity F\n      SWAP1 \t\t\tic liquidityFee = 5; // 5% Liq...\n      POP \t\t\tic liquidityFee = 5; // 5% Liq...\n      SWAP2 \t\t\tuint256 public devFee = 1; // ...\n      SWAP1 \t\t\tuint256 public devFee = 1; // ...\n      POP \t\t\tuint256 public devFee = 1; // ...\n      JUMP \t\t\tuint256 public devFee = 1; // ...\n    tag 269\t\t\t256 public maxTxAmount; // Max...\n      JUMPDEST \t\t\t256 public maxTxAmount; // Max...\n      PUSH 0\t\t\t\\n  \n      PUSH [tag] 303\t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      DUP3 \t\t\t20(\"Z\n      PUSH [tag] 265\t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      JUMP \t\t\tvWallet;\\r\\n\\r\\n    constructo...\n    tag 303\t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      JUMPDEST \t\t\tvWallet;\\r\\n\\r\\n    constructo...\n      PUSH [tag] 304\t\t\twnable(msg.sender) {\\r\\n      ...\n      DUP2 \t\t\t10 ** \n      DUP6 \t\t\t00 \n      PUSH [tag] 266\t\t\twnable(msg.sender) {\\r\\n      ...\n      JUMP \t\t\twnable(msg.sender) {\\r\\n      ...\n    tag 304\t\t\twnable(msg.sender) {\\r\\n      ...\n      JUMPDEST \t\t\twnable(msg.sender) {\\r\\n      ...\n      SWAP4 \t\t\tGGI\") Ownable(msg.sender) {\\r\\...\n      POP \t\t\tGGI\") Ownable(msg.sender) {\\r\\...\n      PUSH [tag] 305\t\t\t;\\r\\n        _mint(msg.sender,...\n      DUP2 \t\t\tmount \n      DUP6 \t\t\taxT\n      PUSH 20\t\t\t    \n      DUP7 \t\t\ty);\\r\\n\n      ADD \t\t\tupply);\\r\\n       \n      PUSH [tag] 267\t\t\t;\\r\\n        _mint(msg.sender,...\n      JUMP \t\t\t;\\r\\n        _mint(msg.sender,...\n    tag 305\t\t\t;\\r\\n        _mint(msg.sender,...\n      JUMPDEST \t\t\t;\\r\\n        _mint(msg.sender,...\n      PUSH [tag] 306\t\t\t of total supply\\r\\n        de...\n      DUP2 \t\t\t    de\n      PUSH [tag] 268\t\t\t of total supply\\r\\n        de...\n      JUMP \t\t\t of total supply\\r\\n        de...\n    tag 306\t\t\t of total supply\\r\\n        de...\n      JUMPDEST \t\t\t of total supply\\r\\n        de...\n      DUP5 \t\t\t// \n      ADD \t\t\t00; // 1% of total supply\\r\\n ...\n      SWAP2 \t\t\tply / 100; // 1% of total supp...\n      POP \t\t\tply / 100; // 1% of total supp...\n      POP \t\t\t \\r\\n    address public devWal...\n      SWAP3 \t\t\t256 public maxTxAmount; // Max...\n      SWAP2 \t\t\t256 public maxTxAmount; // Max...\n      POP \t\t\t256 public maxTxAmount; // Max...\n      POP \t\t\t256 public maxTxAmount; // Max...\n      JUMP \t\t\t256 public maxTxAmount; // Max...\n    tag 35\t\t\tsender;\\r\\n        isExcludedF...\n      JUMPDEST \t\t\tsender;\\r\\n        isExcludedF...\n      PUSH 0\t\t\t {\\r\\n\n      PUSH 20\t\t\t  \n      DUP3 \t\t\t= true;\\r\\n\n      ADD \t\t\tled = true;\\r\\n    }\n      SWAP1 \t\t\tdingEnabled = true;\\r\\n    }\n      POP \t\t\tdingEnabled = true;\\r\\n    }\n      DUP2 \t\t\t bool sta\n      DUP2 \t\t\tcoun\n      SUB \t\t\ts account, bool stat\n      PUSH 0\t\t\td\n      DUP4 \t\t\tlacklist(\n      ADD \t\t\tsetBlacklist(addr\n      MSTORE \t\t\tnction setBlacklist(address ac...\n      PUSH [tag] 308\t\t\twner {\\r\\n        isBlackliste...\n      DUP2 \t\t\txclu\n      DUP5 \t\t\tunctio\n      PUSH [tag] 269\t\t\twner {\\r\\n        isBlackliste...\n      JUMP \t\t\twner {\\r\\n        isBlackliste...\n    tag 308\t\t\twner {\\r\\n        isBlackliste...\n      JUMPDEST \t\t\twner {\\r\\n        isBlackliste...\n      SWAP1 \t\t\tal onlyOwner {\\r\\n        isBl...\n      POP \t\t\tal onlyOwner {\\r\\n        isBl...\n      SWAP3 \t\t\tsender;\\r\\n        isExcludedF...\n      SWAP2 \t\t\tsender;\\r\\n        isExcludedF...\n      POP \t\t\tsender;\\r\\n        isExcludedF...\n      POP \t\t\tsender;\\r\\n        isExcludedF...\n      JUMP \t\t\tsender;\\r\\n        isExcludedF...\n    tag 271\t\t\tnt] = status;\\r\\n    }\\r\\n\\r\\n...\n      JUMPDEST \t\t\tnt] = status;\\r\\n    }\\r\\n\\r\\n...\n      PUSH 0\t\t\tl\n      PUSH 0\t\t\t6\n      REVERT \t\t\t uint256 _li\n    tag 273\t\t\tidityFee = _liquidityFee;\\r\\n ...\n      JUMPDEST \t\t\tidityFee = _liquidityFee;\\r\\n ...\n      PUSH 0\t\t\t   func\n      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\t\t\txAmount) external onlyOwner {\\...\n      DUP3 \t\t\t6 _ma\n      AND \t\t\tnt256 _maxTxAmount) external o...\n      SWAP1 \t\t\tTxAmount(uint256 _maxTxAmount)...\n      POP \t\t\tTxAmount(uint256 _maxTxAmount)...\n      SWAP2 \t\t\tidityFee = _liquidityFee;\\r\\n ...\n      SWAP1 \t\t\tidityFee = _liquidityFee;\\r\\n ...\n      POP \t\t\tidityFee = _liquidityFee;\\r\\n ...\n      JUMP \t\t\tidityFee = _liquidityFee;\\r\\n ...\n    tag 274\t\t\taxTxAmount;\\r\\n    }\\r\\n\\r\\n  ...\n      JUMPDEST \t\t\taxTxAmount;\\r\\n    }\\r\\n\\r\\n  ...\n      PUSH 0\t\t\ttDevWal\n      PUSH [tag] 314\t\t\t) external onlyOwner {\\r\\n\n      DUP3 \t\t\ter {\\r\n      PUSH [tag] 273\t\t\t) external onlyOwner {\\r\\n\n      JUMP \t\t\t) external onlyOwner {\\r\\n\n    tag 314\t\t\t) external onlyOwner {\\r\\n\n      JUMPDEST \t\t\t) external onlyOwner {\\r\\n\n      SWAP1 \t\t\t _devWallet) external onlyOwne...\n      POP \t\t\t _devWallet) external onlyOwne...\n      SWAP2 \t\t\taxTxAmount;\\r\\n    }\\r\\n\\r\\n  ...\n      SWAP1 \t\t\taxTxAmount;\\r\\n    }\\r\\n\\r\\n  ...\n      POP \t\t\taxTxAmount;\\r\\n    }\\r\\n\\r\\n  ...\n      JUMP \t\t\taxTxAmount;\\r\\n    }\\r\\n\\r\\n  ...\n    tag 275\t\t\tallet = _devWallet;\\r\\n    }\\r...\n      JUMPDEST \t\t\tallet = _devWallet;\\r\\n    }\\r...\n      PUSH [tag] 316\t\t\tto, uint256 amount) inte\n      DUP2 \t\t\t) int\n      PUSH [tag] 274\t\t\tto, uint256 amount) inte\n      JUMP \t\t\tto, uint256 amount) inte\n    tag 316\t\t\tto, uint256 amount) inte\n      JUMPDEST \t\t\tto, uint256 amount) inte\n      DUP2 \t\t\tddres\n      EQ \t\t\t, address to, uint256 amount) ...\n      PUSH [tag] 317\t\t\tdress from, address to, uint25...\n      JUMPI \t\t\tdress from, address to, uint25...\n      PUSH 0\t\t\t\\r\n      PUSH 0\t\t\te\n      REVERT \t\t\toverride {\\r\\n\n    tag 317\t\t\tdress from, address to, uint25...\n      JUMPDEST \t\t\tdress from, address to, uint25...\n      POP \t\t\tallet = _devWallet;\\r\\n    }\\r...\n      JUMP \t\t\tallet = _devWallet;\\r\\n    }\\r...\n    tag 276\t\t\te(!isBlacklisted[from] && !isB...\n      JUMPDEST \t\t\te(!isBlacklisted[from] && !isB...\n      PUSH 0\t\t\t\"Addr\n      DUP2 \t\t\tquire(\n      CALLDATALOAD \t\t\t;\\r\\n        require(t\n      SWAP1 \t\t\tklisted\");\\r\\n        require(...\n      POP \t\t\tklisted\");\\r\\n        require(...\n      PUSH [tag] 319\t\t\tbled || isExcludedFromFees[fro...\n      DUP2 \t\t\tfrom]\n      PUSH [tag] 275\t\t\tbled || isExcludedFromFees[fro...\n      JUMP \t\t\tbled || isExcludedFromFees[fro...\n    tag 319\t\t\tbled || isExcludedFromFees[fro...\n      JUMPDEST \t\t\tbled || isExcludedFromFees[fro...\n      SWAP3 \t\t\te(!isBlacklisted[from] && !isB...\n      SWAP2 \t\t\te(!isBlacklisted[from] && !isB...\n      POP \t\t\te(!isBlacklisted[from] && !isB...\n      POP \t\t\te(!isBlacklisted[from] && !isB...\n      JUMP \t\t\te(!isBlacklisted[from] && !isB...\n    tag 277\t\t\t not enabled yet\");\\r\\n       ...\n      JUMPDEST \t\t\t not enabled yet\");\\r\\n       ...\n      PUSH 0\t\t\tamount \n      DUP2 \t\t\tclude\n      SWAP1 \t\t\tunt || isExclude\n      POP \t\t\tunt || isExclude\n      SWAP2 \t\t\t not enabled yet\");\\r\\n       ...\n      SWAP1 \t\t\t not enabled yet\");\\r\\n       ...\n      POP \t\t\t not enabled yet\");\\r\\n       ...\n      JUMP \t\t\t not enabled yet\");\\r\\n       ...\n    tag 278\t\t\tom], \"Transfer amount exceeds ...\n      JUMPDEST \t\t\tom], \"Transfer amount exceeds ...\n      PUSH [tag] 322\t\t\t= (amount * burnFee) / 1\n      DUP2 \t\t\te) / \n      PUSH [tag] 277\t\t\t= (amount * burnFee) / 1\n      JUMP \t\t\t= (amount * burnFee) / 1\n    tag 322\t\t\t= (amount * burnFee) / 1\n      JUMPDEST \t\t\t= (amount * burnFee) / 1\n      DUP2 \t\t\tAmoun\n      EQ \t\t\turnAmount = (amount * burnFee)...\n      PUSH [tag] 323\t\t\t uint256 burnAmount = (amount ...\n      JUMPI \t\t\t uint256 burnAmount = (amount ...\n      PUSH 0\t\t\tn\n      PUSH 0\t\t\t \n      REVERT \t\t\t        uint\n    tag 323\t\t\t uint256 burnAmount = (amount ...\n      JUMPDEST \t\t\t uint256 burnAmount = (amount ...\n      POP \t\t\tom], \"Transfer amount exceeds ...\n      JUMP \t\t\tom], \"Transfer amount exceeds ...\n    tag 279\t\t\tnt = (amount * rewardFee) / 10...\n      JUMPDEST \t\t\tnt = (amount * rewardFee) / 10...\n      PUSH 0\t\t\t256 d\n      DUP2 \t\t\t0;\\r\\n  \n      CALLDATALOAD \t\t\t devFee) / 100;\\r\\n   \n      SWAP1 \t\t\t(amount * devFee) / 100;\\r\\n  ...\n      POP \t\t\t(amount * devFee) / 100;\\r\\n  ...\n      PUSH [tag] 325\t\t\t256 liquidityAmount = (amount ...\n      DUP2 \t\t\tnt * \n      PUSH [tag] 278\t\t\t256 liquidityAmount = (amount ...\n      JUMP \t\t\t256 liquidityAmount = (amount ...\n    tag 325\t\t\t256 liquidityAmount = (amount ...\n      JUMPDEST \t\t\t256 liquidityAmount = (amount ...\n      SWAP3 \t\t\tnt = (amount * rewardFee) / 10...\n      SWAP2 \t\t\tnt = (amount * rewardFee) / 10...\n      POP \t\t\tnt = (amount * rewardFee) / 10...\n      POP \t\t\tnt = (amount * rewardFee) / 10...\n      JUMP \t\t\tnt = (amount * rewardFee) / 10...\n    tag 38\t\t\t / 100;\\r\\n        uint256 sen...\n      JUMPDEST \t\t\t / 100;\\r\\n        uint256 sen...\n      PUSH 0\t\t\tount -\n      PUSH 0\t\t\tevAmou\n      PUSH 40\t\t\tou\n      DUP4 \t\t\t  if (bur\n      DUP6 \t\t\t\\n\\r\\n    \n      SUB \t\t\tnt;\\r\\n\\r\\n        if (burn\n      SLT \t\t\tAmount;\\r\\n\\r\\n        if (bur...\n      ISZERO \t\t\tityAmount;\\r\\n\\r\\n        if (...\n      PUSH [tag] 327\t\t\tityAmount;\\r\\n\\r\\n        if (...\n      JUMPI \t\t\tityAmount;\\r\\n\\r\\n        if (...\n      PUSH [tag] 328\t\t\t 0) {\\r\\n            _burn(fro...\n      PUSH [tag] 271\t\t\t 0) {\\r\\n            _burn(fro...\n      JUMP \t\t\t 0) {\\r\\n            _burn(fro...\n    tag 328\t\t\t 0) {\\r\\n            _burn(fro...\n      JUMPDEST \t\t\t 0) {\\r\\n            _burn(fro...\n    tag 327\t\t\tityAmount;\\r\\n\\r\\n        if (...\n      JUMPDEST \t\t\tityAmount;\\r\\n\\r\\n        if (...\n      PUSH 0\t\t\tv\n      PUSH [tag] 329\t\t\t     }\\r\\n\\r\\n        super._u...\n      DUP6 \t\t\tdAmount\n      DUP3 \t\t\t, to, \n      DUP7 \t\t\tupdate(fr\n      ADD \t\t\ter._update(from, to, s\n      PUSH [tag] 276\t\t\t     }\\r\\n\\r\\n        super._u...\n      JUMP \t\t\t     }\\r\\n\\r\\n        super._u...\n    tag 329\t\t\t     }\\r\\n\\r\\n        super._u...\n      JUMPDEST \t\t\t     }\\r\\n\\r\\n        super._u...\n      SWAP3 \t\t\tunt);\\r\\n        }\\r\\n\\r\\n    ...\n      POP \t\t\tunt);\\r\\n        }\\r\\n\\r\\n    ...\n      POP \t\t\t       super._update(from, dev...\n      PUSH 20\t\t\t\n      PUSH [tag] 330\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 330\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t / 100;\\r\\n        uint256 sen...\n      POP \t\t\t / 100;\\r\\n        uint256 sen...\n      SWAP3 \t\t\t / 100;\\r\\n        uint256 sen...\n      SWAP1 \t\t\t / 100;\\r\\n        uint256 sen...\n      POP \t\t\t / 100;\\r\\n        uint256 sen...\n      JUMP \t\t\t / 100;\\r\\n        uint256 sen...\n    tag 280\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 281\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 333\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP \t\t\t\n    tag 333\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 41\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 335\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 281\t\t\t\n      JUMP \t\t\t\n    tag 335\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 282\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 337\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP \t\t\t\n    tag 337\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 338\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 338\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 283\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 340\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 282\t\t\t\n      JUMP \t\t\t\n    tag 340\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 44\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 342\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 343\t\t\t\n      PUSH [tag] 271\t\t\t\n      JUMP \t\t\t\n    tag 343\t\t\t\n      JUMPDEST \t\t\t\n    tag 342\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 344\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP \t\t\t\n    tag 344\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 345\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 283\t\t\t\n      JUMP \t\t\t\n    tag 345\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 284\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 347\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 347\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 49\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 349\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 284\t\t\t\n      JUMP \t\t\t\n    tag 349\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 351\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 352\t\t\t\n      PUSH [tag] 271\t\t\t\n      JUMP \t\t\t\n    tag 352\t\t\t\n      JUMPDEST \t\t\t\n    tag 351\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 353\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP \t\t\t\n    tag 353\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 56\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 355\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 356\t\t\t\n      PUSH [tag] 271\t\t\t\n      JUMP \t\t\t\n    tag 356\t\t\t\n      JUMPDEST \t\t\t\n    tag 355\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 357\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP \t\t\t\n    tag 357\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 358\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP \t\t\t\n    tag 358\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      PUSH [tag] 359\t\t\t\n      DUP7 \t\t\t\n      DUP3 \t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 359\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      JUMP \t\t\t\n    tag 285\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH FF\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 286\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 362\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 285\t\t\t\n      JUMP \t\t\t\n    tag 362\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 62\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 364\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 286\t\t\t\n      JUMP \t\t\t\n    tag 364\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 71\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 80\t\t\t\n      DUP6 \t\t\t\n      DUP8 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 366\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 367\t\t\t\n      PUSH [tag] 271\t\t\t\n      JUMP \t\t\t\n    tag 367\t\t\t\n      JUMPDEST \t\t\t\n    tag 366\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 368\t\t\t\n      DUP8 \t\t\t\n      DUP3 \t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 368\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 369\t\t\t\n      DUP8 \t\t\t\n      DUP3 \t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 369\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      PUSH [tag] 370\t\t\t\n      DUP8 \t\t\t\n      DUP3 \t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 370\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 60\t\t\t\n      PUSH [tag] 371\t\t\t\n      DUP8 \t\t\t\n      DUP3 \t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 371\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      SWAP2 \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 287\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 373\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 274\t\t\t\n      JUMP \t\t\t\n    tag 373\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 90\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 375\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 287\t\t\t\n      JUMP \t\t\t\n    tag 375\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 109\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 377\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 378\t\t\t\n      PUSH [tag] 271\t\t\t\n      JUMP \t\t\t\n    tag 378\t\t\t\n      JUMPDEST \t\t\t\n    tag 377\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 379\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP \t\t\t\n    tag 379\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      PUSH [tag] 380\t\t\t\n      DUP6 \t\t\t\n      DUP3 \t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP \t\t\t\n    tag 380\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 114\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 382\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 383\t\t\t\n      PUSH [tag] 271\t\t\t\n      JUMP \t\t\t\n    tag 383\t\t\t\n      JUMPDEST \t\t\t\n    tag 382\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 384\t\t\t\n      DUP5 \t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 384\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 288\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 124\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 2\t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 387\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 387\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH [tag] 388\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 389\t\t\t\n      PUSH [tag] 288\t\t\t\n      JUMP \t\t\t\n    tag 389\t\t\t\n      JUMPDEST \t\t\t\n    tag 388\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 199\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 391\t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 287\t\t\t\n      JUMP \t\t\t\n    tag 391\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 392\t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 284\t\t\t\n      JUMP \t\t\t\n    tag 392\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 393\t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 284\t\t\t\n      JUMP \t\t\t\n    tag 393\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 289\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4164647265737320697320626C61636B6C697374656400000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 290\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 396\t\t\t\n      PUSH 16\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 266\t\t\t\n      JUMP \t\t\t\n    tag 396\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 397\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 289\t\t\t\n      JUMP \t\t\t\n    tag 397\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 220\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 399\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 290\t\t\t\n      JUMP \t\t\t\n    tag 399\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 291\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 54726164696E67206973206E6F7420656E61626C656420796574000000000000\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 292\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 402\t\t\t\n      PUSH 1A\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 266\t\t\t\n      JUMP \t\t\t\n    tag 402\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 403\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 291\t\t\t\n      JUMP \t\t\t\n    tag 403\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 224\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 405\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP \t\t\t\n    tag 405\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 293\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5472616E7366657220616D6F756E742065786365656473206D6178206C696D69\t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 7400000000000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 294\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 408\t\t\t\n      PUSH 21\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 266\t\t\t\n      JUMP \t\t\t\n    tag 408\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 409\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 293\t\t\t\n      JUMP \t\t\t\n    tag 409\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 228\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SUB \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH [tag] 411\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 294\t\t\t\n      JUMP \t\t\t\n    tag 411\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 295\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 230\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 414\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 414\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 415\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 415\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      MUL \t\t\t\n      PUSH [tag] 416\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 416\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      DUP5 \t\t\t\n      EQ \t\t\t\n      DUP4 \t\t\t\n      ISZERO \t\t\t\n      OR \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 418\t\t\t\n      PUSH [tag] 295\t\t\t\n      JUMP \t\t\t\n    tag 418\t\t\t\n      JUMPDEST \t\t\t\n    tag 417\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 296\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B7100000000000000000000000000000000000000000000000000000000\t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 12\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 232\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 421\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 421\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 422\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 422\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 423\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 424\t\t\t\n      PUSH [tag] 296\t\t\t\n      JUMP \t\t\t\n    tag 424\t\t\t\n      JUMPDEST \t\t\t\n    tag 423\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      DIV \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 240\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 426\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 426\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 427\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 427\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 428\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 429\t\t\t\n      PUSH [tag] 295\t\t\t\n      JUMP \t\t\t\n    tag 429\t\t\t\n      JUMPDEST \t\t\t\n    tag 428\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    tag 258\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 431\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 431\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 432\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 277\t\t\t\n      JUMP \t\t\t\n    tag 432\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 433\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 434\t\t\t\n      PUSH [tag] 295\t\t\t\n      JUMP \t\t\t\n    tag 434\t\t\t\n      JUMPDEST \t\t\t\n    tag 433\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP \t\t\t\n    .data\n"
}
